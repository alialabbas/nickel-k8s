# DO NOT EDIT THIS FILE MANUALLY
# Auto Generated Contracts
let lib = import "lib.ncl" in
{
  io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference = {
    port
      | std.number.Integer
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus = {
    conditions
      | (Array io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition)
      | optional,
  },
  io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec = {
    versionPriority
      | std.number.Integer,
    version
      | String
      | optional,
    service
      | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference
      | optional,
    insecureSkipTLSVerify
      | Bool
      | optional,
    groupPriorityMinimum
      | std.number.Integer,
    group
      | String
      | optional,
    caBundle
      | String
      | optional,
  },
  apiregistration.k8s.io.v1.APIServiceList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService),
    apiVersion
      | String
      | optional,
  },
  io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apiregistration.k8s.io.v1.APIService = {
    status
      | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus
      | optional,
    spec
      | io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.version.Info = {
    platform
      | String,
    minor
      | String,
    major
      | String,
    goVersion
      | String,
    gitVersion
      | String,
    gitTreeState
      | String,
    gitCommit
      | String,
    compiler
      | String,
    buildDate
      | String,
  },
  io.k8s.apimachinery.pkg.util.intstr.IntOrString = String,
  io.k8s.apimachinery.pkg.runtime.RawExtension = { .. },
  io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent = {
    type
      | String,
    object
      | io.k8s.apimachinery.pkg.runtime.RawExtension,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.Time = String,
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails = {
    uid
      | String
      | optional,
    retryAfterSeconds
      | std.number.Integer
      | optional,
    name
      | String
      | optional,
    kind
      | String
      | optional,
    group
      | String
      | optional,
    causes
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause)
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause = {
    reason
      | String
      | optional,
    message
      | String
      | optional,
    field
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.Status = {
    status
      | String
      | optional,
    reason
      | String
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    message
      | String
      | optional,
    kind
      | String
      | optional,
    details
      | io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails
      | optional,
    code
      | std.number.Integer
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR = {
    serverAddress
      | String,
    clientCIDR
      | String,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions = {
    uid
      | String
      | optional,
    resourceVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.Patch = { .. },
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference = {
    uid
      | String,
    name
      | String,
    kind
      | String,
    controller
      | Bool
      | optional,
    blockOwnerDeletion
      | Bool
      | optional,
    apiVersion
      | String,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta = {
    uid
      | String
      | optional,
    selfLink
      | String
      | optional,
    resourceVersion
      | String
      | optional,
    ownerReferences
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference)
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
    managedFields
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry)
      | optional,
    labels
      | { _ | String }
      | optional,
    generation
      | std.number.Integer
      | optional,
    generateName
      | String
      | optional,
    finalizers
      | (Array String)
      | optional,
    deletionTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    deletionGracePeriodSeconds
      | std.number.Integer
      | optional,
    creationTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    annotations
      | { _ | String }
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime = String,
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry = {
    time
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    subresource
      | String
      | optional,
    operation
      | String
      | optional,
    manager
      | String
      | optional,
    fieldsV1
      | io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1
      | optional,
    fieldsType
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta = {
    selfLink
      | String
      | optional,
    resourceVersion
      | String
      | optional,
    remainingItemCount
      | std.number.Integer
      | optional,
    continue
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement = {
    values
      | (Array String)
      | optional,
    operator
      | String,
    key
      | String,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector = {
    matchLabels
      | { _ | String }
      | optional,
    matchExpressions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement)
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery = {
    version
      | String,
    groupVersion
      | String,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1 = { .. },
  io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions = {
    propagationPolicy
      | String
      | optional,
    preconditions
      | io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions
      | optional,
    orphanDependents
      | Bool
      | optional,
    kind
      | String
      | optional,
    gracePeriodSeconds
      | std.number.Integer
      | optional,
    dryRun
      | (Array String)
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.Condition = {
    type
      | String,
    status
      | String,
    reason
      | String,
    observedGeneration
      | std.number.Integer
      | optional,
    message
      | String,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time,
  },
  v1.APIVersions = {
    versions
      | (Array String),
    serverAddressByClientCIDRs
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR),
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  v1.APIResourceList = {
    resources
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.APIResource),
    kind
      | String
      | optional,
    groupVersion
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.apis.meta.v1.APIResource = {
    version
      | String
      | optional,
    verbs
      | (Array String),
    storageVersionHash
      | String
      | optional,
    singularName
      | String,
    shortNames
      | (Array String)
      | optional,
    namespaced
      | Bool,
    name
      | String,
    kind
      | String,
    group
      | String
      | optional,
    categories
      | (Array String)
      | optional,
  },
  v1.APIGroupList = {
    kind
      | String
      | optional,
    groups
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup),
    apiVersion
      | String
      | optional,
  },
  v1.APIGroup = {
    versions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery),
    serverAddressByClientCIDRs
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR)
      | optional,
    preferredVersion
      | io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery
      | optional,
    name
      | String,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apimachinery.pkg.api.resource.Quantity = String,
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion = {
    conversionReviewVersions
      | (Array String),
    clientConfig
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig = {
    url
      | String
      | optional,
    service
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference
      | optional,
    caBundle
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule = {
    rule
      | String,
    reason
      | String
      | optional,
    messageExpression
      | String
      | optional,
    message
      | String
      | optional,
    fieldPath
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference = {
    port
      | std.number.Integer
      | optional,
    path
      | String
      | optional,
    namespace
      | String,
    name
      | String,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray = {
    ..
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool = {
    ..
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray = {
    ..
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps = {
    x-kubernetes-validations
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule)
      | optional,
    x-kubernetes-preserve-unknown-fields
      | Bool
      | optional,
    x-kubernetes-map-type
      | String
      | optional,
    x-kubernetes-list-type
      | String
      | optional,
    x-kubernetes-list-map-keys
      | (Array String)
      | optional,
    x-kubernetes-int-or-string
      | Bool
      | optional,
    x-kubernetes-embedded-resource
      | Bool
      | optional,
    uniqueItems
      | Bool
      | optional,
    type
      | String
      | optional,
    title
      | String
      | optional,
    required
      | (Array String)
      | optional,
    properties
      | { _ | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps }
      | optional,
    patternProperties
      | { _ | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps }
      | optional,
    pattern
      | String
      | optional,
    oneOf
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps)
      | optional,
    nullable
      | Bool
      | optional,
    not
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps
      | optional,
    multipleOf
      | Number
      | optional,
    minimum
      | Number
      | optional,
    minProperties
      | std.number.Integer
      | optional,
    minLength
      | std.number.Integer
      | optional,
    minItems
      | std.number.Integer
      | optional,
    maximum
      | Number
      | optional,
    maxProperties
      | std.number.Integer
      | optional,
    maxLength
      | std.number.Integer
      | optional,
    maxItems
      | std.number.Integer
      | optional,
    items
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray
      | optional,
    id
      | String
      | optional,
    format
      | String
      | optional,
    externalDocs
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation
      | optional,
    exclusiveMinimum
      | Bool
      | optional,
    exclusiveMaximum
      | Bool
      | optional,
    example
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON
      | optional,
    enum
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON)
      | optional,
    description
      | String
      | optional,
    dependencies
      | { _ | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray }
      | optional,
    definitions
      | { _ | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps }
      | optional,
    default
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON
      | optional,
    anyOf
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps)
      | optional,
    allOf
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps)
      | optional,
    additionalProperties
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool
      | optional,
    additionalItems
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool
      | optional,
    "$schema"
      | String
      | optional,
    "$ref"
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON = {
    ..
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation = {
    url
      | String
      | optional,
    description
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation = {
    openAPIV3Schema
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources = {
    status
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus
      | optional,
    scale
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus = { .. },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale = {
    statusReplicasPath
      | String,
    specReplicasPath
      | String,
    labelSelectorPath
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion = {
    subresources
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources
      | optional,
    storage
      | Bool,
    served
      | Bool,
    schema
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation
      | optional,
    name
      | String,
    deprecationWarning
      | String
      | optional,
    deprecated
      | Bool
      | optional,
    additionalPrinterColumns
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition)
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus = {
    storedVersions
      | (Array String)
      | optional,
    conditions
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition)
      | optional,
    acceptedNames
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec = {
    versions
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion),
    scope
      | String,
    preserveUnknownFields
      | Bool
      | optional,
    names
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames,
    group
      | String,
    conversion
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames = {
    singular
      | String
      | optional,
    shortNames
      | (Array String)
      | optional,
    plural
      | String,
    listKind
      | String
      | optional,
    kind
      | String,
    categories
      | (Array String)
      | optional,
  },
  apiextensions.k8s.io.v1.CustomResourceDefinitionList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition),
    apiVersion
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apiextensions.k8s.io.v1.CustomResourceDefinition = {
    status
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus
      | optional,
    spec
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion = {
    webhook
      | io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion
      | optional,
    strategy
      | String,
  },
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition = {
    type
      | String,
    priority
      | std.number.Integer
      | optional,
    name
      | String,
    jsonPath
      | String,
    format
      | String
      | optional,
    description
      | String
      | optional,
  },
  io.k8s.api.storage.v1.VolumeNodeResources = {
    count
      | std.number.Integer
      | optional,
  },
  io.k8s.api.storage.v1.VolumeError = {
    time
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    message
      | String
      | optional,
  },
  io.k8s.api.storage.v1.VolumeAttachmentStatus = {
    detachError
      | io.k8s.api.storage.v1.VolumeError
      | optional,
    attachmentMetadata
      | { _ | String }
      | optional,
    attached
      | Bool,
    attachError
      | io.k8s.api.storage.v1.VolumeError
      | optional,
  },
  io.k8s.api.storage.v1.VolumeAttachmentSpec = {
    source
      | io.k8s.api.storage.v1.VolumeAttachmentSource,
    nodeName
      | String,
    attacher
      | String,
  },
  io.k8s.api.storage.v1.VolumeAttachmentSource = {
    persistentVolumeName
      | String
      | optional,
    inlineVolumeSpec
      | io.k8s.api.core.v1.PersistentVolumeSpec
      | optional,
  },
  storage.k8s.io.v1.VolumeAttachmentList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.storage.v1.VolumeAttachment),
    apiVersion
      | String
      | optional,
  },
  storage.k8s.io.v1.VolumeAttachment = {
    status
      | io.k8s.api.storage.v1.VolumeAttachmentStatus
      | optional,
    spec
      | io.k8s.api.storage.v1.VolumeAttachmentSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.storage.v1.TokenRequest = {
    expirationSeconds
      | std.number.Integer
      | optional,
    audience
      | String,
  },
  storage.k8s.io.v1.StorageClassList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.storage.v1.StorageClass),
    apiVersion
      | String
      | optional,
  },
  storage.k8s.io.v1.StorageClass = {
    volumeBindingMode
      | String
      | optional,
    reclaimPolicy
      | String
      | optional,
    provisioner
      | String,
    parameters
      | { _ | String }
      | optional,
    mountOptions
      | (Array String)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
    allowedTopologies
      | (Array io.k8s.api.core.v1.TopologySelectorTerm)
      | optional,
    allowVolumeExpansion
      | Bool
      | optional,
  },
  storage.k8s.io.v1.CSIStorageCapacityList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.storage.v1.CSIStorageCapacity),
    apiVersion
      | String
      | optional,
  },
  storage.k8s.io.v1.CSIStorageCapacity = {
    storageClassName
      | String,
    nodeTopology
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    maximumVolumeSize
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    kind
      | String
      | optional,
    capacity
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.storage.v1.CSINodeSpec = {
    drivers
      | (Array io.k8s.api.storage.v1.CSINodeDriver),
  },
  storage.k8s.io.v1.CSINodeList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.storage.v1.CSINode),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.storage.v1.CSINodeDriver = {
    topologyKeys
      | (Array String)
      | optional,
    nodeID
      | String,
    name
      | String,
    allocatable
      | io.k8s.api.storage.v1.VolumeNodeResources
      | optional,
  },
  storage.k8s.io.v1.CSINode = {
    spec
      | io.k8s.api.storage.v1.CSINodeSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.storage.v1.CSIDriverSpec = {
    volumeLifecycleModes
      | (Array String)
      | optional,
    tokenRequests
      | (Array io.k8s.api.storage.v1.TokenRequest)
      | optional,
    storageCapacity
      | Bool
      | optional,
    seLinuxMount
      | Bool
      | optional,
    requiresRepublish
      | Bool
      | optional,
    podInfoOnMount
      | Bool
      | optional,
    fsGroupPolicy
      | String
      | optional,
    attachRequired
      | Bool
      | optional,
  },
  storage.k8s.io.v1.CSIDriverList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.storage.v1.CSIDriver),
    apiVersion
      | String
      | optional,
  },
  storage.k8s.io.v1.CSIDriver = {
    spec
      | io.k8s.api.storage.v1.CSIDriverSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  scheduling.k8s.io.v1.PriorityClassList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.scheduling.v1.PriorityClass),
    apiVersion
      | String
      | optional,
  },
  scheduling.k8s.io.v1.PriorityClass = {
    value
      | std.number.Integer,
    preemptionPolicy
      | String
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    globalDefault
      | Bool
      | optional,
    description
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceHandle = {
    driverName
      | String
      | optional,
    data
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClassParametersReference = {
    namespace
      | String
      | optional,
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClassList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.resource.v1alpha2.ResourceClass),
    apiVersion
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClass = {
    suitableNodes
      | io.k8s.api.core.v1.NodeSelector
      | optional,
    parametersRef
      | io.k8s.api.resource.v1alpha2.ResourceClassParametersReference
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    driverName
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec = {
    spec
      | io.k8s.api.resource.v1alpha2.ResourceClaimSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClaimTemplateList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.resource.v1alpha2.ResourceClaimTemplate),
    apiVersion
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClaimTemplate = {
    spec
      | io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimStatus = {
    reservedFor
      | (Array io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference)
      | optional,
    driverName
      | String
      | optional,
    deallocationRequested
      | Bool
      | optional,
    allocation
      | io.k8s.api.resource.v1alpha2.AllocationResult
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimSpec = {
    resourceClassName
      | String,
    parametersRef
      | io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference
      | optional,
    allocationMode
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus = {
    unsuitableNodes
      | (Array String)
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference = {
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClaimList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.resource.v1alpha2.ResourceClaim),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference = {
    uid
      | String,
    resource
      | String,
    name
      | String,
    apiGroup
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.ResourceClaim = {
    status
      | io.k8s.api.resource.v1alpha2.ResourceClaimStatus
      | optional,
    spec
      | io.k8s.api.resource.v1alpha2.ResourceClaimSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus = {
    resourceClaims
      | (Array io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus)
      | optional,
  },
  io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec = {
    selectedNode
      | String
      | optional,
    potentialNodes
      | (Array String)
      | optional,
  },
  resource.k8s.io.v1alpha2.PodSchedulingContextList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.resource.v1alpha2.PodSchedulingContext),
    apiVersion
      | String
      | optional,
  },
  resource.k8s.io.v1alpha2.PodSchedulingContext = {
    status
      | io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus
      | optional,
    spec
      | io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.resource.v1alpha2.AllocationResult = {
    shareable
      | Bool
      | optional,
    resourceHandles
      | (Array io.k8s.api.resource.v1alpha2.ResourceHandle)
      | optional,
    availableOnNodes
      | io.k8s.api.core.v1.NodeSelector
      | optional,
  },
  io.k8s.api.rbac.v1.Subject = {
    namespace
      | String
      | optional,
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  io.k8s.api.rbac.v1.RoleRef = {
    name
      | String,
    kind
      | String,
    apiGroup
      | String,
  },
  rbac.authorization.k8s.io.v1.RoleList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.rbac.v1.Role),
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.RoleBindingList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.rbac.v1.RoleBinding),
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.RoleBinding = {
    subjects
      | (Array io.k8s.api.rbac.v1.Subject)
      | optional,
    roleRef
      | io.k8s.api.rbac.v1.RoleRef,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.Role = {
    rules
      | (Array io.k8s.api.rbac.v1.PolicyRule)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.rbac.v1.PolicyRule = {
    verbs
      | (Array String),
    resources
      | (Array String)
      | optional,
    resourceNames
      | (Array String)
      | optional,
    nonResourceURLs
      | (Array String)
      | optional,
    apiGroups
      | (Array String)
      | optional,
  },
  rbac.authorization.k8s.io.v1.ClusterRoleList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.rbac.v1.ClusterRole),
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.ClusterRoleBindingList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.rbac.v1.ClusterRoleBinding),
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.ClusterRoleBinding = {
    subjects
      | (Array io.k8s.api.rbac.v1.Subject)
      | optional,
    roleRef
      | io.k8s.api.rbac.v1.RoleRef,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  rbac.authorization.k8s.io.v1.ClusterRole = {
    rules
      | (Array io.k8s.api.rbac.v1.PolicyRule)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
    aggregationRule
      | io.k8s.api.rbac.v1.AggregationRule
      | optional,
  },
  io.k8s.api.rbac.v1.AggregationRule = {
    clusterRoleSelectors
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector)
      | optional,
  },
  io.k8s.api.policy.v1.PodDisruptionBudgetStatus = {
    observedGeneration
      | std.number.Integer
      | optional,
    expectedPods
      | std.number.Integer,
    disruptionsAllowed
      | std.number.Integer,
    disruptedPods
      | { _ | io.k8s.apimachinery.pkg.apis.meta.v1.Time }
      | optional,
    desiredHealthy
      | std.number.Integer,
    currentHealthy
      | std.number.Integer,
    conditions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.Condition)
      | optional,
  },
  io.k8s.api.policy.v1.PodDisruptionBudgetSpec = {
    unhealthyPodEvictionPolicy
      | String
      | optional,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    minAvailable
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
    maxUnavailable
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
  },
  policy.v1.PodDisruptionBudgetList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.policy.v1.PodDisruptionBudget),
    apiVersion
      | String
      | optional,
  },
  policy.v1.PodDisruptionBudget = {
    status
      | io.k8s.api.policy.v1.PodDisruptionBudgetStatus
      | optional,
    spec
      | io.k8s.api.policy.v1.PodDisruptionBudgetSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  policy.v1.Eviction = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    deleteOptions
      | io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.node.v1.Scheduling = {
    tolerations
      | (Array io.k8s.api.core.v1.Toleration)
      | optional,
    nodeSelector
      | { _ | String }
      | optional,
  },
  node.k8s.io.v1.RuntimeClassList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.node.v1.RuntimeClass),
    apiVersion
      | String
      | optional,
  },
  node.k8s.io.v1.RuntimeClass = {
    scheduling
      | io.k8s.api.node.v1.Scheduling
      | optional,
    overhead
      | io.k8s.api.node.v1.Overhead
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    handler
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.node.v1.Overhead = {
    podFixed
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
  },
  io.k8s.api.networking.v1alpha1.ParentReference = {
    uid
      | String
      | optional,
    resource
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
    group
      | String
      | optional,
  },
  io.k8s.api.networking.v1alpha1.IPAddressSpec = {
    parentRef
      | io.k8s.api.networking.v1alpha1.ParentReference
      | optional,
  },
  networking.k8s.io.v1alpha1.IPAddressList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.networking.v1alpha1.IPAddress),
    apiVersion
      | String
      | optional,
  },
  networking.k8s.io.v1alpha1.IPAddress = {
    spec
      | io.k8s.api.networking.v1alpha1.IPAddressSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1alpha1.ClusterCIDRSpec = {
    perNodeHostBits
      | std.number.Integer,
    nodeSelector
      | io.k8s.api.core.v1.NodeSelector
      | optional,
    ipv6
      | String
      | optional,
    ipv4
      | String
      | optional,
  },
  networking.k8s.io.v1alpha1.ClusterCIDRList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.networking.v1alpha1.ClusterCIDR),
    apiVersion
      | String
      | optional,
  },
  networking.k8s.io.v1alpha1.ClusterCIDR = {
    spec
      | io.k8s.api.networking.v1alpha1.ClusterCIDRSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.ServiceBackendPort = {
    number
      | std.number.Integer
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.networking.v1.NetworkPolicySpec = {
    policyTypes
      | (Array String)
      | optional,
    podSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector,
    ingress
      | (Array io.k8s.api.networking.v1.NetworkPolicyIngressRule)
      | optional,
    egress
      | (Array io.k8s.api.networking.v1.NetworkPolicyEgressRule)
      | optional,
  },
  io.k8s.api.networking.v1.NetworkPolicyPort = {
    protocol
      | String
      | optional,
    port
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
    endPort
      | std.number.Integer
      | optional,
  },
  io.k8s.api.networking.v1.NetworkPolicyPeer = {
    podSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    ipBlock
      | io.k8s.api.networking.v1.IPBlock
      | optional,
  },
  networking.k8s.io.v1.NetworkPolicyList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.networking.v1.NetworkPolicy),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.NetworkPolicyIngressRule = {
    ports
      | (Array io.k8s.api.networking.v1.NetworkPolicyPort)
      | optional,
    from
      | (Array io.k8s.api.networking.v1.NetworkPolicyPeer)
      | optional,
  },
  io.k8s.api.networking.v1.NetworkPolicyEgressRule = {
    to
      | (Array io.k8s.api.networking.v1.NetworkPolicyPeer)
      | optional,
    ports
      | (Array io.k8s.api.networking.v1.NetworkPolicyPort)
      | optional,
  },
  networking.k8s.io.v1.NetworkPolicy = {
    spec
      | io.k8s.api.networking.v1.NetworkPolicySpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressTLS = {
    secretName
      | String
      | optional,
    hosts
      | (Array String)
      | optional,
  },
  io.k8s.api.networking.v1.IngressStatus = {
    loadBalancer
      | io.k8s.api.networking.v1.IngressLoadBalancerStatus
      | optional,
  },
  io.k8s.api.networking.v1.IngressSpec = {
    tls
      | (Array io.k8s.api.networking.v1.IngressTLS)
      | optional,
    rules
      | (Array io.k8s.api.networking.v1.IngressRule)
      | optional,
    ingressClassName
      | String
      | optional,
    defaultBackend
      | io.k8s.api.networking.v1.IngressBackend
      | optional,
  },
  io.k8s.api.networking.v1.IngressServiceBackend = {
    port
      | io.k8s.api.networking.v1.ServiceBackendPort
      | optional,
    name
      | String,
  },
  io.k8s.api.networking.v1.IngressRule = {
    http
      | io.k8s.api.networking.v1.HTTPIngressRuleValue
      | optional,
    host
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressPortStatus = {
    protocol
      | String,
    port
      | std.number.Integer,
    error
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressLoadBalancerStatus = {
    ingress
      | (Array io.k8s.api.networking.v1.IngressLoadBalancerIngress)
      | optional,
  },
  io.k8s.api.networking.v1.IngressLoadBalancerIngress = {
    ports
      | (Array io.k8s.api.networking.v1.IngressPortStatus)
      | optional,
    ip
      | String
      | optional,
    hostname
      | String
      | optional,
  },
  networking.k8s.io.v1.IngressList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.networking.v1.Ingress),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressClassSpec = {
    parameters
      | io.k8s.api.networking.v1.IngressClassParametersReference
      | optional,
    controller
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressClassParametersReference = {
    scope
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  networking.k8s.io.v1.IngressClassList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.networking.v1.IngressClass),
    apiVersion
      | String
      | optional,
  },
  networking.k8s.io.v1.IngressClass = {
    spec
      | io.k8s.api.networking.v1.IngressClassSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IngressBackend = {
    service
      | io.k8s.api.networking.v1.IngressServiceBackend
      | optional,
    resource
      | io.k8s.api.core.v1.TypedLocalObjectReference
      | optional,
  },
  networking.k8s.io.v1.Ingress = {
    status
      | io.k8s.api.networking.v1.IngressStatus
      | optional,
    spec
      | io.k8s.api.networking.v1.IngressSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.networking.v1.IPBlock = {
    except
      | (Array String)
      | optional,
    cidr
      | String,
  },
  io.k8s.api.networking.v1.HTTPIngressRuleValue = {
    paths
      | (Array io.k8s.api.networking.v1.HTTPIngressPath),
  },
  io.k8s.api.networking.v1.HTTPIngressPath = {
    pathType
      | String,
    path
      | String
      | optional,
    backend
      | io.k8s.api.networking.v1.IngressBackend,
  },
  io.k8s.api.flowcontrol.v1beta3.UserSubject = {
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta3.Subject = {
    user
      | io.k8s.api.flowcontrol.v1beta3.UserSubject
      | optional,
    serviceAccount
      | io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject
      | optional,
    kind
      | String,
    group
      | io.k8s.api.flowcontrol.v1beta3.GroupSubject
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject = {
    namespace
      | String,
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule = {
    verbs
      | (Array String),
    resources
      | (Array String),
    namespaces
      | (Array String)
      | optional,
    clusterScope
      | Bool
      | optional,
    apiGroups
      | (Array String),
  },
  io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration = {
    queues
      | std.number.Integer
      | optional,
    queueLengthLimit
      | std.number.Integer
      | optional,
    handSize
      | std.number.Integer
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus = {
    conditions
      | (Array io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec = {
    type
      | String,
    limited
      | io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration
      | optional,
    exempt
      | io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference = {
    name
      | String,
  },
  flowcontrol.apiserver.k8s.io.v1beta3.PriorityLevelConfigurationList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition = {
    type
      | String
      | optional,
    status
      | String
      | optional,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta3.PriorityLevelConfiguration = {
    status
      | io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus
      | optional,
    spec
      | io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects = {
    subjects
      | (Array io.k8s.api.flowcontrol.v1beta3.Subject),
    resourceRules
      | (Array io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule)
      | optional,
    nonResourceRules
      | (Array io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule = {
    verbs
      | (Array String),
    nonResourceURLs
      | (Array String),
  },
  io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration = {
    nominalConcurrencyShares
      | std.number.Integer
      | optional,
    limitResponse
      | io.k8s.api.flowcontrol.v1beta3.LimitResponse
      | optional,
    lendablePercent
      | std.number.Integer
      | optional,
    borrowingLimitPercent
      | std.number.Integer
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.LimitResponse = {
    type
      | String,
    queuing
      | io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.GroupSubject = {
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus = {
    conditions
      | (Array io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec = {
    rules
      | (Array io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects)
      | optional,
    priorityLevelConfiguration
      | io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference,
    matchingPrecedence
      | std.number.Integer
      | optional,
    distinguisherMethod
      | io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta3.FlowSchemaList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.flowcontrol.v1beta3.FlowSchema),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition = {
    type
      | String
      | optional,
    status
      | String
      | optional,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta3.FlowSchema = {
    status
      | io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus
      | optional,
    spec
      | io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod = {
    type
      | String,
  },
  io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration = {
    nominalConcurrencyShares
      | std.number.Integer
      | optional,
    lendablePercent
      | std.number.Integer
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.UserSubject = {
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta2.Subject = {
    user
      | io.k8s.api.flowcontrol.v1beta2.UserSubject
      | optional,
    serviceAccount
      | io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject
      | optional,
    kind
      | String,
    group
      | io.k8s.api.flowcontrol.v1beta2.GroupSubject
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.ServiceAccountSubject = {
    namespace
      | String,
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule = {
    verbs
      | (Array String),
    resources
      | (Array String),
    namespaces
      | (Array String)
      | optional,
    clusterScope
      | Bool
      | optional,
    apiGroups
      | (Array String),
  },
  io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration = {
    queues
      | std.number.Integer
      | optional,
    queueLengthLimit
      | std.number.Integer
      | optional,
    handSize
      | std.number.Integer
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationStatus = {
    conditions
      | (Array io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationCondition)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec = {
    type
      | String,
    limited
      | io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration
      | optional,
    exempt
      | io.k8s.api.flowcontrol.v1beta2.ExemptPriorityLevelConfiguration
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationReference = {
    name
      | String,
  },
  flowcontrol.apiserver.k8s.io.v1beta2.PriorityLevelConfigurationList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfiguration),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationCondition = {
    type
      | String
      | optional,
    status
      | String
      | optional,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta2.PriorityLevelConfiguration = {
    status
      | io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationStatus
      | optional,
    spec
      | io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects = {
    subjects
      | (Array io.k8s.api.flowcontrol.v1beta2.Subject),
    resourceRules
      | (Array io.k8s.api.flowcontrol.v1beta2.ResourcePolicyRule)
      | optional,
    nonResourceRules
      | (Array io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.NonResourcePolicyRule = {
    verbs
      | (Array String),
    nonResourceURLs
      | (Array String),
  },
  io.k8s.api.flowcontrol.v1beta2.LimitedPriorityLevelConfiguration = {
    limitResponse
      | io.k8s.api.flowcontrol.v1beta2.LimitResponse
      | optional,
    lendablePercent
      | std.number.Integer
      | optional,
    borrowingLimitPercent
      | std.number.Integer
      | optional,
    assuredConcurrencyShares
      | std.number.Integer
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.LimitResponse = {
    type
      | String,
    queuing
      | io.k8s.api.flowcontrol.v1beta2.QueuingConfiguration
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.GroupSubject = {
    name
      | String,
  },
  io.k8s.api.flowcontrol.v1beta2.FlowSchemaStatus = {
    conditions
      | (Array io.k8s.api.flowcontrol.v1beta2.FlowSchemaCondition)
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec = {
    rules
      | (Array io.k8s.api.flowcontrol.v1beta2.PolicyRulesWithSubjects)
      | optional,
    priorityLevelConfiguration
      | io.k8s.api.flowcontrol.v1beta2.PriorityLevelConfigurationReference,
    matchingPrecedence
      | std.number.Integer
      | optional,
    distinguisherMethod
      | io.k8s.api.flowcontrol.v1beta2.FlowDistinguisherMethod
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta2.FlowSchemaList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.flowcontrol.v1beta2.FlowSchema),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.FlowSchemaCondition = {
    type
      | String
      | optional,
    status
      | String
      | optional,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  flowcontrol.apiserver.k8s.io.v1beta2.FlowSchema = {
    status
      | io.k8s.api.flowcontrol.v1beta2.FlowSchemaStatus
      | optional,
    spec
      | io.k8s.api.flowcontrol.v1beta2.FlowSchemaSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.flowcontrol.v1beta2.FlowDistinguisherMethod = {
    type
      | String,
  },
  io.k8s.api.flowcontrol.v1beta2.ExemptPriorityLevelConfiguration = {
    nominalConcurrencyShares
      | std.number.Integer
      | optional,
    lendablePercent
      | std.number.Integer
      | optional,
  },
  io.k8s.api.events.v1.EventSeries = {
    lastObservedTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime,
    count
      | std.number.Integer,
  },
  events.k8s.io.v1.EventList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.events.v1.Event),
    apiVersion
      | String
      | optional,
  },
  events.k8s.io.v1.Event = {
    type
      | String
      | optional,
    series
      | io.k8s.api.events.v1.EventSeries
      | optional,
    reportingInstance
      | String
      | optional,
    reportingController
      | String
      | optional,
    related
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    regarding
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    reason
      | String
      | optional,
    note
      | String
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    eventTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime,
    deprecatedSource
      | io.k8s.api.core.v1.EventSource
      | optional,
    deprecatedLastTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    deprecatedFirstTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    deprecatedCount
      | std.number.Integer
      | optional,
    apiVersion
      | String
      | optional,
    action
      | String
      | optional,
  },
  io.k8s.api.discovery.v1.ForZone = {
    name
      | String,
  },
  discovery.k8s.io.v1.EndpointSliceList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.discovery.v1.EndpointSlice),
    apiVersion
      | String
      | optional,
  },
  discovery.k8s.io.v1.EndpointSlice = {
    ports
      | (Array io.k8s.api.discovery.v1.EndpointPort)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    endpoints
      | (Array io.k8s.api.discovery.v1.Endpoint),
    apiVersion
      | String
      | optional,
    addressType
      | String,
  },
  io.k8s.api.discovery.v1.EndpointPort = {
    protocol
      | String
      | optional,
    port
      | std.number.Integer
      | optional,
    name
      | String
      | optional,
    appProtocol
      | String
      | optional,
  },
  io.k8s.api.discovery.v1.EndpointHints = {
    forZones
      | (Array io.k8s.api.discovery.v1.ForZone)
      | optional,
  },
  io.k8s.api.discovery.v1.EndpointConditions = {
    terminating
      | Bool
      | optional,
    serving
      | Bool
      | optional,
    ready
      | Bool
      | optional,
  },
  io.k8s.api.discovery.v1.Endpoint = {
    zone
      | String
      | optional,
    targetRef
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    nodeName
      | String
      | optional,
    hostname
      | String
      | optional,
    hints
      | io.k8s.api.discovery.v1.EndpointHints
      | optional,
    deprecatedTopology
      | { _ | String }
      | optional,
    conditions
      | io.k8s.api.discovery.v1.EndpointConditions
      | optional,
    addresses
      | (Array String),
  },
  io.k8s.api.core.v1.WindowsSecurityContextOptions = {
    runAsUserName
      | String
      | optional,
    hostProcess
      | Bool
      | optional,
    gmsaCredentialSpecName
      | String
      | optional,
    gmsaCredentialSpec
      | String
      | optional,
  },
  io.k8s.api.core.v1.WeightedPodAffinityTerm = {
    weight
      | std.number.Integer,
    podAffinityTerm
      | io.k8s.api.core.v1.PodAffinityTerm,
  },
  io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource = {
    volumePath
      | String,
    storagePolicyName
      | String
      | optional,
    storagePolicyID
      | String
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.VolumeProjection = {
    serviceAccountToken
      | io.k8s.api.core.v1.ServiceAccountTokenProjection
      | optional,
    secret
      | io.k8s.api.core.v1.SecretProjection
      | optional,
    downwardAPI
      | io.k8s.api.core.v1.DownwardAPIProjection
      | optional,
    configMap
      | io.k8s.api.core.v1.ConfigMapProjection
      | optional,
  },
  io.k8s.api.core.v1.VolumeNodeAffinity = {
    required
      | io.k8s.api.core.v1.NodeSelector
      | optional,
  },
  io.k8s.api.core.v1.VolumeMount = {
    subPathExpr
      | String
      | optional,
    subPath
      | String
      | optional,
    readOnly
      | Bool
      | optional,
    name
      | String,
    mountPropagation
      | String
      | optional,
    mountPath
      | String,
  },
  io.k8s.api.core.v1.VolumeDevice = {
    name
      | String,
    devicePath
      | String,
  },
  io.k8s.api.core.v1.Volume = {
    vsphereVolume
      | io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource
      | optional,
    storageos
      | io.k8s.api.core.v1.StorageOSVolumeSource
      | optional,
    secret
      | io.k8s.api.core.v1.SecretVolumeSource
      | optional,
    scaleIO
      | io.k8s.api.core.v1.ScaleIOVolumeSource
      | optional,
    rbd
      | io.k8s.api.core.v1.RBDVolumeSource
      | optional,
    quobyte
      | io.k8s.api.core.v1.QuobyteVolumeSource
      | optional,
    projected
      | io.k8s.api.core.v1.ProjectedVolumeSource
      | optional,
    portworxVolume
      | io.k8s.api.core.v1.PortworxVolumeSource
      | optional,
    photonPersistentDisk
      | io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource
      | optional,
    persistentVolumeClaim
      | io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource
      | optional,
    nfs
      | io.k8s.api.core.v1.NFSVolumeSource
      | optional,
    name
      | String,
    iscsi
      | io.k8s.api.core.v1.ISCSIVolumeSource
      | optional,
    hostPath
      | io.k8s.api.core.v1.HostPathVolumeSource
      | optional,
    glusterfs
      | io.k8s.api.core.v1.GlusterfsVolumeSource
      | optional,
    gitRepo
      | io.k8s.api.core.v1.GitRepoVolumeSource
      | optional,
    gcePersistentDisk
      | io.k8s.api.core.v1.GCEPersistentDiskVolumeSource
      | optional,
    flocker
      | io.k8s.api.core.v1.FlockerVolumeSource
      | optional,
    flexVolume
      | io.k8s.api.core.v1.FlexVolumeSource
      | optional,
    fc
      | io.k8s.api.core.v1.FCVolumeSource
      | optional,
    ephemeral
      | io.k8s.api.core.v1.EphemeralVolumeSource
      | optional,
    emptyDir
      | io.k8s.api.core.v1.EmptyDirVolumeSource
      | optional,
    downwardAPI
      | io.k8s.api.core.v1.DownwardAPIVolumeSource
      | optional,
    csi
      | io.k8s.api.core.v1.CSIVolumeSource
      | optional,
    configMap
      | io.k8s.api.core.v1.ConfigMapVolumeSource
      | optional,
    cinder
      | io.k8s.api.core.v1.CinderVolumeSource
      | optional,
    cephfs
      | io.k8s.api.core.v1.CephFSVolumeSource
      | optional,
    azureFile
      | io.k8s.api.core.v1.AzureFileVolumeSource
      | optional,
    azureDisk
      | io.k8s.api.core.v1.AzureDiskVolumeSource
      | optional,
    awsElasticBlockStore
      | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
      | optional,
  },
  io.k8s.api.core.v1.TypedObjectReference = {
    namespace
      | String
      | optional,
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  io.k8s.api.core.v1.TypedLocalObjectReference = {
    name
      | String,
    kind
      | String,
    apiGroup
      | String
      | optional,
  },
  io.k8s.api.core.v1.TopologySpreadConstraint = {
    whenUnsatisfiable
      | String,
    topologyKey
      | String,
    nodeTaintsPolicy
      | String
      | optional,
    nodeAffinityPolicy
      | String
      | optional,
    minDomains
      | std.number.Integer
      | optional,
    maxSkew
      | std.number.Integer,
    matchLabelKeys
      | (Array String)
      | optional,
    labelSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
  },
  io.k8s.api.core.v1.TopologySelectorTerm = {
    matchLabelExpressions
      | (Array io.k8s.api.core.v1.TopologySelectorLabelRequirement)
      | optional,
  },
  io.k8s.api.core.v1.TopologySelectorLabelRequirement = {
    values
      | (Array String),
    key
      | String,
  },
  io.k8s.api.core.v1.Toleration = {
    value
      | String
      | optional,
    tolerationSeconds
      | std.number.Integer
      | optional,
    operator
      | String
      | optional,
    key
      | String
      | optional,
    effect
      | String
      | optional,
  },
  io.k8s.api.core.v1.Taint = {
    value
      | String
      | optional,
    timeAdded
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    key
      | String,
    effect
      | String,
  },
  io.k8s.api.core.v1.TCPSocketAction = {
    port
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString,
    host
      | String
      | optional,
  },
  io.k8s.api.core.v1.Sysctl = {
    value
      | String,
    name
      | String,
  },
  io.k8s.api.core.v1.StorageOSVolumeSource = {
    volumeNamespace
      | String
      | optional,
    volumeName
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.StorageOSPersistentVolumeSource = {
    volumeNamespace
      | String
      | optional,
    volumeName
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.SessionAffinityConfig = {
    clientIP
      | io.k8s.api.core.v1.ClientIPConfig
      | optional,
  },
  io.k8s.api.core.v1.ServiceStatus = {
    loadBalancer
      | io.k8s.api.core.v1.LoadBalancerStatus
      | optional,
    conditions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.Condition)
      | optional,
  },
  io.k8s.api.core.v1.ServiceSpec = {
    type
      | String
      | optional,
    sessionAffinityConfig
      | io.k8s.api.core.v1.SessionAffinityConfig
      | optional,
    sessionAffinity
      | String
      | optional,
    selector
      | { _ | String }
      | optional,
    publishNotReadyAddresses
      | Bool
      | optional,
    ports
      | (Array io.k8s.api.core.v1.ServicePort)
      | optional,
    loadBalancerSourceRanges
      | (Array String)
      | optional,
    loadBalancerIP
      | String
      | optional,
    loadBalancerClass
      | String
      | optional,
    ipFamilyPolicy
      | String
      | optional,
    ipFamilies
      | (Array String)
      | optional,
    internalTrafficPolicy
      | String
      | optional,
    healthCheckNodePort
      | std.number.Integer
      | optional,
    externalTrafficPolicy
      | String
      | optional,
    externalName
      | String
      | optional,
    externalIPs
      | (Array String)
      | optional,
    clusterIPs
      | (Array String)
      | optional,
    clusterIP
      | String
      | optional,
    allocateLoadBalancerNodePorts
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.ServicePort = {
    targetPort
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
    protocol
      | String
      | optional,
    port
      | std.number.Integer,
    nodePort
      | std.number.Integer
      | optional,
    name
      | String
      | optional,
    appProtocol
      | String
      | optional,
  },
  v1.ServiceList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Service),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ServiceAccountTokenProjection = {
    path
      | String,
    expirationSeconds
      | std.number.Integer
      | optional,
    audience
      | String
      | optional,
  },
  v1.ServiceAccountList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.ServiceAccount),
    apiVersion
      | String
      | optional,
  },
  v1.ServiceAccount = {
    secrets
      | (Array io.k8s.api.core.v1.ObjectReference)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    imagePullSecrets
      | (Array io.k8s.api.core.v1.LocalObjectReference)
      | optional,
    automountServiceAccountToken
      | Bool
      | optional,
    apiVersion
      | String
      | optional,
  },
  v1.Service = {
    status
      | io.k8s.api.core.v1.ServiceStatus
      | optional,
    spec
      | io.k8s.api.core.v1.ServiceSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.SecurityContext = {
    windowsOptions
      | io.k8s.api.core.v1.WindowsSecurityContextOptions
      | optional,
    seccompProfile
      | io.k8s.api.core.v1.SeccompProfile
      | optional,
    seLinuxOptions
      | io.k8s.api.core.v1.SELinuxOptions
      | optional,
    runAsUser
      | std.number.Integer
      | optional,
    runAsNonRoot
      | Bool
      | optional,
    runAsGroup
      | std.number.Integer
      | optional,
    readOnlyRootFilesystem
      | Bool
      | optional,
    procMount
      | String
      | optional,
    privileged
      | Bool
      | optional,
    capabilities
      | io.k8s.api.core.v1.Capabilities
      | optional,
    allowPrivilegeEscalation
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.SecretVolumeSource = {
    secretName
      | String
      | optional,
    optional
      | Bool
      | optional,
    items
      | (Array io.k8s.api.core.v1.KeyToPath)
      | optional,
    defaultMode
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.SecretReference = {
    namespace
      | String
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.core.v1.SecretProjection = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.KeyToPath)
      | optional,
  },
  v1.SecretList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Secret),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.SecretKeySelector = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
    key
      | String,
  },
  io.k8s.api.core.v1.SecretEnvSource = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
  },
  v1.Secret = {
    type
      | String
      | optional,
    stringData
      | { _ | String }
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    immutable
      | Bool
      | optional,
    data
      | { _ | String }
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.SeccompProfile = {
    type
      | String,
    localhostProfile
      | String
      | optional,
  },
  io.k8s.api.core.v1.ScopedResourceSelectorRequirement = {
    values
      | (Array String)
      | optional,
    scopeName
      | String,
    operator
      | String,
  },
  io.k8s.api.core.v1.ScopeSelector = {
    matchExpressions
      | (Array io.k8s.api.core.v1.ScopedResourceSelectorRequirement)
      | optional,
  },
  io.k8s.api.core.v1.ScaleIOVolumeSource = {
    volumeName
      | String
      | optional,
    system
      | String,
    storagePool
      | String
      | optional,
    storageMode
      | String
      | optional,
    sslEnabled
      | Bool
      | optional,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference,
    readOnly
      | Bool
      | optional,
    protectionDomain
      | String
      | optional,
    gateway
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.ScaleIOPersistentVolumeSource = {
    volumeName
      | String
      | optional,
    system
      | String,
    storagePool
      | String
      | optional,
    storageMode
      | String
      | optional,
    sslEnabled
      | Bool
      | optional,
    secretRef
      | io.k8s.api.core.v1.SecretReference,
    readOnly
      | Bool
      | optional,
    protectionDomain
      | String
      | optional,
    gateway
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.SELinuxOptions = {
    user
      | String
      | optional,
    type
      | String
      | optional,
    role
      | String
      | optional,
    level
      | String
      | optional,
  },
  io.k8s.api.core.v1.ResourceRequirements = {
    requests
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    limits
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    claims
      | (Array io.k8s.api.core.v1.ResourceClaim)
      | optional,
  },
  io.k8s.api.core.v1.ResourceQuotaStatus = {
    used
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    hard
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
  },
  io.k8s.api.core.v1.ResourceQuotaSpec = {
    scopes
      | (Array String)
      | optional,
    scopeSelector
      | io.k8s.api.core.v1.ScopeSelector
      | optional,
    hard
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
  },
  v1.ResourceQuotaList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.ResourceQuota),
    apiVersion
      | String
      | optional,
  },
  v1.ResourceQuota = {
    status
      | io.k8s.api.core.v1.ResourceQuotaStatus
      | optional,
    spec
      | io.k8s.api.core.v1.ResourceQuotaSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ResourceFieldSelector = {
    resource
      | String,
    divisor
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    containerName
      | String
      | optional,
  },
  io.k8s.api.core.v1.ResourceClaim = {
    name
      | String,
  },
  io.k8s.api.core.v1.ReplicationControllerStatus = {
    replicas
      | std.number.Integer,
    readyReplicas
      | std.number.Integer
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    fullyLabeledReplicas
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.ReplicationControllerCondition)
      | optional,
    availableReplicas
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.ReplicationControllerSpec = {
    template
      | io.k8s.api.core.v1.PodTemplateSpec
      | optional,
    selector
      | { _ | String }
      | optional,
    replicas
      | std.number.Integer
      | optional,
    minReadySeconds
      | std.number.Integer
      | optional,
  },
  v1.ReplicationControllerList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.ReplicationController),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ReplicationControllerCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  v1.ReplicationController = {
    status
      | io.k8s.api.core.v1.ReplicationControllerStatus
      | optional,
    spec
      | io.k8s.api.core.v1.ReplicationControllerSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.RBDVolumeSource = {
    user
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    pool
      | String
      | optional,
    monitors
      | (Array String),
    keyring
      | String
      | optional,
    image
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.RBDPersistentVolumeSource = {
    user
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    readOnly
      | Bool
      | optional,
    pool
      | String
      | optional,
    monitors
      | (Array String),
    keyring
      | String
      | optional,
    image
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.QuobyteVolumeSource = {
    volume
      | String,
    user
      | String
      | optional,
    tenant
      | String
      | optional,
    registry
      | String,
    readOnly
      | Bool
      | optional,
    group
      | String
      | optional,
  },
  io.k8s.api.core.v1.ProjectedVolumeSource = {
    sources
      | (Array io.k8s.api.core.v1.VolumeProjection)
      | optional,
    defaultMode
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.Probe = {
    timeoutSeconds
      | std.number.Integer
      | optional,
    terminationGracePeriodSeconds
      | std.number.Integer
      | optional,
    tcpSocket
      | io.k8s.api.core.v1.TCPSocketAction
      | optional,
    successThreshold
      | std.number.Integer
      | optional,
    periodSeconds
      | std.number.Integer
      | optional,
    initialDelaySeconds
      | std.number.Integer
      | optional,
    httpGet
      | io.k8s.api.core.v1.HTTPGetAction
      | optional,
    grpc
      | io.k8s.api.core.v1.GRPCAction
      | optional,
    failureThreshold
      | std.number.Integer
      | optional,
    exec
      | io.k8s.api.core.v1.ExecAction
      | optional,
  },
  io.k8s.api.core.v1.PreferredSchedulingTerm = {
    weight
      | std.number.Integer,
    preference
      | io.k8s.api.core.v1.NodeSelectorTerm,
  },
  io.k8s.api.core.v1.PortworxVolumeSource = {
    volumeID
      | String,
    readOnly
      | Bool
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.PortStatus = {
    protocol
      | String,
    port
      | std.number.Integer,
    error
      | String
      | optional,
  },
  io.k8s.api.core.v1.PodTemplateSpec = {
    spec
      | io.k8s.api.core.v1.PodSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
  },
  v1.PodTemplateList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.PodTemplate),
    apiVersion
      | String
      | optional,
  },
  v1.PodTemplate = {
    template
      | io.k8s.api.core.v1.PodTemplateSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.PodStatus = {
    startTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    resourceClaimStatuses
      | (Array io.k8s.api.core.v1.PodResourceClaimStatus)
      | optional,
    resize
      | String
      | optional,
    reason
      | String
      | optional,
    qosClass
      | String
      | optional,
    podIPs
      | (Array io.k8s.api.core.v1.PodIP)
      | optional,
    podIP
      | String
      | optional,
    phase
      | String
      | optional,
    nominatedNodeName
      | String
      | optional,
    message
      | String
      | optional,
    initContainerStatuses
      | (Array io.k8s.api.core.v1.ContainerStatus)
      | optional,
    hostIPs
      | (Array io.k8s.api.core.v1.HostIP)
      | optional,
    hostIP
      | String
      | optional,
    ephemeralContainerStatuses
      | (Array io.k8s.api.core.v1.ContainerStatus)
      | optional,
    containerStatuses
      | (Array io.k8s.api.core.v1.ContainerStatus)
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.PodCondition)
      | optional,
  },
  io.k8s.api.core.v1.PodSpec = {
    volumes
      | (Array io.k8s.api.core.v1.Volume)
      | optional,
    topologySpreadConstraints
      | (Array io.k8s.api.core.v1.TopologySpreadConstraint)
      | optional,
    tolerations
      | (Array io.k8s.api.core.v1.Toleration)
      | optional,
    terminationGracePeriodSeconds
      | std.number.Integer
      | optional,
    subdomain
      | String
      | optional,
    shareProcessNamespace
      | Bool
      | optional,
    setHostnameAsFQDN
      | Bool
      | optional,
    serviceAccountName
      | String
      | optional,
    serviceAccount
      | String
      | optional,
    securityContext
      | io.k8s.api.core.v1.PodSecurityContext
      | optional,
    schedulingGates
      | (Array io.k8s.api.core.v1.PodSchedulingGate)
      | optional,
    schedulerName
      | String
      | optional,
    runtimeClassName
      | String
      | optional,
    restartPolicy
      | String
      | optional,
    resourceClaims
      | (Array io.k8s.api.core.v1.PodResourceClaim)
      | optional,
    readinessGates
      | (Array io.k8s.api.core.v1.PodReadinessGate)
      | optional,
    priorityClassName
      | String
      | optional,
    priority
      | std.number.Integer
      | optional,
    preemptionPolicy
      | String
      | optional,
    overhead
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    os
      | io.k8s.api.core.v1.PodOS
      | optional,
    nodeSelector
      | { _ | String }
      | optional,
    nodeName
      | String
      | optional,
    initContainers
      | (Array io.k8s.api.core.v1.Container)
      | optional,
    imagePullSecrets
      | (Array io.k8s.api.core.v1.LocalObjectReference)
      | optional,
    hostname
      | String
      | optional,
    hostUsers
      | Bool
      | optional,
    hostPID
      | Bool
      | optional,
    hostNetwork
      | Bool
      | optional,
    hostIPC
      | Bool
      | optional,
    hostAliases
      | (Array io.k8s.api.core.v1.HostAlias)
      | optional,
    ephemeralContainers
      | (Array io.k8s.api.core.v1.EphemeralContainer)
      | optional,
    enableServiceLinks
      | Bool
      | optional,
    dnsPolicy
      | String
      | optional,
    dnsConfig
      | io.k8s.api.core.v1.PodDNSConfig
      | optional,
    containers
      | (Array io.k8s.api.core.v1.Container),
    automountServiceAccountToken
      | Bool
      | optional,
    affinity
      | io.k8s.api.core.v1.Affinity
      | optional,
    activeDeadlineSeconds
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.PodSecurityContext = {
    windowsOptions
      | io.k8s.api.core.v1.WindowsSecurityContextOptions
      | optional,
    sysctls
      | (Array io.k8s.api.core.v1.Sysctl)
      | optional,
    supplementalGroups
      | (Array std.number.Integer)
      | optional,
    seccompProfile
      | io.k8s.api.core.v1.SeccompProfile
      | optional,
    seLinuxOptions
      | io.k8s.api.core.v1.SELinuxOptions
      | optional,
    runAsUser
      | std.number.Integer
      | optional,
    runAsNonRoot
      | Bool
      | optional,
    runAsGroup
      | std.number.Integer
      | optional,
    fsGroupChangePolicy
      | String
      | optional,
    fsGroup
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.PodSchedulingGate = {
    name
      | String,
  },
  io.k8s.api.core.v1.PodResourceClaimStatus = {
    resourceClaimName
      | String
      | optional,
    name
      | String,
  },
  io.k8s.api.core.v1.PodResourceClaim = {
    source
      | io.k8s.api.core.v1.ClaimSource
      | optional,
    name
      | String,
  },
  io.k8s.api.core.v1.PodReadinessGate = {
    conditionType
      | String,
  },
  io.k8s.api.core.v1.PodOS = {
    name
      | String,
  },
  v1.PodList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Pod),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.PodIP = {
    ip
      | String
      | optional,
  },
  io.k8s.api.core.v1.PodDNSConfigOption = {
    value
      | String
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.core.v1.PodDNSConfig = {
    searches
      | (Array String)
      | optional,
    options
      | (Array io.k8s.api.core.v1.PodDNSConfigOption)
      | optional,
    nameservers
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.PodCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastProbeTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  io.k8s.api.core.v1.PodAntiAffinity = {
    requiredDuringSchedulingIgnoredDuringExecution
      | (Array io.k8s.api.core.v1.PodAffinityTerm)
      | optional,
    preferredDuringSchedulingIgnoredDuringExecution
      | (Array io.k8s.api.core.v1.WeightedPodAffinityTerm)
      | optional,
  },
  io.k8s.api.core.v1.PodAffinityTerm = {
    topologyKey
      | String,
    namespaces
      | (Array String)
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    labelSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
  },
  io.k8s.api.core.v1.PodAffinity = {
    requiredDuringSchedulingIgnoredDuringExecution
      | (Array io.k8s.api.core.v1.PodAffinityTerm)
      | optional,
    preferredDuringSchedulingIgnoredDuringExecution
      | (Array io.k8s.api.core.v1.WeightedPodAffinityTerm)
      | optional,
  },
  v1.Pod = {
    status
      | io.k8s.api.core.v1.PodStatus
      | optional,
    spec
      | io.k8s.api.core.v1.PodSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource = {
    pdID
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeStatus = {
    reason
      | String
      | optional,
    phase
      | String
      | optional,
    message
      | String
      | optional,
    lastPhaseTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeSpec = {
    vsphereVolume
      | io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource
      | optional,
    volumeMode
      | String
      | optional,
    storageos
      | io.k8s.api.core.v1.StorageOSPersistentVolumeSource
      | optional,
    storageClassName
      | String
      | optional,
    scaleIO
      | io.k8s.api.core.v1.ScaleIOPersistentVolumeSource
      | optional,
    rbd
      | io.k8s.api.core.v1.RBDPersistentVolumeSource
      | optional,
    quobyte
      | io.k8s.api.core.v1.QuobyteVolumeSource
      | optional,
    portworxVolume
      | io.k8s.api.core.v1.PortworxVolumeSource
      | optional,
    photonPersistentDisk
      | io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource
      | optional,
    persistentVolumeReclaimPolicy
      | String
      | optional,
    nodeAffinity
      | io.k8s.api.core.v1.VolumeNodeAffinity
      | optional,
    nfs
      | io.k8s.api.core.v1.NFSVolumeSource
      | optional,
    mountOptions
      | (Array String)
      | optional,
    local
      | io.k8s.api.core.v1.LocalVolumeSource
      | optional,
    iscsi
      | io.k8s.api.core.v1.ISCSIPersistentVolumeSource
      | optional,
    hostPath
      | io.k8s.api.core.v1.HostPathVolumeSource
      | optional,
    glusterfs
      | io.k8s.api.core.v1.GlusterfsPersistentVolumeSource
      | optional,
    gcePersistentDisk
      | io.k8s.api.core.v1.GCEPersistentDiskVolumeSource
      | optional,
    flocker
      | io.k8s.api.core.v1.FlockerVolumeSource
      | optional,
    flexVolume
      | io.k8s.api.core.v1.FlexPersistentVolumeSource
      | optional,
    fc
      | io.k8s.api.core.v1.FCVolumeSource
      | optional,
    csi
      | io.k8s.api.core.v1.CSIPersistentVolumeSource
      | optional,
    claimRef
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    cinder
      | io.k8s.api.core.v1.CinderPersistentVolumeSource
      | optional,
    cephfs
      | io.k8s.api.core.v1.CephFSPersistentVolumeSource
      | optional,
    capacity
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    azureFile
      | io.k8s.api.core.v1.AzureFilePersistentVolumeSource
      | optional,
    azureDisk
      | io.k8s.api.core.v1.AzureDiskVolumeSource
      | optional,
    awsElasticBlockStore
      | io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource
      | optional,
    accessModes
      | (Array String)
      | optional,
  },
  v1.PersistentVolumeList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.PersistentVolume),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource = {
    readOnly
      | Bool
      | optional,
    claimName
      | String,
  },
  io.k8s.api.core.v1.PersistentVolumeClaimTemplate = {
    spec
      | io.k8s.api.core.v1.PersistentVolumeClaimSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeClaimStatus = {
    phase
      | String
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.PersistentVolumeClaimCondition)
      | optional,
    capacity
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    allocatedResources
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    allocatedResourceStatuses
      | { _ | String }
      | optional,
    accessModes
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeClaimSpec = {
    volumeName
      | String
      | optional,
    volumeMode
      | String
      | optional,
    storageClassName
      | String
      | optional,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    resources
      | io.k8s.api.core.v1.ResourceRequirements
      | optional,
    dataSourceRef
      | io.k8s.api.core.v1.TypedObjectReference
      | optional,
    dataSource
      | io.k8s.api.core.v1.TypedLocalObjectReference
      | optional,
    accessModes
      | (Array String)
      | optional,
  },
  v1.PersistentVolumeClaimList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.PersistentVolumeClaim),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.PersistentVolumeClaimCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastProbeTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  v1.PersistentVolumeClaim = {
    status
      | io.k8s.api.core.v1.PersistentVolumeClaimStatus
      | optional,
    spec
      | io.k8s.api.core.v1.PersistentVolumeClaimSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  v1.PersistentVolume = {
    status
      | io.k8s.api.core.v1.PersistentVolumeStatus
      | optional,
    spec
      | io.k8s.api.core.v1.PersistentVolumeSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ObjectReference = {
    uid
      | String
      | optional,
    resourceVersion
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
    kind
      | String
      | optional,
    fieldPath
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ObjectFieldSelector = {
    fieldPath
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.NodeSystemInfo = {
    systemUUID
      | String,
    osImage
      | String,
    operatingSystem
      | String,
    machineID
      | String,
    kubeletVersion
      | String,
    kubeProxyVersion
      | String,
    kernelVersion
      | String,
    containerRuntimeVersion
      | String,
    bootID
      | String,
    architecture
      | String,
  },
  io.k8s.api.core.v1.NodeStatus = {
    volumesInUse
      | (Array String)
      | optional,
    volumesAttached
      | (Array io.k8s.api.core.v1.AttachedVolume)
      | optional,
    phase
      | String
      | optional,
    nodeInfo
      | io.k8s.api.core.v1.NodeSystemInfo
      | optional,
    images
      | (Array io.k8s.api.core.v1.ContainerImage)
      | optional,
    daemonEndpoints
      | io.k8s.api.core.v1.NodeDaemonEndpoints
      | optional,
    config
      | io.k8s.api.core.v1.NodeConfigStatus
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.NodeCondition)
      | optional,
    capacity
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    allocatable
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    addresses
      | (Array io.k8s.api.core.v1.NodeAddress)
      | optional,
  },
  io.k8s.api.core.v1.NodeSpec = {
    unschedulable
      | Bool
      | optional,
    taints
      | (Array io.k8s.api.core.v1.Taint)
      | optional,
    providerID
      | String
      | optional,
    podCIDRs
      | (Array String)
      | optional,
    podCIDR
      | String
      | optional,
    externalID
      | String
      | optional,
    configSource
      | io.k8s.api.core.v1.NodeConfigSource
      | optional,
  },
  io.k8s.api.core.v1.NodeSelectorTerm = {
    matchFields
      | (Array io.k8s.api.core.v1.NodeSelectorRequirement)
      | optional,
    matchExpressions
      | (Array io.k8s.api.core.v1.NodeSelectorRequirement)
      | optional,
  },
  io.k8s.api.core.v1.NodeSelectorRequirement = {
    values
      | (Array String)
      | optional,
    operator
      | String,
    key
      | String,
  },
  io.k8s.api.core.v1.NodeSelector = {
    nodeSelectorTerms
      | (Array io.k8s.api.core.v1.NodeSelectorTerm),
  },
  v1.NodeList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Node),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.NodeDaemonEndpoints = {
    kubeletEndpoint
      | io.k8s.api.core.v1.DaemonEndpoint
      | optional,
  },
  io.k8s.api.core.v1.NodeConfigStatus = {
    lastKnownGood
      | io.k8s.api.core.v1.NodeConfigSource
      | optional,
    error
      | String
      | optional,
    assigned
      | io.k8s.api.core.v1.NodeConfigSource
      | optional,
    active
      | io.k8s.api.core.v1.NodeConfigSource
      | optional,
  },
  io.k8s.api.core.v1.NodeConfigSource = {
    configMap
      | io.k8s.api.core.v1.ConfigMapNodeConfigSource
      | optional,
  },
  io.k8s.api.core.v1.NodeCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastHeartbeatTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  io.k8s.api.core.v1.NodeAffinity = {
    requiredDuringSchedulingIgnoredDuringExecution
      | io.k8s.api.core.v1.NodeSelector
      | optional,
    preferredDuringSchedulingIgnoredDuringExecution
      | (Array io.k8s.api.core.v1.PreferredSchedulingTerm)
      | optional,
  },
  io.k8s.api.core.v1.NodeAddress = {
    type
      | String,
    address
      | String,
  },
  v1.Node = {
    status
      | io.k8s.api.core.v1.NodeStatus
      | optional,
    spec
      | io.k8s.api.core.v1.NodeSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.NamespaceStatus = {
    phase
      | String
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.NamespaceCondition)
      | optional,
  },
  io.k8s.api.core.v1.NamespaceSpec = {
    finalizers
      | (Array String)
      | optional,
  },
  v1.NamespaceList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Namespace),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.NamespaceCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  v1.Namespace = {
    status
      | io.k8s.api.core.v1.NamespaceStatus
      | optional,
    spec
      | io.k8s.api.core.v1.NamespaceSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.NFSVolumeSource = {
    server
      | String,
    readOnly
      | Bool
      | optional,
    path
      | String,
  },
  io.k8s.api.core.v1.LocalVolumeSource = {
    path
      | String,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.LocalObjectReference = {
    name
      | String
      | optional,
  },
  io.k8s.api.core.v1.LoadBalancerStatus = {
    ingress
      | (Array io.k8s.api.core.v1.LoadBalancerIngress)
      | optional,
  },
  io.k8s.api.core.v1.LoadBalancerIngress = {
    ports
      | (Array io.k8s.api.core.v1.PortStatus)
      | optional,
    ip
      | String
      | optional,
    hostname
      | String
      | optional,
  },
  io.k8s.api.core.v1.LimitRangeSpec = {
    limits
      | (Array io.k8s.api.core.v1.LimitRangeItem),
  },
  v1.LimitRangeList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.LimitRange),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.LimitRangeItem = {
    type
      | String,
    min
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    maxLimitRequestRatio
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    max
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    defaultRequest
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
    default
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
  },
  v1.LimitRange = {
    spec
      | io.k8s.api.core.v1.LimitRangeSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.LifecycleHandler = {
    tcpSocket
      | io.k8s.api.core.v1.TCPSocketAction
      | optional,
    httpGet
      | io.k8s.api.core.v1.HTTPGetAction
      | optional,
    exec
      | io.k8s.api.core.v1.ExecAction
      | optional,
  },
  io.k8s.api.core.v1.Lifecycle = {
    preStop
      | io.k8s.api.core.v1.LifecycleHandler
      | optional,
    postStart
      | io.k8s.api.core.v1.LifecycleHandler
      | optional,
  },
  io.k8s.api.core.v1.KeyToPath = {
    path
      | String,
    mode
      | std.number.Integer
      | optional,
    key
      | String,
  },
  io.k8s.api.core.v1.ISCSIVolumeSource = {
    targetPortal
      | String,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    portals
      | (Array String)
      | optional,
    lun
      | std.number.Integer,
    iscsiInterface
      | String
      | optional,
    iqn
      | String,
    initiatorName
      | String
      | optional,
    fsType
      | String
      | optional,
    chapAuthSession
      | Bool
      | optional,
    chapAuthDiscovery
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.ISCSIPersistentVolumeSource = {
    targetPortal
      | String,
    secretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    readOnly
      | Bool
      | optional,
    portals
      | (Array String)
      | optional,
    lun
      | std.number.Integer,
    iscsiInterface
      | String
      | optional,
    iqn
      | String,
    initiatorName
      | String
      | optional,
    fsType
      | String
      | optional,
    chapAuthSession
      | Bool
      | optional,
    chapAuthDiscovery
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.HostPathVolumeSource = {
    type
      | String
      | optional,
    path
      | String,
  },
  io.k8s.api.core.v1.HostIP = {
    ip
      | String
      | optional,
  },
  io.k8s.api.core.v1.HostAlias = {
    ip
      | String
      | optional,
    hostnames
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.HTTPHeader = {
    value
      | String,
    name
      | String,
  },
  io.k8s.api.core.v1.HTTPGetAction = {
    scheme
      | String
      | optional,
    port
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString,
    path
      | String
      | optional,
    httpHeaders
      | (Array io.k8s.api.core.v1.HTTPHeader)
      | optional,
    host
      | String
      | optional,
  },
  io.k8s.api.core.v1.GlusterfsVolumeSource = {
    readOnly
      | Bool
      | optional,
    path
      | String,
    endpoints
      | String,
  },
  io.k8s.api.core.v1.GlusterfsPersistentVolumeSource = {
    readOnly
      | Bool
      | optional,
    path
      | String,
    endpointsNamespace
      | String
      | optional,
    endpoints
      | String,
  },
  io.k8s.api.core.v1.GitRepoVolumeSource = {
    revision
      | String
      | optional,
    repository
      | String,
    directory
      | String
      | optional,
  },
  io.k8s.api.core.v1.GRPCAction = {
    service
      | String
      | optional,
    port
      | std.number.Integer,
  },
  io.k8s.api.core.v1.GCEPersistentDiskVolumeSource = {
    readOnly
      | Bool
      | optional,
    pdName
      | String,
    partition
      | std.number.Integer
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.FlockerVolumeSource = {
    datasetUUID
      | String
      | optional,
    datasetName
      | String
      | optional,
  },
  io.k8s.api.core.v1.FlexVolumeSource = {
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    options
      | { _ | String }
      | optional,
    fsType
      | String
      | optional,
    driver
      | String,
  },
  io.k8s.api.core.v1.FlexPersistentVolumeSource = {
    secretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    readOnly
      | Bool
      | optional,
    options
      | { _ | String }
      | optional,
    fsType
      | String
      | optional,
    driver
      | String,
  },
  io.k8s.api.core.v1.FCVolumeSource = {
    wwids
      | (Array String)
      | optional,
    targetWWNs
      | (Array String)
      | optional,
    readOnly
      | Bool
      | optional,
    lun
      | std.number.Integer
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.ExecAction = {
    command
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.EventSource = {
    host
      | String
      | optional,
    component
      | String
      | optional,
  },
  io.k8s.api.core.v1.EventSeries = {
    lastObservedTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime
      | optional,
    count
      | std.number.Integer
      | optional,
  },
  v1.EventList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Event),
    apiVersion
      | String
      | optional,
  },
  v1.Event = {
    type
      | String
      | optional,
    source
      | io.k8s.api.core.v1.EventSource
      | optional,
    series
      | io.k8s.api.core.v1.EventSeries
      | optional,
    reportingInstance
      | String
      | optional,
    reportingComponent
      | String
      | optional,
    related
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    reason
      | String
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta,
    message
      | String
      | optional,
    lastTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    kind
      | String
      | optional,
    involvedObject
      | io.k8s.api.core.v1.ObjectReference,
    firstTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    eventTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime
      | optional,
    count
      | std.number.Integer
      | optional,
    apiVersion
      | String
      | optional,
    action
      | String
      | optional,
  },
  io.k8s.api.core.v1.EphemeralVolumeSource = {
    volumeClaimTemplate
      | io.k8s.api.core.v1.PersistentVolumeClaimTemplate
      | optional,
  },
  io.k8s.api.core.v1.EphemeralContainer = {
    workingDir
      | String
      | optional,
    volumeMounts
      | (Array io.k8s.api.core.v1.VolumeMount)
      | optional,
    volumeDevices
      | (Array io.k8s.api.core.v1.VolumeDevice)
      | optional,
    tty
      | Bool
      | optional,
    terminationMessagePolicy
      | String
      | optional,
    terminationMessagePath
      | String
      | optional,
    targetContainerName
      | String
      | optional,
    stdinOnce
      | Bool
      | optional,
    stdin
      | Bool
      | optional,
    startupProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    securityContext
      | io.k8s.api.core.v1.SecurityContext
      | optional,
    restartPolicy
      | String
      | optional,
    resources
      | io.k8s.api.core.v1.ResourceRequirements
      | optional,
    resizePolicy
      | (Array io.k8s.api.core.v1.ContainerResizePolicy)
      | optional,
    readinessProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    ports
      | (Array io.k8s.api.core.v1.ContainerPort)
      | optional,
    name
      | String,
    livenessProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    lifecycle
      | io.k8s.api.core.v1.Lifecycle
      | optional,
    imagePullPolicy
      | String
      | optional,
    image
      | String
      | optional,
    envFrom
      | (Array io.k8s.api.core.v1.EnvFromSource)
      | optional,
    env
      | (Array io.k8s.api.core.v1.EnvVar)
      | optional,
    command
      | (Array String)
      | optional,
    args
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.EnvVarSource = {
    secretKeyRef
      | io.k8s.api.core.v1.SecretKeySelector
      | optional,
    resourceFieldRef
      | io.k8s.api.core.v1.ResourceFieldSelector
      | optional,
    fieldRef
      | io.k8s.api.core.v1.ObjectFieldSelector
      | optional,
    configMapKeyRef
      | io.k8s.api.core.v1.ConfigMapKeySelector
      | optional,
  },
  io.k8s.api.core.v1.EnvVar = {
    valueFrom
      | io.k8s.api.core.v1.EnvVarSource
      | optional,
    value
      | String
      | optional,
    name
      | String,
  },
  io.k8s.api.core.v1.EnvFromSource = {
    secretRef
      | io.k8s.api.core.v1.SecretEnvSource
      | optional,
    prefix
      | String
      | optional,
    configMapRef
      | io.k8s.api.core.v1.ConfigMapEnvSource
      | optional,
  },
  v1.EndpointsList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.Endpoints),
    apiVersion
      | String
      | optional,
  },
  v1.Endpoints = {
    subsets
      | (Array io.k8s.api.core.v1.EndpointSubset)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.EndpointSubset = {
    ports
      | (Array io.k8s.api.core.v1.EndpointPort)
      | optional,
    notReadyAddresses
      | (Array io.k8s.api.core.v1.EndpointAddress)
      | optional,
    addresses
      | (Array io.k8s.api.core.v1.EndpointAddress)
      | optional,
  },
  io.k8s.api.core.v1.EndpointPort = {
    protocol
      | String
      | optional,
    port
      | std.number.Integer,
    name
      | String
      | optional,
    appProtocol
      | String
      | optional,
  },
  io.k8s.api.core.v1.EndpointAddress = {
    targetRef
      | io.k8s.api.core.v1.ObjectReference
      | optional,
    nodeName
      | String
      | optional,
    ip
      | String,
    hostname
      | String
      | optional,
  },
  io.k8s.api.core.v1.EmptyDirVolumeSource = {
    sizeLimit
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    medium
      | String
      | optional,
  },
  io.k8s.api.core.v1.DownwardAPIVolumeSource = {
    items
      | (Array io.k8s.api.core.v1.DownwardAPIVolumeFile)
      | optional,
    defaultMode
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.DownwardAPIVolumeFile = {
    resourceFieldRef
      | io.k8s.api.core.v1.ResourceFieldSelector
      | optional,
    path
      | String,
    mode
      | std.number.Integer
      | optional,
    fieldRef
      | io.k8s.api.core.v1.ObjectFieldSelector
      | optional,
  },
  io.k8s.api.core.v1.DownwardAPIProjection = {
    items
      | (Array io.k8s.api.core.v1.DownwardAPIVolumeFile)
      | optional,
  },
  io.k8s.api.core.v1.DaemonEndpoint = {
    Port
      | std.number.Integer,
  },
  io.k8s.api.core.v1.ContainerStatus = {
    state
      | io.k8s.api.core.v1.ContainerState
      | optional,
    started
      | Bool
      | optional,
    restartCount
      | std.number.Integer,
    resources
      | io.k8s.api.core.v1.ResourceRequirements
      | optional,
    ready
      | Bool,
    name
      | String,
    lastState
      | io.k8s.api.core.v1.ContainerState
      | optional,
    imageID
      | String,
    image
      | String,
    containerID
      | String
      | optional,
    allocatedResources
      | { _ | io.k8s.apimachinery.pkg.api.resource.Quantity }
      | optional,
  },
  io.k8s.api.core.v1.ContainerStateWaiting = {
    reason
      | String
      | optional,
    message
      | String
      | optional,
  },
  io.k8s.api.core.v1.ContainerStateTerminated = {
    startedAt
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    signal
      | std.number.Integer
      | optional,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    finishedAt
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    exitCode
      | std.number.Integer,
    containerID
      | String
      | optional,
  },
  io.k8s.api.core.v1.ContainerStateRunning = {
    startedAt
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  io.k8s.api.core.v1.ContainerState = {
    waiting
      | io.k8s.api.core.v1.ContainerStateWaiting
      | optional,
    terminated
      | io.k8s.api.core.v1.ContainerStateTerminated
      | optional,
    running
      | io.k8s.api.core.v1.ContainerStateRunning
      | optional,
  },
  io.k8s.api.core.v1.ContainerResizePolicy = {
    restartPolicy
      | String,
    resourceName
      | String,
  },
  io.k8s.api.core.v1.ContainerPort = {
    protocol
      | String
      | optional,
    name
      | String
      | optional,
    hostPort
      | std.number.Integer
      | optional,
    hostIP
      | String
      | optional,
    containerPort
      | std.number.Integer,
  },
  io.k8s.api.core.v1.ContainerImage = {
    sizeBytes
      | std.number.Integer
      | optional,
    names
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.Container = {
    workingDir
      | String
      | optional,
    volumeMounts
      | (Array io.k8s.api.core.v1.VolumeMount)
      | optional,
    volumeDevices
      | (Array io.k8s.api.core.v1.VolumeDevice)
      | optional,
    tty
      | Bool
      | optional,
    terminationMessagePolicy
      | String
      | optional,
    terminationMessagePath
      | String
      | optional,
    stdinOnce
      | Bool
      | optional,
    stdin
      | Bool
      | optional,
    startupProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    securityContext
      | io.k8s.api.core.v1.SecurityContext
      | optional,
    restartPolicy
      | String
      | optional,
    resources
      | io.k8s.api.core.v1.ResourceRequirements
      | optional,
    resizePolicy
      | (Array io.k8s.api.core.v1.ContainerResizePolicy)
      | optional,
    readinessProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    ports
      | (Array io.k8s.api.core.v1.ContainerPort)
      | optional,
    name
      | String,
    livenessProbe
      | io.k8s.api.core.v1.Probe
      | optional,
    lifecycle
      | io.k8s.api.core.v1.Lifecycle
      | optional,
    imagePullPolicy
      | String
      | optional,
    image
      | String
      | optional,
    envFrom
      | (Array io.k8s.api.core.v1.EnvFromSource)
      | optional,
    env
      | (Array io.k8s.api.core.v1.EnvVar)
      | optional,
    command
      | (Array String)
      | optional,
    args
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.ConfigMapVolumeSource = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.KeyToPath)
      | optional,
    defaultMode
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.ConfigMapProjection = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.KeyToPath)
      | optional,
  },
  io.k8s.api.core.v1.ConfigMapNodeConfigSource = {
    uid
      | String
      | optional,
    resourceVersion
      | String
      | optional,
    namespace
      | String,
    name
      | String,
    kubeletConfigKey
      | String,
  },
  v1.ConfigMapList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.ConfigMap),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ConfigMapKeySelector = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
    key
      | String,
  },
  io.k8s.api.core.v1.ConfigMapEnvSource = {
    optional
      | Bool
      | optional,
    name
      | String
      | optional,
  },
  v1.ConfigMap = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    immutable
      | Bool
      | optional,
    data
      | { _ | String }
      | optional,
    binaryData
      | { _ | String }
      | optional,
    apiVersion
      | String
      | optional,
  },
  v1.ComponentStatusList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.core.v1.ComponentStatus),
    apiVersion
      | String
      | optional,
  },
  v1.ComponentStatus = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    conditions
      | (Array io.k8s.api.core.v1.ComponentCondition)
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.ComponentCondition = {
    type
      | String,
    status
      | String,
    message
      | String
      | optional,
    error
      | String
      | optional,
  },
  io.k8s.api.core.v1.ClientIPConfig = {
    timeoutSeconds
      | std.number.Integer
      | optional,
  },
  io.k8s.api.core.v1.ClaimSource = {
    resourceClaimTemplateName
      | String
      | optional,
    resourceClaimName
      | String
      | optional,
  },
  io.k8s.api.core.v1.CinderVolumeSource = {
    volumeID
      | String,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    readOnly
      | Bool
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.CinderPersistentVolumeSource = {
    volumeID
      | String,
    secretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    readOnly
      | Bool
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.core.v1.CephFSVolumeSource = {
    user
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    secretFile
      | String
      | optional,
    readOnly
      | Bool
      | optional,
    path
      | String
      | optional,
    monitors
      | (Array String),
  },
  io.k8s.api.core.v1.CephFSPersistentVolumeSource = {
    user
      | String
      | optional,
    secretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    secretFile
      | String
      | optional,
    readOnly
      | Bool
      | optional,
    path
      | String
      | optional,
    monitors
      | (Array String),
  },
  io.k8s.api.core.v1.Capabilities = {
    drop
      | (Array String)
      | optional,
    add
      | (Array String)
      | optional,
  },
  io.k8s.api.core.v1.CSIVolumeSource = {
    volumeAttributes
      | { _ | String }
      | optional,
    readOnly
      | Bool
      | optional,
    nodePublishSecretRef
      | io.k8s.api.core.v1.LocalObjectReference
      | optional,
    fsType
      | String
      | optional,
    driver
      | String,
  },
  io.k8s.api.core.v1.CSIPersistentVolumeSource = {
    volumeHandle
      | String,
    volumeAttributes
      | { _ | String }
      | optional,
    readOnly
      | Bool
      | optional,
    nodeStageSecretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    nodePublishSecretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    nodeExpandSecretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    fsType
      | String
      | optional,
    driver
      | String,
    controllerPublishSecretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
    controllerExpandSecretRef
      | io.k8s.api.core.v1.SecretReference
      | optional,
  },
  v1.Binding = {
    target
      | io.k8s.api.core.v1.ObjectReference,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.core.v1.AzureFileVolumeSource = {
    shareName
      | String,
    secretName
      | String,
    readOnly
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.AzureFilePersistentVolumeSource = {
    shareName
      | String,
    secretNamespace
      | String
      | optional,
    secretName
      | String,
    readOnly
      | Bool
      | optional,
  },
  io.k8s.api.core.v1.AzureDiskVolumeSource = {
    readOnly
      | Bool
      | optional,
    kind
      | String
      | optional,
    fsType
      | String
      | optional,
    diskURI
      | String,
    diskName
      | String,
    cachingMode
      | String
      | optional,
  },
  io.k8s.api.core.v1.AttachedVolume = {
    name
      | String,
    devicePath
      | String,
  },
  io.k8s.api.core.v1.Affinity = {
    podAntiAffinity
      | io.k8s.api.core.v1.PodAntiAffinity
      | optional,
    podAffinity
      | io.k8s.api.core.v1.PodAffinity
      | optional,
    nodeAffinity
      | io.k8s.api.core.v1.NodeAffinity
      | optional,
  },
  io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource = {
    volumeID
      | String,
    readOnly
      | Bool
      | optional,
    partition
      | std.number.Integer
      | optional,
    fsType
      | String
      | optional,
  },
  io.k8s.api.coordination.v1.LeaseSpec = {
    renewTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime
      | optional,
    leaseTransitions
      | std.number.Integer
      | optional,
    leaseDurationSeconds
      | std.number.Integer
      | optional,
    holderIdentity
      | String
      | optional,
    acquireTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime
      | optional,
  },
  coordination.k8s.io.v1.LeaseList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.coordination.v1.Lease),
    apiVersion
      | String
      | optional,
  },
  coordination.k8s.io.v1.Lease = {
    spec
      | io.k8s.api.coordination.v1.LeaseSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec = {
    trustBundle
      | String,
    signerName
      | String
      | optional,
  },
  certificates.k8s.io.v1alpha1.ClusterTrustBundleList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.certificates.v1alpha1.ClusterTrustBundle),
    apiVersion
      | String
      | optional,
  },
  certificates.k8s.io.v1alpha1.ClusterTrustBundle = {
    spec
      | io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.certificates.v1.CertificateSigningRequestStatus = {
    conditions
      | (Array io.k8s.api.certificates.v1.CertificateSigningRequestCondition)
      | optional,
    certificate
      | String
      | optional,
  },
  io.k8s.api.certificates.v1.CertificateSigningRequestSpec = {
    username
      | String
      | optional,
    usages
      | (Array String)
      | optional,
    uid
      | String
      | optional,
    signerName
      | String,
    request
      | String,
    groups
      | (Array String)
      | optional,
    extra
      | { _ | (Array String) }
      | optional,
    expirationSeconds
      | std.number.Integer
      | optional,
  },
  certificates.k8s.io.v1.CertificateSigningRequestList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.certificates.v1.CertificateSigningRequest),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.certificates.v1.CertificateSigningRequestCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastUpdateTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  certificates.k8s.io.v1.CertificateSigningRequest = {
    status
      | io.k8s.api.certificates.v1.CertificateSigningRequestStatus
      | optional,
    spec
      | io.k8s.api.certificates.v1.CertificateSigningRequestSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.batch.v1.UncountedTerminatedPods = {
    succeeded
      | (Array String)
      | optional,
    failed
      | (Array String)
      | optional,
  },
  io.k8s.api.batch.v1.PodFailurePolicyRule = {
    onPodConditions
      | (Array io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern)
      | optional,
    onExitCodes
      | io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement
      | optional,
    action
      | String,
  },
  io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern = {
    type
      | String,
    status
      | String,
  },
  io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement = {
    values
      | (Array std.number.Integer),
    operator
      | String,
    containerName
      | String
      | optional,
  },
  io.k8s.api.batch.v1.PodFailurePolicy = {
    rules
      | (Array io.k8s.api.batch.v1.PodFailurePolicyRule),
  },
  io.k8s.api.batch.v1.JobTemplateSpec = {
    spec
      | io.k8s.api.batch.v1.JobSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
  },
  io.k8s.api.batch.v1.JobStatus = {
    uncountedTerminatedPods
      | io.k8s.api.batch.v1.UncountedTerminatedPods
      | optional,
    terminating
      | std.number.Integer
      | optional,
    succeeded
      | std.number.Integer
      | optional,
    startTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    ready
      | std.number.Integer
      | optional,
    failedIndexes
      | String
      | optional,
    failed
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.api.batch.v1.JobCondition)
      | optional,
    completionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    completedIndexes
      | String
      | optional,
    active
      | std.number.Integer
      | optional,
  },
  io.k8s.api.batch.v1.JobSpec = {
    ttlSecondsAfterFinished
      | std.number.Integer
      | optional,
    template
      | io.k8s.api.core.v1.PodTemplateSpec,
    suspend
      | Bool
      | optional,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    podReplacementPolicy
      | String
      | optional,
    podFailurePolicy
      | io.k8s.api.batch.v1.PodFailurePolicy
      | optional,
    parallelism
      | std.number.Integer
      | optional,
    maxFailedIndexes
      | std.number.Integer
      | optional,
    manualSelector
      | Bool
      | optional,
    completions
      | std.number.Integer
      | optional,
    completionMode
      | String
      | optional,
    backoffLimitPerIndex
      | std.number.Integer
      | optional,
    backoffLimit
      | std.number.Integer
      | optional,
    activeDeadlineSeconds
      | std.number.Integer
      | optional,
  },
  batch.v1.JobList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.batch.v1.Job),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.batch.v1.JobCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastProbeTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  batch.v1.Job = {
    status
      | io.k8s.api.batch.v1.JobStatus
      | optional,
    spec
      | io.k8s.api.batch.v1.JobSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.batch.v1.CronJobStatus = {
    lastSuccessfulTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastScheduleTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    active
      | (Array io.k8s.api.core.v1.ObjectReference)
      | optional,
  },
  io.k8s.api.batch.v1.CronJobSpec = {
    timeZone
      | String
      | optional,
    suspend
      | Bool
      | optional,
    successfulJobsHistoryLimit
      | std.number.Integer
      | optional,
    startingDeadlineSeconds
      | std.number.Integer
      | optional,
    schedule
      | String,
    jobTemplate
      | io.k8s.api.batch.v1.JobTemplateSpec,
    failedJobsHistoryLimit
      | std.number.Integer
      | optional,
    concurrencyPolicy
      | String
      | optional,
  },
  batch.v1.CronJobList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.batch.v1.CronJob),
    apiVersion
      | String
      | optional,
  },
  batch.v1.CronJob = {
    status
      | io.k8s.api.batch.v1.CronJobStatus
      | optional,
    spec
      | io.k8s.api.batch.v1.CronJobSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v2.ResourceMetricStatus = {
    name
      | String,
    current
      | io.k8s.api.autoscaling.v2.MetricValueStatus,
  },
  io.k8s.api.autoscaling.v2.ResourceMetricSource = {
    target
      | io.k8s.api.autoscaling.v2.MetricTarget,
    name
      | String,
  },
  io.k8s.api.autoscaling.v2.PodsMetricStatus = {
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
    current
      | io.k8s.api.autoscaling.v2.MetricValueStatus,
  },
  io.k8s.api.autoscaling.v2.PodsMetricSource = {
    target
      | io.k8s.api.autoscaling.v2.MetricTarget,
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
  },
  io.k8s.api.autoscaling.v2.ObjectMetricStatus = {
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
    describedObject
      | io.k8s.api.autoscaling.v2.CrossVersionObjectReference,
    current
      | io.k8s.api.autoscaling.v2.MetricValueStatus,
  },
  io.k8s.api.autoscaling.v2.ObjectMetricSource = {
    target
      | io.k8s.api.autoscaling.v2.MetricTarget,
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
    describedObject
      | io.k8s.api.autoscaling.v2.CrossVersionObjectReference,
  },
  io.k8s.api.autoscaling.v2.MetricValueStatus = {
    value
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    averageValue
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    averageUtilization
      | std.number.Integer
      | optional,
  },
  io.k8s.api.autoscaling.v2.MetricTarget = {
    value
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    type
      | String,
    averageValue
      | io.k8s.apimachinery.pkg.api.resource.Quantity
      | optional,
    averageUtilization
      | std.number.Integer
      | optional,
  },
  io.k8s.api.autoscaling.v2.MetricStatus = {
    type
      | String,
    resource
      | io.k8s.api.autoscaling.v2.ResourceMetricStatus
      | optional,
    pods
      | io.k8s.api.autoscaling.v2.PodsMetricStatus
      | optional,
    object
      | io.k8s.api.autoscaling.v2.ObjectMetricStatus
      | optional,
    external
      | io.k8s.api.autoscaling.v2.ExternalMetricStatus
      | optional,
    containerResource
      | io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus
      | optional,
  },
  io.k8s.api.autoscaling.v2.MetricSpec = {
    type
      | String,
    resource
      | io.k8s.api.autoscaling.v2.ResourceMetricSource
      | optional,
    pods
      | io.k8s.api.autoscaling.v2.PodsMetricSource
      | optional,
    object
      | io.k8s.api.autoscaling.v2.ObjectMetricSource
      | optional,
    external
      | io.k8s.api.autoscaling.v2.ExternalMetricSource
      | optional,
    containerResource
      | io.k8s.api.autoscaling.v2.ContainerResourceMetricSource
      | optional,
  },
  io.k8s.api.autoscaling.v2.MetricIdentifier = {
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    name
      | String,
  },
  io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus = {
    observedGeneration
      | std.number.Integer
      | optional,
    lastScaleTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    desiredReplicas
      | std.number.Integer,
    currentReplicas
      | std.number.Integer
      | optional,
    currentMetrics
      | (Array io.k8s.api.autoscaling.v2.MetricStatus)
      | optional,
    conditions
      | (Array io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition)
      | optional,
  },
  io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec = {
    scaleTargetRef
      | io.k8s.api.autoscaling.v2.CrossVersionObjectReference,
    minReplicas
      | std.number.Integer
      | optional,
    metrics
      | (Array io.k8s.api.autoscaling.v2.MetricSpec)
      | optional,
    maxReplicas
      | std.number.Integer,
    behavior
      | io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior
      | optional,
  },
  autoscaling.v2.HorizontalPodAutoscalerList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior = {
    scaleUp
      | io.k8s.api.autoscaling.v2.HPAScalingRules
      | optional,
    scaleDown
      | io.k8s.api.autoscaling.v2.HPAScalingRules
      | optional,
  },
  autoscaling.v2.HorizontalPodAutoscaler = {
    status
      | io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus
      | optional,
    spec
      | io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v2.HPAScalingRules = {
    stabilizationWindowSeconds
      | std.number.Integer
      | optional,
    selectPolicy
      | String
      | optional,
    policies
      | (Array io.k8s.api.autoscaling.v2.HPAScalingPolicy)
      | optional,
  },
  io.k8s.api.autoscaling.v2.HPAScalingPolicy = {
    value
      | std.number.Integer,
    type
      | String,
    periodSeconds
      | std.number.Integer,
  },
  io.k8s.api.autoscaling.v2.ExternalMetricStatus = {
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
    current
      | io.k8s.api.autoscaling.v2.MetricValueStatus,
  },
  io.k8s.api.autoscaling.v2.ExternalMetricSource = {
    target
      | io.k8s.api.autoscaling.v2.MetricTarget,
    metric
      | io.k8s.api.autoscaling.v2.MetricIdentifier,
  },
  io.k8s.api.autoscaling.v2.CrossVersionObjectReference = {
    name
      | String,
    kind
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus = {
    name
      | String,
    current
      | io.k8s.api.autoscaling.v2.MetricValueStatus,
    container
      | String,
  },
  io.k8s.api.autoscaling.v2.ContainerResourceMetricSource = {
    target
      | io.k8s.api.autoscaling.v2.MetricTarget,
    name
      | String,
    container
      | String,
  },
  io.k8s.api.autoscaling.v1.ScaleStatus = {
    selector
      | String
      | optional,
    replicas
      | std.number.Integer,
  },
  io.k8s.api.autoscaling.v1.ScaleSpec = {
    replicas
      | std.number.Integer
      | optional,
  },
  autoscaling.v1.Scale = {
    status
      | io.k8s.api.autoscaling.v1.ScaleStatus
      | optional,
    spec
      | io.k8s.api.autoscaling.v1.ScaleSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus = {
    observedGeneration
      | std.number.Integer
      | optional,
    lastScaleTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    desiredReplicas
      | std.number.Integer,
    currentReplicas
      | std.number.Integer,
    currentCPUUtilizationPercentage
      | std.number.Integer
      | optional,
  },
  io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec = {
    targetCPUUtilizationPercentage
      | std.number.Integer
      | optional,
    scaleTargetRef
      | io.k8s.api.autoscaling.v1.CrossVersionObjectReference,
    minReplicas
      | std.number.Integer
      | optional,
    maxReplicas
      | std.number.Integer,
  },
  autoscaling.v1.HorizontalPodAutoscalerList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler),
    apiVersion
      | String
      | optional,
  },
  autoscaling.v1.HorizontalPodAutoscaler = {
    status
      | io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus
      | optional,
    spec
      | io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.autoscaling.v1.CrossVersionObjectReference = {
    name
      | String,
    kind
      | String,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.SubjectRulesReviewStatus = {
    resourceRules
      | (Array io.k8s.api.authorization.v1.ResourceRule),
    nonResourceRules
      | (Array io.k8s.api.authorization.v1.NonResourceRule),
    incomplete
      | Bool,
    evaluationError
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.SubjectAccessReviewStatus = {
    reason
      | String
      | optional,
    evaluationError
      | String
      | optional,
    denied
      | Bool
      | optional,
    allowed
      | Bool,
  },
  io.k8s.api.authorization.v1.SubjectAccessReviewSpec = {
    user
      | String
      | optional,
    uid
      | String
      | optional,
    resourceAttributes
      | io.k8s.api.authorization.v1.ResourceAttributes
      | optional,
    nonResourceAttributes
      | io.k8s.api.authorization.v1.NonResourceAttributes
      | optional,
    groups
      | (Array String)
      | optional,
    extra
      | { _ | (Array String) }
      | optional,
  },
  authorization.k8s.io.v1.SubjectAccessReview = {
    status
      | io.k8s.api.authorization.v1.SubjectAccessReviewStatus
      | optional,
    spec
      | io.k8s.api.authorization.v1.SubjectAccessReviewSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec = {
    namespace
      | String
      | optional,
  },
  authorization.k8s.io.v1.SelfSubjectRulesReview = {
    status
      | io.k8s.api.authorization.v1.SubjectRulesReviewStatus
      | optional,
    spec
      | io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec = {
    resourceAttributes
      | io.k8s.api.authorization.v1.ResourceAttributes
      | optional,
    nonResourceAttributes
      | io.k8s.api.authorization.v1.NonResourceAttributes
      | optional,
  },
  authorization.k8s.io.v1.SelfSubjectAccessReview = {
    status
      | io.k8s.api.authorization.v1.SubjectAccessReviewStatus
      | optional,
    spec
      | io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.ResourceRule = {
    verbs
      | (Array String),
    resources
      | (Array String)
      | optional,
    resourceNames
      | (Array String)
      | optional,
    apiGroups
      | (Array String)
      | optional,
  },
  io.k8s.api.authorization.v1.ResourceAttributes = {
    version
      | String
      | optional,
    verb
      | String
      | optional,
    subresource
      | String
      | optional,
    resource
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
    group
      | String
      | optional,
  },
  io.k8s.api.authorization.v1.NonResourceRule = {
    verbs
      | (Array String),
    nonResourceURLs
      | (Array String)
      | optional,
  },
  io.k8s.api.authorization.v1.NonResourceAttributes = {
    verb
      | String
      | optional,
    path
      | String
      | optional,
  },
  authorization.k8s.io.v1.LocalSubjectAccessReview = {
    status
      | io.k8s.api.authorization.v1.SubjectAccessReviewStatus
      | optional,
    spec
      | io.k8s.api.authorization.v1.SubjectAccessReviewSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus = {
    userInfo
      | io.k8s.api.authentication.v1.UserInfo
      | optional,
  },
  authentication.k8s.io.v1beta1.SelfSubjectReview = {
    status
      | io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus = {
    userInfo
      | io.k8s.api.authentication.v1.UserInfo
      | optional,
  },
  authentication.k8s.io.v1alpha1.SelfSubjectReview = {
    status
      | io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1.UserInfo = {
    username
      | String
      | optional,
    uid
      | String
      | optional,
    groups
      | (Array String)
      | optional,
    extra
      | { _ | (Array String) }
      | optional,
  },
  io.k8s.api.authentication.v1.TokenReviewStatus = {
    user
      | io.k8s.api.authentication.v1.UserInfo
      | optional,
    error
      | String
      | optional,
    authenticated
      | Bool
      | optional,
    audiences
      | (Array String)
      | optional,
  },
  io.k8s.api.authentication.v1.TokenReviewSpec = {
    token
      | String
      | optional,
    audiences
      | (Array String)
      | optional,
  },
  authentication.k8s.io.v1.TokenReview = {
    status
      | io.k8s.api.authentication.v1.TokenReviewStatus
      | optional,
    spec
      | io.k8s.api.authentication.v1.TokenReviewSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1.TokenRequestStatus = {
    token
      | String,
    expirationTimestamp
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time,
  },
  io.k8s.api.authentication.v1.TokenRequestSpec = {
    expirationSeconds
      | std.number.Integer
      | optional,
    boundObjectRef
      | io.k8s.api.authentication.v1.BoundObjectReference
      | optional,
    audiences
      | (Array String),
  },
  authentication.k8s.io.v1.TokenRequest = {
    status
      | io.k8s.api.authentication.v1.TokenRequestStatus
      | optional,
    spec
      | io.k8s.api.authentication.v1.TokenRequestSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1.SelfSubjectReviewStatus = {
    userInfo
      | io.k8s.api.authentication.v1.UserInfo
      | optional,
  },
  authentication.k8s.io.v1.SelfSubjectReview = {
    status
      | io.k8s.api.authentication.v1.SelfSubjectReviewStatus
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.authentication.v1.BoundObjectReference = {
    uid
      | String
      | optional,
    name
      | String
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetUpdateStrategy = {
    type
      | String
      | optional,
    rollingUpdate
      | io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetStatus = {
    updatedReplicas
      | std.number.Integer
      | optional,
    updateRevision
      | String
      | optional,
    replicas
      | std.number.Integer,
    readyReplicas
      | std.number.Integer
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    currentRevision
      | String
      | optional,
    currentReplicas
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.api.apps.v1.StatefulSetCondition)
      | optional,
    collisionCount
      | std.number.Integer
      | optional,
    availableReplicas
      | std.number.Integer
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetSpec = {
    volumeClaimTemplates
      | (Array io.k8s.api.core.v1.PersistentVolumeClaim)
      | optional,
    updateStrategy
      | io.k8s.api.apps.v1.StatefulSetUpdateStrategy
      | optional,
    template
      | io.k8s.api.core.v1.PodTemplateSpec,
    serviceName
      | String,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector,
    revisionHistoryLimit
      | std.number.Integer
      | optional,
    replicas
      | std.number.Integer
      | optional,
    podManagementPolicy
      | String
      | optional,
    persistentVolumeClaimRetentionPolicy
      | io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy
      | optional,
    ordinals
      | io.k8s.api.apps.v1.StatefulSetOrdinals
      | optional,
    minReadySeconds
      | std.number.Integer
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy = {
    whenScaled
      | String
      | optional,
    whenDeleted
      | String
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetOrdinals = {
    start
      | std.number.Integer
      | optional,
  },
  apps.v1.StatefulSetList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apps.v1.StatefulSet),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.StatefulSetCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apps.v1.StatefulSet = {
    status
      | io.k8s.api.apps.v1.StatefulSetStatus
      | optional,
    spec
      | io.k8s.api.apps.v1.StatefulSetSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy = {
    partition
      | std.number.Integer
      | optional,
    maxUnavailable
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
  },
  io.k8s.api.apps.v1.RollingUpdateDeployment = {
    maxUnavailable
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
    maxSurge
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
  },
  io.k8s.api.apps.v1.RollingUpdateDaemonSet = {
    maxUnavailable
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
    maxSurge
      | io.k8s.apimachinery.pkg.util.intstr.IntOrString
      | optional,
  },
  io.k8s.api.apps.v1.ReplicaSetStatus = {
    replicas
      | std.number.Integer,
    readyReplicas
      | std.number.Integer
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    fullyLabeledReplicas
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.api.apps.v1.ReplicaSetCondition)
      | optional,
    availableReplicas
      | std.number.Integer
      | optional,
  },
  io.k8s.api.apps.v1.ReplicaSetSpec = {
    template
      | io.k8s.api.core.v1.PodTemplateSpec
      | optional,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector,
    replicas
      | std.number.Integer
      | optional,
    minReadySeconds
      | std.number.Integer
      | optional,
  },
  apps.v1.ReplicaSetList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apps.v1.ReplicaSet),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.ReplicaSetCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apps.v1.ReplicaSet = {
    status
      | io.k8s.api.apps.v1.ReplicaSetStatus
      | optional,
    spec
      | io.k8s.api.apps.v1.ReplicaSetSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.DeploymentStrategy = {
    type
      | String
      | optional,
    rollingUpdate
      | io.k8s.api.apps.v1.RollingUpdateDeployment
      | optional,
  },
  io.k8s.api.apps.v1.DeploymentStatus = {
    updatedReplicas
      | std.number.Integer
      | optional,
    unavailableReplicas
      | std.number.Integer
      | optional,
    replicas
      | std.number.Integer
      | optional,
    readyReplicas
      | std.number.Integer
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.api.apps.v1.DeploymentCondition)
      | optional,
    collisionCount
      | std.number.Integer
      | optional,
    availableReplicas
      | std.number.Integer
      | optional,
  },
  io.k8s.api.apps.v1.DeploymentSpec = {
    template
      | io.k8s.api.core.v1.PodTemplateSpec,
    strategy
      | io.k8s.api.apps.v1.DeploymentStrategy
      | optional,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector,
    revisionHistoryLimit
      | std.number.Integer
      | optional,
    replicas
      | std.number.Integer
      | optional,
    progressDeadlineSeconds
      | std.number.Integer
      | optional,
    paused
      | Bool
      | optional,
    minReadySeconds
      | std.number.Integer
      | optional,
  },
  apps.v1.DeploymentList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apps.v1.Deployment),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.DeploymentCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastUpdateTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apps.v1.Deployment = {
    status
      | io.k8s.api.apps.v1.DeploymentStatus
      | optional,
    spec
      | io.k8s.api.apps.v1.DeploymentSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.DaemonSetUpdateStrategy = {
    type
      | String
      | optional,
    rollingUpdate
      | io.k8s.api.apps.v1.RollingUpdateDaemonSet
      | optional,
  },
  io.k8s.api.apps.v1.DaemonSetStatus = {
    updatedNumberScheduled
      | std.number.Integer
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    numberUnavailable
      | std.number.Integer
      | optional,
    numberReady
      | std.number.Integer,
    numberMisscheduled
      | std.number.Integer,
    numberAvailable
      | std.number.Integer
      | optional,
    desiredNumberScheduled
      | std.number.Integer,
    currentNumberScheduled
      | std.number.Integer,
    conditions
      | (Array io.k8s.api.apps.v1.DaemonSetCondition)
      | optional,
    collisionCount
      | std.number.Integer
      | optional,
  },
  io.k8s.api.apps.v1.DaemonSetSpec = {
    updateStrategy
      | io.k8s.api.apps.v1.DaemonSetUpdateStrategy
      | optional,
    template
      | io.k8s.api.core.v1.PodTemplateSpec,
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector,
    revisionHistoryLimit
      | std.number.Integer
      | optional,
    minReadySeconds
      | std.number.Integer
      | optional,
  },
  apps.v1.DaemonSetList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apps.v1.DaemonSet),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apps.v1.DaemonSetCondition = {
    type
      | String,
    status
      | String,
    reason
      | String
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  apps.v1.DaemonSet = {
    status
      | io.k8s.api.apps.v1.DaemonSetStatus
      | optional,
    spec
      | io.k8s.api.apps.v1.DaemonSetSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  apps.v1.ControllerRevisionList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apps.v1.ControllerRevision),
    apiVersion
      | String
      | optional,
  },
  apps.v1.ControllerRevision = {
    revision
      | std.number.Integer,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    data
      | io.k8s.apimachinery.pkg.runtime.RawExtension
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus = {
    storageVersions
      | (Array io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion)
      | optional,
    conditions
      | (Array io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition)
      | optional,
    commonEncodingVersion
      | String
      | optional,
  },
  io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec = { .. },
  internal.apiserver.k8s.io.v1alpha1.StorageVersionList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.apiserverinternal.v1alpha1.StorageVersion),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition = {
    type
      | String,
    status
      | String,
    reason
      | String,
    observedGeneration
      | std.number.Integer
      | optional,
    message
      | String
      | optional,
    lastTransitionTime
      | io.k8s.apimachinery.pkg.apis.meta.v1.Time
      | optional,
  },
  internal.apiserver.k8s.io.v1alpha1.StorageVersion = {
    status
      | io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus,
    spec
      | io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion = {
    servedVersions
      | (Array String)
      | optional,
    encodingVersion
      | String
      | optional,
    decodableVersions
      | (Array String)
      | optional,
    apiServerID
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.Variable = {
    name
      | String,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1beta1.Validation = {
    reason
      | String
      | optional,
    messageExpression
      | String
      | optional,
    message
      | String
      | optional,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus = {
    typeChecking
      | io.k8s.api.admissionregistration.v1beta1.TypeChecking
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.Condition)
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec = {
    variables
      | (Array io.k8s.api.admissionregistration.v1beta1.Variable)
      | optional,
    validations
      | (Array io.k8s.api.admissionregistration.v1beta1.Validation)
      | optional,
    paramKind
      | io.k8s.api.admissionregistration.v1beta1.ParamKind
      | optional,
    matchConstraints
      | io.k8s.api.admissionregistration.v1beta1.MatchResources
      | optional,
    matchConditions
      | (Array io.k8s.api.admissionregistration.v1beta1.MatchCondition)
      | optional,
    failurePolicy
      | String
      | optional,
    auditAnnotations
      | (Array io.k8s.api.admissionregistration.v1beta1.AuditAnnotation)
      | optional,
  },
  admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec = {
    validationActions
      | (Array String)
      | optional,
    policyName
      | String
      | optional,
    paramRef
      | io.k8s.api.admissionregistration.v1beta1.ParamRef
      | optional,
    matchResources
      | io.k8s.api.admissionregistration.v1beta1.MatchResources
      | optional,
  },
  admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBindingList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding),
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicyBinding = {
    spec
      | io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1beta1.ValidatingAdmissionPolicy = {
    status
      | io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus
      | optional,
    spec
      | io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.TypeChecking = {
    expressionWarnings
      | (Array io.k8s.api.admissionregistration.v1beta1.ExpressionWarning)
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.ParamRef = {
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    parameterNotFoundAction
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.ParamKind = {
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations = {
    scope
      | String
      | optional,
    resources
      | (Array String)
      | optional,
    resourceNames
      | (Array String)
      | optional,
    operations
      | (Array String)
      | optional,
    apiVersions
      | (Array String)
      | optional,
    apiGroups
      | (Array String)
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.MatchResources = {
    resourceRules
      | (Array io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations)
      | optional,
    objectSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    matchPolicy
      | String
      | optional,
    excludeResourceRules
      | (Array io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations)
      | optional,
  },
  io.k8s.api.admissionregistration.v1beta1.MatchCondition = {
    name
      | String,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1beta1.ExpressionWarning = {
    warning
      | String,
    fieldRef
      | String,
  },
  io.k8s.api.admissionregistration.v1beta1.AuditAnnotation = {
    valueExpression
      | String,
    key
      | String,
  },
  io.k8s.api.admissionregistration.v1alpha1.Variable = {
    name
      | String,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1alpha1.Validation = {
    reason
      | String
      | optional,
    messageExpression
      | String
      | optional,
    message
      | String
      | optional,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus = {
    typeChecking
      | io.k8s.api.admissionregistration.v1alpha1.TypeChecking
      | optional,
    observedGeneration
      | std.number.Integer
      | optional,
    conditions
      | (Array io.k8s.apimachinery.pkg.apis.meta.v1.Condition)
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec = {
    variables
      | (Array io.k8s.api.admissionregistration.v1alpha1.Variable)
      | optional,
    validations
      | (Array io.k8s.api.admissionregistration.v1alpha1.Validation)
      | optional,
    paramKind
      | io.k8s.api.admissionregistration.v1alpha1.ParamKind
      | optional,
    matchConstraints
      | io.k8s.api.admissionregistration.v1alpha1.MatchResources
      | optional,
    matchConditions
      | (Array io.k8s.api.admissionregistration.v1alpha1.MatchCondition)
      | optional,
    failurePolicy
      | String
      | optional,
    auditAnnotations
      | (Array io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation)
      | optional,
  },
  admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy),
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec = {
    validationActions
      | (Array String)
      | optional,
    policyName
      | String
      | optional,
    paramRef
      | io.k8s.api.admissionregistration.v1alpha1.ParamRef
      | optional,
    matchResources
      | io.k8s.api.admissionregistration.v1alpha1.MatchResources
      | optional,
  },
  admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBindingList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding),
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicyBinding = {
    spec
      | io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1alpha1.ValidatingAdmissionPolicy = {
    status
      | io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus
      | optional,
    spec
      | io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.TypeChecking = {
    expressionWarnings
      | (Array io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning)
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.ParamRef = {
    selector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    parameterNotFoundAction
      | String
      | optional,
    namespace
      | String
      | optional,
    name
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.ParamKind = {
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations = {
    scope
      | String
      | optional,
    resources
      | (Array String)
      | optional,
    resourceNames
      | (Array String)
      | optional,
    operations
      | (Array String)
      | optional,
    apiVersions
      | (Array String)
      | optional,
    apiGroups
      | (Array String)
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.MatchResources = {
    resourceRules
      | (Array io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations)
      | optional,
    objectSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    matchPolicy
      | String
      | optional,
    excludeResourceRules
      | (Array io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations)
      | optional,
  },
  io.k8s.api.admissionregistration.v1alpha1.MatchCondition = {
    name
      | String,
    expression
      | String,
  },
  io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning = {
    warning
      | String,
    fieldRef
      | String,
  },
  io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation = {
    valueExpression
      | String,
    key
      | String,
  },
  io.k8s.api.admissionregistration.v1.WebhookClientConfig = {
    url
      | String
      | optional,
    service
      | io.k8s.api.admissionregistration.v1.ServiceReference
      | optional,
    caBundle
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1.ValidatingWebhookConfigurationList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration),
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1.ValidatingWebhookConfiguration = {
    webhooks
      | (Array io.k8s.api.admissionregistration.v1.ValidatingWebhook)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1.ValidatingWebhook = {
    timeoutSeconds
      | std.number.Integer
      | optional,
    sideEffects
      | String,
    rules
      | (Array io.k8s.api.admissionregistration.v1.RuleWithOperations)
      | optional,
    objectSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    name
      | String,
    matchPolicy
      | String
      | optional,
    matchConditions
      | (Array io.k8s.api.admissionregistration.v1.MatchCondition)
      | optional,
    failurePolicy
      | String
      | optional,
    clientConfig
      | io.k8s.api.admissionregistration.v1.WebhookClientConfig,
    admissionReviewVersions
      | (Array String),
  },
  io.k8s.api.admissionregistration.v1.ServiceReference = {
    port
      | std.number.Integer
      | optional,
    path
      | String
      | optional,
    namespace
      | String,
    name
      | String,
  },
  io.k8s.api.admissionregistration.v1.RuleWithOperations = {
    scope
      | String
      | optional,
    resources
      | (Array String)
      | optional,
    operations
      | (Array String)
      | optional,
    apiVersions
      | (Array String)
      | optional,
    apiGroups
      | (Array String)
      | optional,
  },
  admissionregistration.k8s.io.v1.MutatingWebhookConfigurationList = {
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta
      | optional,
    kind
      | String
      | optional,
    items
      | (Array io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration),
    apiVersion
      | String
      | optional,
  },
  admissionregistration.k8s.io.v1.MutatingWebhookConfiguration = {
    webhooks
      | (Array io.k8s.api.admissionregistration.v1.MutatingWebhook)
      | optional,
    metadata
      | io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta
      | optional,
    kind
      | String
      | optional,
    apiVersion
      | String
      | optional,
  },
  io.k8s.api.admissionregistration.v1.MutatingWebhook = {
    timeoutSeconds
      | std.number.Integer
      | optional,
    sideEffects
      | String,
    rules
      | (Array io.k8s.api.admissionregistration.v1.RuleWithOperations)
      | optional,
    reinvocationPolicy
      | String
      | optional,
    objectSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    namespaceSelector
      | io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector
      | optional,
    name
      | String,
    matchPolicy
      | String
      | optional,
    matchConditions
      | (Array io.k8s.api.admissionregistration.v1.MatchCondition)
      | optional,
    failurePolicy
      | String
      | optional,
    clientConfig
      | io.k8s.api.admissionregistration.v1.WebhookClientConfig,
    admissionReviewVersions
      | (Array String),
  },
  io.k8s.api.admissionregistration.v1.MatchCondition = {
    name
      | String,
    expression
      | String,
  },
}
