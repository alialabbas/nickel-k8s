{
  "Name": "",
  "Desc": "",
  "Entries": [
    {
      "Kind": "field",
      "Name": "target",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "target",
      "FieldDesc": "Comma-separated list of Pyroscope modules to load. The alias 'all' can be used in the list to load a number of core modules and will enable single-binary mode. ",
      "FieldType": "string",
      "FieldDefault": "all",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "api",
      "Required": false,
      "Block": {
        "Name": "api",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "base-url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "api.base-url",
            "FieldDesc": "base URL for when the server is behind a reverse proxy with a different path",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "server",
      "Required": false,
      "Block": {
        "Name": "server",
        "Desc": "The server block configures the HTTP and gRPC server of the launched service(s).",
        "Entries": [
          {
            "Kind": "field",
            "Name": "http_listen_network",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-listen-network",
            "FieldDesc": "HTTP server listen network, default tcp",
            "FieldType": "string",
            "FieldDefault": "tcp",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-listen-address",
            "FieldDesc": "HTTP server listen address.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-listen-port",
            "FieldDesc": "HTTP server listen port.",
            "FieldType": "int",
            "FieldDefault": "4040",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_conn_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-conn-limit",
            "FieldDesc": "Maximum number of simultaneous http connections, <=0 to disable",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_network",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-listen-network",
            "FieldDesc": "gRPC server listen network",
            "FieldType": "string",
            "FieldDefault": "tcp",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-listen-address",
            "FieldDesc": "gRPC server listen address.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-listen-port",
            "FieldDesc": "gRPC server listen port.",
            "FieldType": "int",
            "FieldDefault": "9095",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_conn_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-conn-limit",
            "FieldDesc": "Maximum number of simultaneous grpc connections, <=0 to disable",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_cipher_suites",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.tls-cipher-suites",
            "FieldDesc": "Comma-separated list of cipher suites to use. If blank, the default Go cipher suites is used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_min_version",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.tls-min-version",
            "FieldDesc": "Minimum TLS version to use. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13. If blank, the Go TLS minimum version is used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "http_tls_config",
            "Required": false,
            "Block": {
              "Name": "http_tls_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "cert",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS certificate. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS key. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Root certificate authority used to verify client certificates. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cert_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.http-tls-cert-path",
                  "FieldDesc": "HTTP server cert path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.http-tls-key-path",
                  "FieldDesc": "HTTP server key path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_auth_type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.http-tls-client-auth",
                  "FieldDesc": "HTTP TLS Client Auth type.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.http-tls-ca-path",
                  "FieldDesc": "HTTP TLS Client CA path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_tls_config",
            "Required": false,
            "Block": {
              "Name": "grpc_tls_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "cert",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS certificate. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS key. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "Root certificate authority used to verify client certificates. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cert_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.grpc-tls-cert-path",
                  "FieldDesc": "GRPC TLS server cert path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.grpc-tls-key-path",
                  "FieldDesc": "GRPC TLS server key path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_auth_type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.grpc-tls-client-auth",
                  "FieldDesc": "GRPC TLS Client Auth type.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "server.grpc-tls-ca-path",
                  "FieldDesc": "GRPC TLS Client CA path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "register_instrumentation",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.register-instrumentation",
            "FieldDesc": "Register the intrumentation handlers (/metrics etc).",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "report_grpc_codes_in_instrumentation_label_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.report-grpc-codes-in-instrumentation-label-enabled",
            "FieldDesc": "If set to true, gRPC statuses will be reported in instrumentation labels with their string representations. Otherwise, they will be reported as \"error\".",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "graceful_shutdown_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.graceful-shutdown-timeout",
            "FieldDesc": "Timeout for graceful shutdowns",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_read_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-read-timeout",
            "FieldDesc": "Read timeout for entire HTTP request, including headers and body.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_read_header_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-read-header-timeout",
            "FieldDesc": "Read timeout for HTTP request headers. If set to 0, value of -server.http-read-timeout is used.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-write-timeout",
            "FieldDesc": "Write timeout for HTTP server",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_idle_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-idle-timeout",
            "FieldDesc": "Idle timeout for HTTP server",
            "FieldType": "duration",
            "FieldDefault": "2m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_log_closed_connections_without_response_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.http-log-closed-connections-without-response-enabled",
            "FieldDesc": "Log closed connections that did not receive any response, most likely because client didn't send any request within timeout.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_recv_msg_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-max-recv-msg-size-bytes",
            "FieldDesc": "Limit on the size of a gRPC message this server can receive (bytes).",
            "FieldType": "int",
            "FieldDefault": "4194304",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_send_msg_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-max-send-msg-size-bytes",
            "FieldDesc": "Limit on the size of a gRPC message this server can send (bytes).",
            "FieldType": "int",
            "FieldDefault": "4194304",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_concurrent_streams",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc-max-concurrent-streams",
            "FieldDesc": "Limit on the number of concurrent streams for gRPC calls per client connection (0 = unlimited)",
            "FieldType": "int",
            "FieldDefault": "100",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_idle",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-idle",
            "FieldDesc": "The duration after which an idle connection should be closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_age",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-age",
            "FieldDesc": "The duration for the maximum amount of time a connection may exist before it will be closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_age_grace",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-age-grace",
            "FieldDesc": "An additive period after max-connection-age after which the connection will be forcibly closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_keepalive_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.time",
            "FieldDesc": "Duration after which a keepalive probe is sent in case of no activity over the connection., Default: 2h",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_keepalive_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.timeout",
            "FieldDesc": "After having pinged for keepalive check, the duration after which an idle connection should be closed, Default: 20s",
            "FieldType": "duration",
            "FieldDefault": "20s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_min_time_between_pings",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.min-time-between-pings",
            "FieldDesc": "Minimum amount of time a client should wait before sending a keepalive ping. If client sends keepalive ping more often, server will send GOAWAY and close the connection.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_ping_without_stream_allowed",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.keepalive.ping-without-stream-allowed",
            "FieldDesc": "If true, server allows keepalive pings even when there are no active streams(RPCs). If false, and client sends ping when there are no active streams, server will send GOAWAY and close the connection.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_num_workers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.grpc.num-workers",
            "FieldDesc": "If non-zero, configures the amount of GRPC server workers used to serve the requests.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_format",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "log.format",
            "FieldDesc": "Output log messages in the given format. Valid formats: [logfmt, json]",
            "FieldType": "string",
            "FieldDefault": "logfmt",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_level",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "log.level",
            "FieldDesc": "Only log messages with the given severity or above. Valid levels: [debug, info, warn, error]",
            "FieldType": "string",
            "FieldDefault": "info",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-source-ips-enabled",
            "FieldDesc": "Optionally log the source IPs.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_header",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-source-ips-header",
            "FieldDesc": "Header field storing the source IPs. Only used if server.log-source-ips-enabled is true. If not set the default Forwarded, X-Real-IP and X-Forwarded-For headers are used",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_regex",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-source-ips-regex",
            "FieldDesc": "Regex for matching the source IPs. Only used if server.log-source-ips-enabled is true. If not set the default Forwarded, X-Real-IP and X-Forwarded-For headers are used",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_headers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-request-headers",
            "FieldDesc": "Optionally log request headers.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_at_info_level_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-request-at-info-level-enabled",
            "FieldDesc": "Optionally log requests at info level instead of debug level. Applies to request headers as well if server.log-request-headers is enabled.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_exclude_headers_list",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.log-request-headers-exclude-list",
            "FieldDesc": "Comma separated list of headers to exclude from loggin. Only used if server.log-request-headers is true.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_path_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "server.path-prefix",
            "FieldDesc": "Base path to serve all API routes from (e.g. /v1/)",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The server block configures the HTTP and gRPC server of the launched service(s).",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "distributor",
      "Required": false,
      "Block": {
        "Name": "distributor",
        "Desc": "The distributor block configures the distributor.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "pushtimeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.push.timeout",
            "FieldDesc": "Timeout when pushing data to ingester.",
            "FieldType": "duration",
            "FieldDefault": "5s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "pool_config",
            "Required": false,
            "Block": {
              "Name": "pool_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "client_cleanup_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.client-cleanup-period",
                  "FieldDesc": "How frequently to clean up clients for ingesters that have gone away.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "health_check_ingesters",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.health-check-ingesters",
                  "FieldDesc": "Run a health check on each ingester client during periodic cleanup.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "remote_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.health-check-timeout",
                  "FieldDesc": "Timeout for ingester client healthcheck RPCs.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "ring",
            "Required": false,
            "Block": {
              "Name": "ring",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "The key-value store used to share the hash ring across multiple instances.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "distributor.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "memberlist",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "distributor.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "distributor.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The key-value store used to share the hash ring across multiple instances.",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which distributors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.instance-interface-names",
                  "FieldDesc": "List of network interface names to look up when finding the instance IP address.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to -server.http-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring. Default is auto-detected.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "distributor.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address. (default false)",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The distributor block configures the distributor.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "querier",
      "Required": false,
      "Block": {
        "Name": "querier",
        "Desc": "The querier block configures the querier.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "pool_config",
            "Required": false,
            "Block": {
              "Name": "pool_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "client_cleanup_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.client-cleanup-period",
                  "FieldDesc": "How frequently to clean up clients for ingesters that have gone away.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "health_check_ingesters",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.health-check-ingesters",
                  "FieldDesc": "Run a health check on each ingester client during periodic cleanup.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "remote_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.health-check-timeout",
                  "FieldDesc": "Timeout for ingester client healthcheck RPCs.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_store_after",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.query-store-after",
            "FieldDesc": "The time after which a metric should be queried from storage and not just ingesters. 0 means all queries are sent to store. If this option is enabled, the time range of the query sent to the store-gateway will be manipulated to ensure the query end is not more recent than 'now - query-store-after'.",
            "FieldType": "duration",
            "FieldDefault": "4h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The querier block configures the querier.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "frontend",
      "Required": false,
      "Block": {
        "Name": "query_frontend",
        "Desc": "The query_frontend block configures the query-frontend.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "scheduler_worker_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-frontend.scheduler-worker-concurrency",
            "FieldDesc": "Number of concurrent workers forwarding queries to single query-scheduler.",
            "FieldType": "int",
            "FieldDefault": "5",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures the gRPC client used to communicate between the query-frontends and the query-schedulers.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: 'gzip', 'snappy' and '' (disable compression)",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-frontend.grpc-client-config.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-frontend.grpc-client-config.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-frontend.grpc-client-config.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-frontend.grpc-client-config.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the gRPC client used to communicate between the query-frontends and the query-schedulers.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_interface_names",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-frontend.instance-interface-names",
            "FieldDesc": "List of network interface names to look up when finding the instance IP address. This address is sent to query-scheduler and querier, which uses it to send the query response back to query-frontend.",
            "FieldType": "list of strings",
            "FieldDefault": "[<private network interfaces>]",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-frontend.instance-addr",
            "FieldDesc": "IP address to advertise to the querier (via scheduler) (default is auto-detected from network interfaces).",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_enable_ipv6",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-frontend.instance-enable-ipv6",
            "FieldDesc": "Enable using a IPv6 instance address. (default false)",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-frontend.instance-port",
            "FieldDesc": "Port to advertise to query-scheduler and querier (defaults to -server.http-listen-port).",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The query_frontend block configures the query-frontend.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "frontend_worker",
      "Required": false,
      "Block": {
        "Name": "frontend_worker",
        "Desc": "The frontend_worker block configures the frontend-worker.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "id",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.id",
            "FieldDesc": "Querier ID, sent to the query-frontend to identify requests from the same querier. Defaults to hostname.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures the gRPC client used to communicate between the queriers and the query-frontends / query-schedulers.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: 'gzip', 'snappy' and '' (disable compression)",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "querier.frontend-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "querier.frontend-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "querier.frontend-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "querier.frontend-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the gRPC client used to communicate between the queriers and the query-frontends / query-schedulers.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_concurrent",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-concurrent",
            "FieldDesc": "The maximum number of concurrent queries allowed.",
            "FieldType": "int",
            "FieldDefault": "4",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The frontend_worker block configures the frontend-worker.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "limits",
      "Required": false,
      "Block": {
        "Name": "limits",
        "Desc": "The limits block configures default and per-tenant limits imposed by components.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "ingestion_rate_mb",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.ingestion-rate-limit-mb",
            "FieldDesc": "Per-tenant ingestion rate limit in sample size per second. Units in MB.",
            "FieldType": "float",
            "FieldDefault": "4",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingestion_burst_size_mb",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.ingestion-burst-size-mb",
            "FieldDesc": "Per-tenant allowed ingestion burst size (in sample size). Units in MB. The burst size refers to the per-distributor local rate limiter, and should be set at least to the maximum profile size expected in a single push request.",
            "FieldType": "float",
            "FieldDefault": "2",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_name_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-length-label-name",
            "FieldDesc": "Maximum length accepted for label names.",
            "FieldType": "int",
            "FieldDefault": "1024",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_value_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-length-label-value",
            "FieldDesc": "Maximum length accepted for label value. This setting also applies to the metric name.",
            "FieldType": "int",
            "FieldDefault": "2048",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_names_per_series",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-label-names-per-series",
            "FieldDesc": "Maximum number of label names per series.",
            "FieldType": "int",
            "FieldDefault": "30",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_sessions_per_series",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-sessions-per-series",
            "FieldDesc": "Maximum number of sessions per series. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enforce_labels_order",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.enforce-labels-order",
            "FieldDesc": "Enforce labels order optimization.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_profile_size_bytes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-profile-size-bytes",
            "FieldDesc": "Maximum size of a profile in bytes. This is based off the uncompressed size. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "4194304",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_profile_stacktrace_samples",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-profile-stacktrace-samples",
            "FieldDesc": "Maximum number of samples in a profile. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "16000",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_profile_stacktrace_sample_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-profile-stacktrace-sample-labels",
            "FieldDesc": "Maximum number of labels in a profile sample. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "100",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_profile_stacktrace_depth",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-profile-stacktrace-depth",
            "FieldDesc": "Maximum depth of a profile stacktrace. Profiles are not rejected instead stacktraces are truncated. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "1000",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_profile_symbol_value_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.max-profile-symbol-value-length",
            "FieldDesc": "Maximum length of a profile symbol value (labels, function names and filenames, etc...). Profiles are not rejected instead symbol values are truncated. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "65535",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "distributor_usage_groups",
            "Required": false,
            "Block": {
              "Name": "distributor_usage_groups",
              "Desc": "",
              "Entries": null,
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "distributor_aggregation_window",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.aggregation-window",
            "FieldDesc": "Duration of the distributor aggregation window. Requires aggregation period to be specified. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "distributor_aggregation_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.aggregation-period",
            "FieldDesc": "Duration of the distributor aggregation period. Requires aggregation window to be specified. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "slice",
            "Name": "ingestion_relabeling_rules",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.ingestion-relabeling-rules",
            "FieldDesc": "List of ingestion relabel configurations. The relabeling rules work the same way, as those of [Prometheus](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config). All rules are applied in the order they are specified. Note: In most situations, it is more effective to use relabeling directly in Grafana Alloy.",
            "FieldType": "list of Configs",
            "FieldDefault": "[]",
            "FieldExample": {
              "Comment": "This example consists of two rules, the first one will drop all profiles received with an label 'environment=\"secrets\"' and the second rule will add a label 'powered_by=\"Grafana Labs\"' to all profile series.",
              "Yaml": {
                "ingestion_relabeling_rules": [
                  {
                    "action": "drop",
                    "regex": "secret",
                    "source_labels": [
                      "environment"
                    ]
                  },
                  {
                    "action": "replace",
                    "replacement": "grafana-labs",
                    "target_label": "powered_by"
                  }
                ]
              }
            },
            "FieldCategory": "",
            "Element": {
              "Name": "ingestion_relabeling_rules",
              "Desc": "",
              "Entries": null,
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            }
          },
          {
            "Kind": "field",
            "Name": "ingestion_relabeling_default_rules_position",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.ingestion-relabeling-default-rules-position",
            "FieldDesc": "Position of the default ingestion relabeling rules in relation to relabel rules from overrides. Valid values are 'first', 'last' or 'disabled'.",
            "FieldType": "string",
            "FieldDefault": "first",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingestion_tenant_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "distributor.ingestion-tenant-shard-size",
            "FieldDesc": "The tenant's shard size used by shuffle-sharding. Must be set both on ingesters and distributors. 0 disables shuffle sharding.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_local_series_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "ingester.max-local-series-per-tenant",
            "FieldDesc": "Maximum number of active series of profiles per tenant, per ingester. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_global_series_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "ingester.max-global-series-per-tenant",
            "FieldDesc": "Maximum number of active series of profiles per tenant, across the cluster. 0 to disable. When the global limit is enabled, each ingester is configured with a dynamic local limit based on the replication factor and the current number of healthy ingesters, and is kept updated whenever the number of ingesters change.",
            "FieldType": "int",
            "FieldDefault": "5000",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_lookback",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-query-lookback",
            "FieldDesc": "Limit how far back in profiling data can be queried, up until lookback duration ago. This limit is enforced in the query frontend. If the requested time range is outside the allowed range, the request will not fail, but will be modified to only query data within the allowed time range. 0 to disable, default to 7d.",
            "FieldType": "duration",
            "FieldDefault": "1w",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-query-length",
            "FieldDesc": "The limit to length of queries. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "1d",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-query-parallelism",
            "FieldDesc": "Maximum number of queries that will be scheduled in parallel by the frontend.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_analysis_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.query-analysis-enabled",
            "FieldDesc": "Whether query analysis is enabled in the query frontend. If disabled, the /AnalyzeQuery endpoint will return an empty response.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_analysis_series_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.query-analysis-series-enabled",
            "FieldDesc": "Whether the series portion of query analysis is enabled. If disabled, no series data (e.g., series count) will be calculated by the /AnalyzeQuery endpoint.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_flamegraph_nodes_default",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-flamegraph-nodes-default",
            "FieldDesc": "Maximum number of flame graph nodes by default. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "8192",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_flamegraph_nodes_max",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.max-flamegraph-nodes-max",
            "FieldDesc": "Maximum number of flame graph nodes allowed. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "store_gateway_tenant_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "store-gateway.tenant-shard-size",
            "FieldDesc": "The tenant's shard size, used when store-gateway sharding is enabled. Value of 0 disables shuffle sharding for the tenant, that is all tenant blocks are sharded across all store-gateway replicas.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "querier.split-queries-by-interval",
            "FieldDesc": "Split queries by a time interval and execute in parallel. The value 0 disables splitting by time",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_blocks_retention_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.blocks-retention-period",
            "FieldDesc": "Delete blocks containing samples older than the specified retention period. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_split_and_merge_shards",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.split-and-merge-shards",
            "FieldDesc": "The number of shards to use when splitting blocks. 0 to disable splitting.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_split_and_merge_stage_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.split-and-merge-stage-size",
            "FieldDesc": "Number of stages split shards will be written to. Number of output split shards is controlled by -compactor.split-and-merge-shards.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_split_groups",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.split-groups",
            "FieldDesc": "Number of groups that blocks for splitting should be grouped into. Each group of blocks is then split separately. Number of output split shards is controlled by -compactor.split-and-merge-shards.",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_tenant_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compactor-tenant-shard-size",
            "FieldDesc": "Max number of compactors that can compact blocks for single tenant. 0 to disable the limit and use all compactors.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_partial_block_deletion_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.partial-block-deletion-delay",
            "FieldDesc": "If a partial block (unfinished block without meta.json file) hasn't been modified for this time, it will be marked for deletion. The minimum accepted value is 4h0m0s: a lower value will be ignored and the feature disabled. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "1d",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_downsampler_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compactor-downsampler-enabled",
            "FieldDesc": "If enabled, the compactor will downsample profiles in blocks at compaction level 3 and above. The original profiles are also kept. Note: This set the default for the teanant overrides, in order to be effective it also requires compactor.downsampler-enabled to be set to true.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_type",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption type. Required to enable server-side encryption overrides for a specific tenant. If not set, the default S3 client settings are used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_kms_key_id",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption KMS Key ID. Ignored if the SSE type override is not set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_kms_encryption_context",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption KMS encryption context. If unset and the key ID override is set, the encryption context will not be provided to S3. Ignored if the SSE type override is not set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "reject_older_than",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.reject-older-than",
            "FieldDesc": "This limits how far into the past profiling data can be ingested. This limit is enforced in the distributor. 0 to disable, defaults to 1h.",
            "FieldType": "duration",
            "FieldDefault": "1h",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "reject_newer_than",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "validation.reject-newer-than",
            "FieldDesc": "This limits how far into the future profiling data can be ingested. This limit is enforced in the distributor. 0 to disable, defaults to 10m.",
            "FieldType": "duration",
            "FieldDefault": "10m",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The limits block configures default and per-tenant limits imposed by components.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "query_scheduler",
      "Required": false,
      "Block": {
        "Name": "query_scheduler",
        "Desc": "The query_scheduler block configures the query-scheduler.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "max_outstanding_requests_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-scheduler.max-outstanding-requests-per-tenant",
            "FieldDesc": "Maximum number of outstanding requests per tenant per query-scheduler. In-flight requests above this limit will fail with HTTP response status code 429.",
            "FieldType": "int",
            "FieldDefault": "100",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "querier_forget_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-scheduler.querier-forget-delay",
            "FieldDesc": "If a querier disconnects without sending notification about graceful shutdown, the query-scheduler will keep the querier in the tenant's shard until the forget delay has passed. This feature is useful to reduce the blast radius when shuffle-sharding is enabled.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "This configures the gRPC client used to report errors back to the query-frontend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: 'gzip', 'snappy' and '' (disable compression)",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "This configures the gRPC client used to report errors back to the query-frontend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_used_instances",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "query-scheduler.max-used-instances",
            "FieldDesc": "The maximum number of query-scheduler instances to use, regardless how many replicas are running. This option can be set only when -query-scheduler.service-discovery-mode is set to 'ring'. 0 to use all available query-scheduler instances.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The query_scheduler block configures the query-scheduler.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingester",
      "Required": false,
      "Block": {
        "Name": "ingester",
        "Desc": "The ingester block configures the ingester.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "lifecycler",
            "Required": false,
            "Block": {
              "Name": "lifecycler",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "ring",
                  "Required": false,
                  "Block": {
                    "Name": "ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "ring.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "consul",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "ring.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "FieldFlag": "multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "FieldCategory": "",
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "heartbeat_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "ring.heartbeat-timeout",
                        "FieldDesc": "The heartbeat timeout after which ingesters are skipped for reads/writes. 0 = never (timeout disabled).",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "replication_factor",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "distributor.replication-factor",
                        "FieldDesc": "The number of ingesters to write to and read from.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "zone_awareness_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "distributor.zone-awareness-enabled",
                        "FieldDesc": "True to enable the zone-awareness and replicate ingested samples across different availability zones.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_zones",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "distributor.excluded-zones",
                        "FieldDesc": "Comma-separated list of zones to exclude from the ring. Instances in excluded zones will be filtered out from the ring.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.num-tokens",
                  "FieldDesc": "Number of tokens for each ingester.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to consul. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.heartbeat-timeout",
                  "FieldDesc": "Heartbeat timeout after which instance is assumed to be unhealthy. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "observe_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.observe-period",
                  "FieldDesc": "Observe tokens after generating to resolve collisions. Useful when using gossiping ring.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "join_after",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.join-after",
                  "FieldDesc": "Period to wait for a claim from another member; will join automatically after this.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_ready_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.min-ready-duration",
                  "FieldDesc": "Minimum duration to wait after the internal readiness checks have passed but before succeeding the readiness endpoint. This is used to slowdown deployment controllers (eg. Kubernetes) after an instance is ready and before they proceed with a rolling update, to give the rest of the cluster instances enough time to receive ring updates.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.lifecycler.interface",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inet6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.enable-inet6",
                  "FieldDesc": "Enable IPv6 support. Required to make use of IP addresses from IPv6 interfaces.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "final_sleep",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.final-sleep",
                  "FieldDesc": "Duration to sleep for before exiting, to ensure metrics are scraped.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.availability-zone",
                  "FieldDesc": "The availability zone where this instance is running.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown. It can be useful to disable for rolling restarts with consistent naming in conjunction with -distributor.extend-writes=false.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "readiness_check_ring_health",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.readiness-check-ring-health",
                  "FieldDesc": "When enabled the readiness probe succeeds only after all instances are ACTIVE and healthy in the ring, otherwise only the instance itself is checked. This option should be disabled if in your cluster multiple instances can be rolled out simultaneously, otherwise rolling updates may be slowed down.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.lifecycler.addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.lifecycler.port",
                  "FieldDesc": "port to advertise in consul (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "ingester.lifecycler.ID",
                  "FieldDesc": "ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The ingester block configures the ingester.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "store_gateway",
      "Required": false,
      "Block": {
        "Name": "store_gateway",
        "Desc": "The store_gateway block configures the store-gateway.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "sharding_ring",
            "Required": false,
            "Block": {
              "Name": "sharding_ring",
              "Desc": "The hash ring configuration.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "The key-value store used to share the hash ring across multiple instances.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "store-gateway.sharding-ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "memberlist",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "store-gateway.sharding-ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "store-gateway.sharding-ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The key-value store used to share the hash ring across multiple instances.",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which store-gateways are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-interface-names",
                  "FieldDesc": "List of network interface names to look up when finding the instance IP address.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to -server.http-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring. Default is auto-detected.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address. (default false)",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.replication-factor",
                  "FieldDesc": "The replication factor to use when sharding blocks. This option needs be set both on the store-gateway and querier when running in microservices mode.",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "zone_awareness_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.zone-awareness-enabled",
                  "FieldDesc": "True to enable zone-awareness and replicate blocks across different availability zones. This option needs be set both on the store-gateway and querier when running in microservices mode.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "wait_stability_min_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.wait-stability-min-duration",
                  "FieldDesc": "Minimum time to wait for ring stability at startup, if set to positive value.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "wait_stability_max_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.wait-stability-max-duration",
                  "FieldDesc": "Maximum time to wait for ring stability at startup. If the store-gateway ring keeps changing after this period of time, the store-gateway will start anyway.",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.instance-availability-zone",
                  "FieldDesc": "The availability zone where this instance is running. Required if zone-awareness is enabled.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "store-gateway.sharding-ring.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The hash ring configuration.",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "bucket_store",
            "Required": false,
            "Block": {
              "Name": "bucket_store",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "sync_dir",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.sync-dir",
                  "FieldDesc": "Directory to store synchronized pyroscope block headers. This directory is not required to be persisted between restarts, but it's highly recommended in order to improve the store-gateway startup time.",
                  "FieldType": "string",
                  "FieldDefault": "./data/pyroscope-sync/",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "sync_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.sync-interval",
                  "FieldDesc": "How frequently to scan the bucket, or to refresh the bucket index (if enabled), in order to look for changes (new blocks shipped by ingesters and blocks deleted by retention or compaction).",
                  "FieldType": "duration",
                  "FieldDefault": "15m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tenant_sync_concurrency",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.tenant-sync-concurrency",
                  "FieldDesc": "Maximum number of concurrent tenants synching blocks.",
                  "FieldType": "int",
                  "FieldDefault": "10",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ignore_blocks_within",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.ignore-blocks-within",
                  "FieldDesc": "Blocks with minimum time within this duration are ignored, and not loaded by store-gateway. Useful when used together with -querier.query-store-after to prevent loading young blocks, because there are usually many of them (depending on number of ingesters) and they are not yet compacted. Negative values or 0 disable the filter.",
                  "FieldType": "duration",
                  "FieldDefault": "3h0m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "meta_sync_concurrency",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.meta-sync-concurrency",
                  "FieldDesc": "Number of Go routines to use when syncing block meta files from object storage per tenant.",
                  "FieldType": "int",
                  "FieldDefault": "20",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ignore_deletion_mark_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "blocks-storage.bucket-store.ignore-deletion-marks-delay",
                  "FieldDesc": "Duration after which the blocks marked for deletion will be filtered out while fetching blocks. The idea of ignore-deletion-marks-delay is to ignore blocks that are marked for deletion with some delay. This ensures store can still serve blocks that are meant to be deleted but do not have a replacement yet.",
                  "FieldType": "duration",
                  "FieldDefault": "30m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The store_gateway block configures the store-gateway.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "memberlist",
      "Required": false,
      "Block": {
        "Name": "memberlist",
        "Desc": "The memberlist block configures the Gossip memberlist.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "node_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.nodename",
            "FieldDesc": "Name of the node in memberlist cluster. Defaults to hostname.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "randomize_node_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.randomize-node-name",
            "FieldDesc": "Add random suffix to the node name.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "stream_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.stream-timeout",
            "FieldDesc": "The timeout for establishing a connection with a remote node, and for read/write operations.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retransmit_factor",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.retransmit-factor",
            "FieldDesc": "Multiplication factor used when sending out messages (factor * log(N+1)).",
            "FieldType": "int",
            "FieldDefault": "4",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "pull_push_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.pullpush-interval",
            "FieldDesc": "How often to use pull/push sync.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.gossip-interval",
            "FieldDesc": "How often to gossip.",
            "FieldType": "duration",
            "FieldDefault": "200ms",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_nodes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.gossip-nodes",
            "FieldDesc": "How many nodes to gossip to.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_to_dead_nodes_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.gossip-to-dead-nodes-time",
            "FieldDesc": "How long to keep gossiping to dead nodes, to give them chance to refute their death.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "dead_node_reclaim_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.dead-node-reclaim-time",
            "FieldDesc": "How soon can dead node's name be reclaimed with new address. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compression_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.compression-enabled",
            "FieldDesc": "Enable message compression. This can be used to reduce bandwidth usage at the cost of slightly more CPU utilization.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "advertise_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.advertise-addr",
            "FieldDesc": "Gossip address to advertise to other members in the cluster. Used for NAT traversal.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "advertise_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.advertise-port",
            "FieldDesc": "Gossip port to advertise to other members in the cluster. Used for NAT traversal.",
            "FieldType": "int",
            "FieldDefault": "7946",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_label",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.cluster-label",
            "FieldDesc": "The cluster label is an optional string to include in outbound packets and gossip streams. Other members in the memberlist cluster will discard any message whose label doesn't match the configured one, unless the 'cluster-label-verification-disabled' configuration option is set to true.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_label_verification_disabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.cluster-label-verification-disabled",
            "FieldDesc": "When true, memberlist doesn't verify that inbound packets and gossip streams have the cluster label matching the configured one. This verification should be disabled while rolling out the change to the configured cluster label in a live memberlist cluster.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "join_members",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.join",
            "FieldDesc": "Other cluster members to join. Can be specified multiple times. It can be an IP, hostname or an entry specified in the DNS Service Discovery format.",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "min_join_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.min-join-backoff",
            "FieldDesc": "Min backoff duration to join other cluster members.",
            "FieldType": "duration",
            "FieldDefault": "1s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_join_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.max-join-backoff",
            "FieldDesc": "Max backoff duration to join other cluster members.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_join_retries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.max-join-retries",
            "FieldDesc": "Max number of retries to join other cluster members.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "abort_if_cluster_join_fails",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.abort-if-join-fails",
            "FieldDesc": "If this node fails to join memberlist cluster, abort.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "rejoin_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.rejoin-interval",
            "FieldDesc": "If not 0, how often to rejoin the cluster. Occasional rejoin can help to fix the cluster split issue, and is harmless otherwise. For example when using only few components as a seed nodes (via -memberlist.join), then it's recommended to use rejoin. If -memberlist.join points to dynamic service that resolves to all gossiping nodes (eg. Kubernetes headless service), then rejoin is not needed.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "left_ingesters_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.left-ingesters-timeout",
            "FieldDesc": "How long to keep LEFT ingesters in the ring.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "leave_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.leave-timeout",
            "FieldDesc": "Timeout for leaving memberlist cluster.",
            "FieldType": "duration",
            "FieldDefault": "20s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "message_history_buffer_bytes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.message-history-buffer-bytes",
            "FieldDesc": "How much space to use for keeping received and sent messages in memory for troubleshooting (two buffers). 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bind_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.bind-addr",
            "FieldDesc": "IP address to listen on for gossip messages. Multiple addresses may be specified. Defaults to 0.0.0.0",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bind_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.bind-port",
            "FieldDesc": "Port to listen on for gossip messages.",
            "FieldType": "int",
            "FieldDefault": "7946",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "packet_dial_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.packet-dial-timeout",
            "FieldDesc": "Timeout used when connecting to other nodes to send packet.",
            "FieldType": "duration",
            "FieldDefault": "2s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "packet_write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.packet-write-timeout",
            "FieldDesc": "Timeout for writing 'packet' data.",
            "FieldType": "duration",
            "FieldDefault": "5s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-enabled",
            "FieldDesc": "Enable TLS on the memberlist transport layer.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_cert_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-cert-path",
            "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_key_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-key-path",
            "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_ca_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-ca-path",
            "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_server_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-server-name",
            "FieldDesc": "Override the expected name on the server certificate.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_insecure_skip_verify",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-insecure-skip-verify",
            "FieldDesc": "Skip validating server certificate.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_cipher_suites",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-cipher-suites",
            "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_min_version",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "memberlist.tls-min-version",
            "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The memberlist block configures the Gossip memberlist.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "pyroscopedb",
      "Required": false,
      "Block": {
        "Name": "pyroscopedb",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "data_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.data-path",
            "FieldDesc": "Directory used for local storage.",
            "FieldType": "string",
            "FieldDefault": "./data",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_block_duration",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.max-block-duration",
            "FieldDesc": "Upper limit to the duration of a Pyroscope block.",
            "FieldType": "duration",
            "FieldDefault": "1h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "row_group_target_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.row-group-target-size",
            "FieldDesc": "How big should a single row group be uncompressed",
            "FieldType": "int",
            "FieldDefault": "1342177280",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "symbols_partition_label",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.symbols-partition-label",
            "FieldDesc": "Specifies the dimension by which symbols are partitioned. By default, the partitioning is determined automatically.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "min_free_disk_gb",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.retention-policy-min-free-disk-gb",
            "FieldDesc": "How much available disk space to keep in GiB",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "min_disk_available_percentage",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.retention-policy-min-disk-available-percentage",
            "FieldDesc": "Which percentage of free disk space to keep",
            "FieldType": "float",
            "FieldDefault": "0.05",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enforcement_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.retention-policy-enforcement-interval",
            "FieldDesc": "How often to enforce disk retention",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "disable_enforcement",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "pyroscopedb.retention-policy-disable",
            "FieldDesc": "Disable retention policy enforcement",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "tracing",
      "Required": false,
      "Block": {
        "Name": "tracing",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "tracing.enabled",
            "FieldDesc": "Set to false to disable tracing.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "runtime_config",
      "Required": false,
      "Block": {
        "Name": "runtime_config",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "runtime-config.reload-period",
            "FieldDesc": "How often to check runtime config files.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "file",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "runtime-config.file",
            "FieldDesc": "Comma separated list of yaml files with the configuration that can be updated at runtime. Runtime config files will be merged from left to right.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "compactor",
      "Required": false,
      "Block": {
        "Name": "compactor",
        "Desc": "The compactor block configures the compactor.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "block_ranges",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.block-ranges",
            "FieldDesc": "List of compaction time ranges.",
            "FieldType": "list of durations",
            "FieldDefault": "1h0m0s,2h0m0s,8h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_sync_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.block-sync-concurrency",
            "FieldDesc": "Number of Go routines to use when downloading blocks for compaction and uploading resulting blocks.",
            "FieldType": "int",
            "FieldDefault": "8",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "meta_sync_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.meta-sync-concurrency",
            "FieldDesc": "Number of Go routines to use when syncing block meta files from the long term storage.",
            "FieldType": "int",
            "FieldDefault": "20",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "data_dir",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.data-dir",
            "FieldDesc": "Directory to temporarily store blocks during compaction. This directory is not required to be persisted between restarts.",
            "FieldType": "string",
            "FieldDefault": "./data-compactor",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compaction-interval",
            "FieldDesc": "The frequency at which the compaction runs",
            "FieldType": "duration",
            "FieldDefault": "30m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_retries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compaction-retries",
            "FieldDesc": "How many times to retry a failed compaction within a single compaction run.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compaction-concurrency",
            "FieldDesc": "Max number of concurrent compactions running.",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "first_level_compaction_wait_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.first-level-compaction-wait-period",
            "FieldDesc": "How long the compactor waits before compacting first-level blocks that are uploaded by the ingesters. This configuration option allows for the reduction of cases where the compactor begins to compact blocks before all ingesters have uploaded their blocks to the storage.",
            "FieldType": "duration",
            "FieldDefault": "25m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cleanup_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.cleanup-interval",
            "FieldDesc": "How frequently compactor should run blocks cleanup and maintenance, as well as update the bucket index.",
            "FieldType": "duration",
            "FieldDefault": "15m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cleanup_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.cleanup-concurrency",
            "FieldDesc": "Max number of tenants for which blocks cleanup and maintenance should run concurrently.",
            "FieldType": "int",
            "FieldDefault": "20",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "deletion_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.deletion-delay",
            "FieldDesc": "Time before a block marked for deletion is deleted from bucket. If not 0, blocks will be marked for deletion and compactor component will permanently delete blocks marked for deletion from the bucket. If 0, blocks will be deleted straight away. Note that deleting blocks immediately can cause query failures.",
            "FieldType": "duration",
            "FieldDefault": "12h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tenant_cleanup_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_compaction_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.max-compaction-time",
            "FieldDesc": "Max time for starting compactions for a single tenant. After this time no new compactions for the tenant are started before next compaction cycle. This can help in multi-tenant environments to avoid single tenant using all compaction time, but also in single-tenant environments to force new discovery of blocks more often. 0 = disabled.",
            "FieldType": "duration",
            "FieldDefault": "1h0m0s",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "no_blocks_file_cleanup_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.no-blocks-file-cleanup-enabled",
            "FieldDesc": "If enabled, will delete the bucket-index, markers and debug files in the tenant bucket when there are no blocks left in the index.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "downsampler_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.downsampler-enabled",
            "FieldDesc": "If enabled, the compactor will downsample profiles in blocks at compaction level 3 and above. The original profiles are also kept.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_opening_blocks_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.max-opening-blocks-concurrency",
            "FieldDesc": "Number of goroutines opening blocks before compaction.",
            "FieldType": "int",
            "FieldDefault": "16",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enabled_tenants",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.enabled-tenants",
            "FieldDesc": "Comma separated list of tenants that can be compacted. If specified, only these tenants will be compacted by compactor, otherwise all tenants can be compacted. Subject to sharding.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "disabled_tenants",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.disabled-tenants",
            "FieldDesc": "Comma separated list of tenants that cannot be compacted by this compactor. If specified, and compactor would normally pick given tenant for compaction (via -compactor.enabled-tenants or sharding), it will be ignored instead.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "sharding_ring",
            "Required": false,
            "Block": {
              "Name": "sharding_ring",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "The key-value store used to share the hash ring across multiple instances.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "compactor.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "memberlist",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "compactor.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "FieldFlag": "compactor.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "FieldCategory": "",
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The key-value store used to share the hash ring across multiple instances.",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which compactors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.instance-interface-names",
                  "FieldDesc": "List of network interface names to look up when finding the instance IP address.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to -server.http-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring. Default is auto-detected.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address. (default false)",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "wait_stability_min_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.wait-stability-min-duration",
                  "FieldDesc": "Minimum time to wait for ring stability at startup. 0 to disable.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "wait_stability_max_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.wait-stability-max-duration",
                  "FieldDesc": "Maximum time to wait for ring stability at startup. If the compactor ring keeps changing after this period of time, the compactor will start anyway.",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "wait_active_instance_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "compactor.ring.wait-active-instance-timeout",
                  "FieldDesc": "Timeout for waiting on compactor to become ACTIVE in the ring.",
                  "FieldType": "duration",
                  "FieldDefault": "10m0s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_jobs_order",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compaction-jobs-order",
            "FieldDesc": "The sorting to use when deciding which compaction jobs should run first for a given tenant. Supported values are: smallest-range-oldest-blocks-first, newest-blocks-first.",
            "FieldType": "string",
            "FieldDefault": "smallest-range-oldest-blocks-first",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_split_by",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "compactor.compaction-split-by",
            "FieldDesc": "Experimental: The strategy to use when splitting blocks during compaction. Supported values are: fingerprint, stacktracePartition.",
            "FieldType": "string",
            "FieldDefault": "fingerprint",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The compactor block configures the compactor.",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "tenant_settings",
      "Required": false,
      "Block": {
        "Name": "tenant_settings",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "collection_rules",
            "Required": false,
            "Block": {
              "Name": "collection_rules",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "tenant-settings.collection-rules.enabled",
                  "FieldDesc": "Enable the storing of collection config in tenant settings.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "pyroscope_url",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "tenant-settings.collection-rules.pyroscope-url",
                  "FieldDesc": "The public facing URL of the Pyroscope instance.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "alloy_template_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "tenant-settings.collection-rules.alloy-template-path",
                  "FieldDesc": "Override the default alloy go template.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "recording_rules",
            "Required": false,
            "Block": {
              "Name": "recording_rules",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "tenant-settings.recording-rules.enabled",
                  "FieldDesc": "Enable the storing of recording rules in tenant settings.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "storage",
      "Required": false,
      "Block": {
        "Name": "storage",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "backend",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "storage.backend",
            "FieldDesc": "Backend storage to use. Supported backends are: s3, gcs, azure, swift, filesystem, cos.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "s3",
            "Required": false,
            "Block": {
              "Name": "s3_storage_backend",
              "Desc": "The s3_backend block configures the connection to Amazon S3 object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.endpoint",
                  "FieldDesc": "The S3 bucket endpoint. It could be an AWS S3 endpoint listed at https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an S3-compatible service in hostname:port format.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "region",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.region",
                  "FieldDesc": "S3 region. If unset, the client will issue a S3 GetBucketLocation API call to autodetect it.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "bucket_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.bucket-name",
                  "FieldDesc": "S3 bucket name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_access_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.secret-access-key",
                  "FieldDesc": "S3 secret access key",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "access_key_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.access-key-id",
                  "FieldDesc": "S3 access key ID",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "insecure",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.insecure",
                  "FieldDesc": "If enabled, use http:// for the S3 endpoint instead of https://. This could be useful in local dev/test environments while using an S3-compatible backend storage, like Minio.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "signature_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.signature-version",
                  "FieldDesc": "The signature version to use for authenticating against S3. Supported values are: v4, v2.",
                  "FieldType": "string",
                  "FieldDefault": "v4",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "force_path_style",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.force-path-style",
                  "FieldDesc": "Deprecated, use s3.bucket-lookup-type instead. Set this to `true` to force the bucket lookup to be using path-style.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "bucket_lookup_type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.s3.bucket-lookup-type",
                  "FieldDesc": "S3 bucket lookup style, use one of: [path-style virtual-hosted-style auto]",
                  "FieldType": "string",
                  "FieldDefault": "auto",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "sse",
                  "Required": false,
                  "Block": {
                    "Name": "sse",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "type",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.sse.type",
                        "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "kms_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.sse.kms-key-id",
                        "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "kms_encryption_context",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.sse.kms-encryption-context",
                        "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http",
                  "Required": false,
                  "Block": {
                    "Name": "http",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "idle_conn_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.http.idle-conn-timeout",
                        "FieldDesc": "The time an idle connection will remain idle before closing.",
                        "FieldType": "duration",
                        "FieldDefault": "1m30s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "response_header_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.http.response-header-timeout",
                        "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                        "FieldType": "duration",
                        "FieldDefault": "2m0s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.http.insecure-skip-verify",
                        "FieldDesc": "If the client connects to S3 via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_handshake_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.tls-handshake-timeout",
                        "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expect_continue_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.expect-continue-timeout",
                        "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_connections",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.max-idle-connections",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_connections_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.max-idle-connections-per-host",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connections_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.s3.max-connections-per-host",
                        "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The s3_backend block configures the connection to Amazon S3 object storage backend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "gcs",
            "Required": false,
            "Block": {
              "Name": "gcs_storage_backend",
              "Desc": "The gcs_backend block configures the connection to Google Cloud Storage object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "bucket_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.gcs.bucket-name",
                  "FieldDesc": "GCS bucket name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "service_account",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.gcs.service-account",
                  "FieldDesc": "JSON either from a Google Developers Console client_credentials.json file, or a Google Developers service account key. Needs to be valid JSON, not a filesystem path. If empty, fallback to Google default logic:\n1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. For workload identity federation, refer to https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation on how to generate the JSON configuration file for on-prem/non-Google cloud platforms.\n2. A JSON file in a location known to the gcloud command-line tool: $HOME/.config/gcloud/application_default_credentials.json.\n3. On Google Compute Engine it fetches credentials from the metadata server.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http",
                  "Required": false,
                  "Block": {
                    "Name": "http",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "idle_conn_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.http.idle-conn-timeout",
                        "FieldDesc": "The time an idle connection will remain idle before closing.",
                        "FieldType": "duration",
                        "FieldDefault": "1m30s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "response_header_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.http.response-header-timeout",
                        "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                        "FieldType": "duration",
                        "FieldDefault": "2m0s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.http.insecure-skip-verify",
                        "FieldDesc": "If the client connects to GCS via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_handshake_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.tls-handshake-timeout",
                        "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expect_continue_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.expect-continue-timeout",
                        "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.max-idle-connections",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.max-idle-connections-per-host",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_conns_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.gcs.max-connections-per-host",
                        "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The gcs_backend block configures the connection to Google Cloud Storage object storage backend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "azure",
            "Required": false,
            "Block": {
              "Name": "azure_storage_backend",
              "Desc": "The azure_storage_backend block configures the connection to Azure object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "account_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.account-name",
                  "FieldDesc": "Azure storage account name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "account_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.account-key",
                  "FieldDesc": "Azure storage account key. If unset, Azure managed identities will be used for authentication instead.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connection_string",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.connection-string",
                  "FieldDesc": "If `connection-string` is set, the value of `endpoint-suffix` will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "container_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.container-name",
                  "FieldDesc": "Azure storage container name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint_suffix",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.endpoint-suffix",
                  "FieldDesc": "Azure storage endpoint suffix without schema. The account name will be prefixed to this value to create the FQDN. If set to empty string, default endpoint suffix is used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.max-retries",
                  "FieldDesc": "Number of retries for recoverable errors",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_assigned_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.azure.user-assigned-id",
                  "FieldDesc": "User assigned managed identity. If empty, then System assigned identity is used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The azure_storage_backend block configures the connection to Azure object storage backend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "swift",
            "Required": false,
            "Block": {
              "Name": "swift_storage_backend",
              "Desc": "The swift_storage_backend block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "auth_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.auth-version",
                  "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "auth_url",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.auth-url",
                  "FieldDesc": "OpenStack Swift authentication URL",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "username",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.username",
                  "FieldDesc": "OpenStack Swift username.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.user-domain-name",
                  "FieldDesc": "OpenStack Swift user's domain name.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.user-domain-id",
                  "FieldDesc": "OpenStack Swift user's domain ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.user-id",
                  "FieldDesc": "OpenStack Swift user ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "password",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.password",
                  "FieldDesc": "OpenStack Swift API key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.domain-id",
                  "FieldDesc": "OpenStack Swift user's domain ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.domain-name",
                  "FieldDesc": "OpenStack Swift user's domain name.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.project-id",
                  "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.project-name",
                  "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.project-domain-id",
                  "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.project-domain-name",
                  "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "region_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.region-name",
                  "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "container_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.container-name",
                  "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.max-retries",
                  "FieldDesc": "Max retries on requests error.",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.connect-timeout",
                  "FieldDesc": "Time after which a connection attempt is aborted.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "request_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.swift.request-timeout",
                  "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The swift_storage_backend block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "cos",
            "Required": false,
            "Block": {
              "Name": "cos",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "bucket",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.bucket",
                  "FieldDesc": "COS bucket name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "region",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.region",
                  "FieldDesc": "COS region name",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "app_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.app-id",
                  "FieldDesc": "COS app id",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.endpoint",
                  "FieldDesc": "COS storage endpoint",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.secret-key",
                  "FieldDesc": "COS secret key",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.cos.secret-id",
                  "FieldDesc": "COS secret id",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http",
                  "Required": false,
                  "Block": {
                    "Name": "http",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "idle_conn_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.http.idle-conn-timeout",
                        "FieldDesc": "The time an idle connection will remain idle before closing.",
                        "FieldType": "duration",
                        "FieldDefault": "1m30s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "response_header_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.http.response-header-timeout",
                        "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                        "FieldType": "duration",
                        "FieldDefault": "2m0s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.http.insecure-skip-verify",
                        "FieldDesc": "If the client connects to COS via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_handshake_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.tls-handshake-timeout",
                        "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expect_continue_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.expect-continue-timeout",
                        "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_connections",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.max-idle-connections",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_connections_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.max-idle-connections-per-host",
                        "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connections_per_host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "FieldFlag": "storage.cos.max-connections-per-host",
                        "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "FieldCategory": "",
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "filesystem",
            "Required": false,
            "Block": {
              "Name": "filesystem_storage_backend",
              "Desc": "The filesystem_storage_backend block configures the usage of local file system as object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "dir",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "FieldFlag": "storage.filesystem.dir",
                  "FieldDesc": "Local filesystem storage directory.",
                  "FieldType": "string",
                  "FieldDefault": "./data-shared",
                  "FieldExample": null,
                  "FieldCategory": "",
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The filesystem_storage_backend block configures the usage of local file system as object storage backend.",
            "Root": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "storage.prefix",
            "FieldDesc": "Prefix for all objects stored in the backend storage. For simplicity, it may only contain digits and English alphabet characters, hyphens, underscores, dots and forward slashes.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "storage_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "storage.storage-prefix",
            "FieldDesc": "Deprecated: Use 'storage..prefix' instead. Prefix for all objects stored in the backend storage. For simplicity, it may only contain digits and English alphabet characters, hyphens, underscores, dots and forward slashes.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "self_profiling",
      "Required": false,
      "Block": {
        "Name": "self_profiling",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "disable_push",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "self-profiling.disable-push",
            "FieldDesc": "When running in single binary (--target=all) Pyroscope will push (Go SDK) profiles to itself. Set to true to disable self-profiling.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "mutex_profile_fraction",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "self-profiling.mutex-profile-fraction",
            "FieldDesc": "",
            "FieldType": "int",
            "FieldDefault": "5",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_profile_rate",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "self-profiling.block-profile-rate",
            "FieldDesc": "",
            "FieldType": "int",
            "FieldDefault": "5",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "use_k6_middleware",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "self-profiling.use-k6-middleware",
            "FieldDesc": "Read k6 labels from request headers and set them as dynamic profile tags.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "multitenancy_enabled",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "auth.multitenancy-enabled",
      "FieldDesc": "When set to true, incoming HTTP requests must specify tenant ID in HTTP X-Scope-OrgId header. When set to false, tenant ID anonymous is used instead.",
      "FieldType": "boolean",
      "FieldDefault": "false",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "analytics",
      "Required": false,
      "Block": {
        "Name": "analytics",
        "Desc": "The analytics block configures usage statistics collection. For more details about usage statistics, refer to [Anonymous usage statistics reporting](../anonymous-usage-statistics-reporting)",
        "Entries": [
          {
            "Kind": "field",
            "Name": "reporting_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "usage-stats.enabled",
            "FieldDesc": "Enable anonymous usage statistics collection. For more details about usage statistics, refer to https://grafana.com/docs/pyroscope/latest/configure-server/anonymous-usage-statistics-reporting/",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The analytics block configures usage statistics collection. For more details about usage statistics, refer to [Anonymous usage statistics reporting](../anonymous-usage-statistics-reporting)",
      "Root": true,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "show_banner",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "config.show_banner",
      "FieldDesc": "Prints the application banner at startup.",
      "FieldType": "boolean",
      "FieldDefault": "true",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "shutdown_delay",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "shutdown-delay",
      "FieldDesc": "Wait time before shutting down after a termination signal.",
      "FieldType": "duration",
      "FieldDefault": "0s",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "embedded_grafana",
      "Required": false,
      "Block": {
        "Name": "embedded_grafana",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "data_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "embedded-grafana.data-path",
            "FieldDesc": "The directory where the Grafana data will be stored.",
            "FieldType": "string",
            "FieldDefault": "./data/__embedded_grafana/",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "listen_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "embedded-grafana.listen-port",
            "FieldDesc": "The port on which the Grafana will listen.",
            "FieldType": "int",
            "FieldDefault": "4041",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "pyroscope_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "FieldFlag": "embedded-grafana.pyroscope-url",
            "FieldDesc": "The URL of the Pyroscope instance to use for the Grafana datasources.",
            "FieldType": "string",
            "FieldDefault": "http://localhost:4040",
            "FieldExample": null,
            "FieldCategory": "",
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "FieldCategory": "",
      "Element": null
    }
  ],
  "FlagsPrefix": "",
  "FlagsPrefixes": null
}
