{
  "Name": "",
  "Desc": "",
  "Entries": [
    {
      "Kind": "field",
      "Name": "target",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "target",
      "FieldDesc": "A comma-separated list of components to run. The default value 'all' runs Loki in single binary mode. The value 'read' is an alias to run only read-path related components such as the querier and query-frontend, but all in the same process. The value 'write' is an alias to run only write-path related components such as the distributor and compactor, but all in the same process. Supported values: all, compactor, distributor, ingester, querier, query-scheduler, ingester-querier, query-frontend, index-gateway, ruler, table-manager, read, write. A full list of available targets can be printed when running Loki with the '-list-targets' command line flag. ",
      "FieldType": "string",
      "FieldDefault": "all",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "auth_enabled",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "auth.enabled",
      "FieldDesc": "Enables authentication through the X-Scope-OrgID header, which must be present if true. If false, the OrgID will always be set to 'fake'.",
      "FieldType": "boolean",
      "FieldDefault": "true",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "ballast_bytes",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "config.ballast-bytes",
      "FieldDesc": "The amount of virtual memory in bytes to reserve as ballast in order to optimize garbage collection. Larger ballasts result in fewer garbage collection passes, reducing CPU overhead at the cost of heap size. The ballast will not consume physical memory, because it is never read from. It will, however, distort metrics, because it is counted as live memory. ",
      "FieldType": "int",
      "FieldDefault": "0",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "server",
      "Required": false,
      "Block": {
        "Name": "server",
        "Desc": "Configures the server of the launched module(s).",
        "Entries": [
          {
            "Kind": "field",
            "Name": "http_listen_network",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-listen-network",
            "FieldDesc": "HTTP server listen network, default tcp",
            "FieldType": "string",
            "FieldDefault": "tcp",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-listen-address",
            "FieldDesc": "HTTP server listen address.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-listen-port",
            "FieldDesc": "HTTP server listen port.",
            "FieldType": "int",
            "FieldDefault": "3100",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_listen_conn_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-conn-limit",
            "FieldDesc": "Maximum number of simultaneous http connections, <=0 to disable",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_network",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-listen-network",
            "FieldDesc": "gRPC server listen network",
            "FieldType": "string",
            "FieldDefault": "tcp",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-listen-address",
            "FieldDesc": "gRPC server listen address.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-listen-port",
            "FieldDesc": "gRPC server listen port.",
            "FieldType": "int",
            "FieldDefault": "9095",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_listen_conn_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-conn-limit",
            "FieldDesc": "Maximum number of simultaneous grpc connections, <=0 to disable",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_collect_max_streams_by_conn",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-collect-max-streams-by-conn",
            "FieldDesc": "If true, the max streams by connection gauge will be collected.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "proxy_protocol_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.proxy-protocol-enabled",
            "FieldDesc": "Enables PROXY protocol.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_cipher_suites",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.tls-cipher-suites",
            "FieldDesc": "Comma-separated list of cipher suites to use. If blank, the default Go cipher suites is used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_min_version",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.tls-min-version",
            "FieldDesc": "Minimum TLS version to use. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13. If blank, the Go TLS minimum version is used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "http_tls_config",
            "Required": false,
            "Block": {
              "Name": "http_tls_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "cert",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS certificate. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS key. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Root certificate authority used to verify client certificates. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cert_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.http-tls-cert-path",
                  "FieldDesc": "HTTP server cert path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.http-tls-key-path",
                  "FieldDesc": "HTTP server key path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_auth_type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.http-tls-client-auth",
                  "FieldDesc": "HTTP TLS Client Auth type.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.http-tls-ca-path",
                  "FieldDesc": "HTTP TLS Client CA path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_tls_config",
            "Required": false,
            "Block": {
              "Name": "grpc_tls_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "cert",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS certificate. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Server TLS key. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Root certificate authority used to verify client certificates. This configuration parameter is YAML only.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cert_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.grpc-tls-cert-path",
                  "FieldDesc": "GRPC TLS server cert path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "key_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.grpc-tls-key-path",
                  "FieldDesc": "GRPC TLS server key path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_auth_type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.grpc-tls-client-auth",
                  "FieldDesc": "GRPC TLS Client Auth type.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_ca_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.grpc-tls-ca-path",
                  "FieldDesc": "GRPC TLS Client CA path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "register_instrumentation",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.register-instrumentation",
            "FieldDesc": "Register the intrumentation handlers (/metrics etc).",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "report_grpc_codes_in_instrumentation_label_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.report-grpc-codes-in-instrumentation-label-enabled",
            "FieldDesc": "If set to true, gRPC statuses will be reported in instrumentation labels with their string representations. Otherwise, they will be reported as \"error\".",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "graceful_shutdown_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.graceful-shutdown-timeout",
            "FieldDesc": "Timeout for graceful shutdowns",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_read_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-read-timeout",
            "FieldDesc": "Read timeout for entire HTTP request, including headers and body.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_read_header_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-read-header-timeout",
            "FieldDesc": "Read timeout for HTTP request headers. If set to 0, value of -server.http-read-timeout is used.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-write-timeout",
            "FieldDesc": "Write timeout for HTTP server",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_server_idle_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-idle-timeout",
            "FieldDesc": "Idle timeout for HTTP server",
            "FieldType": "duration",
            "FieldDefault": "2m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_log_closed_connections_without_response_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.http-log-closed-connections-without-response-enabled",
            "FieldDesc": "Log closed connections that did not receive any response, most likely because client didn't send any request within timeout.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_recv_msg_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-max-recv-msg-size-bytes",
            "FieldDesc": "Limit on the size of a gRPC message this server can receive (bytes).",
            "FieldType": "int",
            "FieldDefault": "4194304",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_send_msg_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-max-send-msg-size-bytes",
            "FieldDesc": "Limit on the size of a gRPC message this server can send (bytes).",
            "FieldType": "int",
            "FieldDefault": "4194304",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_concurrent_streams",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc-max-concurrent-streams",
            "FieldDesc": "Limit on the number of concurrent streams for gRPC calls per client connection (0 = unlimited)",
            "FieldType": "int",
            "FieldDefault": "100",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_idle",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-idle",
            "FieldDesc": "The duration after which an idle connection should be closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_age",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-age",
            "FieldDesc": "The duration for the maximum amount of time a connection may exist before it will be closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_max_connection_age_grace",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.max-connection-age-grace",
            "FieldDesc": "An additive period after max-connection-age after which the connection will be forcibly closed. Default: infinity",
            "FieldType": "duration",
            "FieldDefault": "2562047h47m16.854775807s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_keepalive_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.time",
            "FieldDesc": "Duration after which a keepalive probe is sent in case of no activity over the connection., Default: 2h",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_keepalive_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.timeout",
            "FieldDesc": "After having pinged for keepalive check, the duration after which an idle connection should be closed, Default: 20s",
            "FieldType": "duration",
            "FieldDefault": "20s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_min_time_between_pings",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.min-time-between-pings",
            "FieldDesc": "Minimum amount of time a client should wait before sending a keepalive ping. If client sends keepalive ping more often, server will send GOAWAY and close the connection.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_ping_without_stream_allowed",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.keepalive.ping-without-stream-allowed",
            "FieldDesc": "If true, server allows keepalive pings even when there are no active streams(RPCs). If false, and client sends ping when there are no active streams, server will send GOAWAY and close the connection.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_num_workers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.num-workers",
            "FieldDesc": "If non-zero, configures the amount of GRPC server workers used to serve the requests.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_stats_tracking_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.stats-tracking-enabled",
            "FieldDesc": "If true, the request_message_bytes, response_message_bytes, and inflight_requests metrics will be tracked. Enabling this option prevents the use of memory pools for parsing gRPC request bodies and may lead to more memory allocations.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "grpc_server_recv_buffer_pools_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.grpc.recv-buffer-pools-enabled",
            "FieldDesc": "Deprecated option, has no effect and will be removed in a future version.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_format",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "log.format",
            "FieldDesc": "Output log messages in the given format. Valid formats: [logfmt, json]",
            "FieldType": "string",
            "FieldDefault": "logfmt",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_level",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "log.level",
            "FieldDesc": "Only log messages with the given severity or above. Valid levels: [debug, info, warn, error]",
            "FieldType": "string",
            "FieldDefault": "info",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-source-ips-enabled",
            "FieldDesc": "Optionally log the source IPs.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_full",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-source-ips-full",
            "FieldDesc": "Log all source IPs instead of only the originating one. Only used if server.log-source-ips-enabled is true",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_header",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-source-ips-header",
            "FieldDesc": "Header field storing the source IPs. Only used if server.log-source-ips-enabled is true. If not set the default Forwarded, X-Real-IP and X-Forwarded-For headers are used",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_source_ips_regex",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-source-ips-regex",
            "FieldDesc": "Regex for matching the source IPs. Only used if server.log-source-ips-enabled is true. If not set the default Forwarded, X-Real-IP and X-Forwarded-For headers are used",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_headers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-request-headers",
            "FieldDesc": "Optionally log request headers.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_at_info_level_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-request-at-info-level-enabled",
            "FieldDesc": "Optionally log requests at info level instead of debug level. Applies to request headers as well if server.log-request-headers is enabled.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_request_exclude_headers_list",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.log-request-headers-exclude-list",
            "FieldDesc": "Comma separated list of headers to exclude from loggin. Only used if server.log-request-headers is true.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "trace_request_headers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.trace-request-headers",
            "FieldDesc": "Optionally add request headers to tracing spans.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "trace_request_exclude_headers_list",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.trace-request-headers-exclude-list",
            "FieldDesc": "Comma separated list of headers to exclude from tracing spans. Only used if server.trace-request-headers is true. The following headers are always excluded: Authorization, Cookie, X-Csrf-Token.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "http_path_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "server.path-prefix",
            "FieldDesc": "Base path to serve all API routes from (e.g. /v1/)",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "cluster_validation",
            "Required": false,
            "Block": {
              "Name": "cluster_validation",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "label",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "server.cluster-validation.label",
                  "FieldDesc": "Optionally define the cluster validation label.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "grpc",
                  "Required": false,
                  "Block": {
                    "Name": "grpc",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "server.cluster-validation.grpc.enabled",
                        "FieldDesc": "When enabled, cluster label validation is executed: configured cluster validation label is compared with the cluster validation label received through the requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "soft_validation",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "server.cluster-validation.grpc.soft-validation",
                        "FieldDesc": "When enabled, soft cluster label validation is executed. Can be enabled only together with server.cluster-validation.grpc.enabled",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http",
                  "Required": false,
                  "Block": {
                    "Name": "http",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "server.cluster-validation.http.enabled",
                        "FieldDesc": "When enabled, cluster label validation is executed: configured cluster validation label is compared with the cluster validation label received through the requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "soft_validation",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "server.cluster-validation.http.soft-validation",
                        "FieldDesc": "When enabled, soft cluster label validation is executed. Can be enabled only together with server.cluster-validation.http.enabled",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_paths",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "server.cluster-validation.http.excluded-paths",
                        "FieldDesc": "Comma-separated list of url paths that are excluded from the cluster validation check.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configures the server of the launched module(s).",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ui",
      "Required": false,
      "Block": {
        "Name": "ui",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.enabled",
            "FieldDesc": "Enable the experimental Loki UI.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "node_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.node-name",
            "FieldDesc": "Name to use for this node in the cluster.",
            "FieldType": "string",
            "FieldDefault": "<hostname>",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "advertise_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.advertise-addr",
            "FieldDesc": "IP address to advertise in the cluster.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "interface_names",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.interface",
            "FieldDesc": "Name of network interface to read address from.",
            "FieldType": "list of strings",
            "FieldDefault": "[<private network interfaces>]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "rejoin_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.rejoin-interval",
            "FieldDesc": "How frequently to rejoin the cluster to address split brain issues.",
            "FieldType": "duration",
            "FieldDefault": "3m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_max_join_peers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.cluster-max-join-peers",
            "FieldDesc": "Number of initial peers to join from the discovered set.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.cluster-name",
            "FieldDesc": "Name to prevent nodes without this identifier from joining the cluster.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_ipv6",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.enable-ipv6",
            "FieldDesc": "Enable using a IPv6 instance address.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "debug",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ui.debug",
            "FieldDesc": "Enable debug logging for the UI.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "discovery",
            "Required": false,
            "Block": {
              "Name": "discovery",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "join_peers",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ui.discovery.join-peers",
                  "FieldDesc": "List of peers to join the cluster. Supports multiple values separated by commas. Each value can be a hostname, an IP address, or a DNS name (A/AAAA and SRV records).",
                  "FieldType": "list of strings",
                  "FieldDefault": "[]",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "distributor",
      "Required": false,
      "Block": {
        "Name": "distributor",
        "Desc": "Configures the distributor.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "ring",
            "Required": false,
            "Block": {
              "Name": "ring",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "distributor.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "distributor.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "distributor.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "distributor.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which distributors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "push_worker_count",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.push-worker-count",
            "FieldDesc": "Number of workers to push batches to ingesters.",
            "FieldType": "int",
            "FieldDefault": "256",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_recv_msg_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.max-recv-msg-size",
            "FieldDesc": "The maximum size of a received message.",
            "FieldType": "int",
            "FieldDefault": "104857600",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "rate_store",
            "Required": false,
            "Block": {
              "Name": "rate_store",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_request_parallelism",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.rate-store.max-request-parallelism",
                  "FieldDesc": "The max number of concurrent requests to make to ingester stream apis",
                  "FieldType": "int",
                  "FieldDefault": "200",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "stream_rate_update_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.rate-store.stream-rate-update-interval",
                  "FieldDesc": "The interval on which distributors will update current stream rates from ingesters",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ingester_request_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.rate-store.ingester-request-timeout",
                  "FieldDesc": "Timeout for communication between distributors and any given ingester when updating rates",
                  "FieldType": "duration",
                  "FieldDefault": "500ms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "debug",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.rate-store.debug",
                  "FieldDesc": "If enabled, detailed logs and spans will be emitted.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "write_failures_logging",
            "Required": false,
            "Block": {
              "Name": "write_failures_logging",
              "Desc": "Customize the logging of write failures.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "rate",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.write-failures-logging.rate",
                  "FieldDesc": "Log volume allowed (per second). Default: 1KB.",
                  "FieldType": "int",
                  "FieldDefault": "1KB",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "add_insights_label",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.write-failures-logging.add-insights-label",
                  "FieldDesc": "Whether a insight=true key should be logged or not. Default: false.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Customize the logging of write failures.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "otlp_config",
            "Required": false,
            "Block": {
              "Name": "otlp_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "default_resource_attributes_as_index_labels",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.otlp.default_resource_attributes_as_index_labels",
                  "FieldDesc": "List of default otlp resource attributes to be picked as index labels",
                  "FieldType": "list of strings",
                  "FieldDefault": "[service.name service.namespace service.instance.id deployment.environment deployment.environment.name cloud.region cloud.availability_zone k8s.cluster.name k8s.namespace.name k8s.pod.name k8s.container.name container.name k8s.replicaset.name k8s.deployment.name k8s.statefulset.name k8s.daemonset.name k8s.cronjob.name k8s.job.name]",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "kafka_writes_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.kafka-writes-enabled",
            "FieldDesc": "Enable writes to Kafka during Push requests.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingester_writes_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingester-writes-enabled",
            "FieldDesc": "Enable writes to Ingesters during Push requests. Defaults to true.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingest_limits_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingest-limits-enabled",
            "FieldDesc": "Enable checking limits against the ingest-limits service. Defaults to false.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingest_limits_dry_run_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingest-limits-dry-run-enabled",
            "FieldDesc": "Enable dry-run mode where limits are checked the ingest-limits service, but not enforced. Defaults to false.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "tenant_topic",
            "Required": false,
            "Block": {
              "Name": "tenant_topic",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.enabled",
                  "FieldDesc": "Enable the tenant topic tee, which writes logs to Kafka topics based on tenant IDs instead of using multitenant topics/partitions.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "topic_prefix",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.topic-prefix",
                  "FieldDesc": "Prefix to prepend to tenant IDs to form the final Kafka topic name",
                  "FieldType": "string",
                  "FieldDefault": "loki.tenant",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_buffered_bytes",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.max-buffered-bytes",
                  "FieldDesc": "Maximum number of bytes that can be buffered before producing to Kafka",
                  "FieldType": "int",
                  "FieldDefault": "100MiB",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_record_size_bytes",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.max-record-size-bytes",
                  "FieldDesc": "Maximum size of a single Kafka record in bytes",
                  "FieldType": "int",
                  "FieldDefault": "15MiB249KiB",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "strategy",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.strategy",
                  "FieldDesc": "Topic strategy to use. Valid values are 'simple' or 'automatic'",
                  "FieldType": "string",
                  "FieldDefault": "simple",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "target_throughput_per_partition",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.tenant-topic-tee.target-throughput-per-partition",
                  "FieldDesc": "Target throughput per partition in bytes for the automatic strategy",
                  "FieldType": "int",
                  "FieldDefault": "10MiB",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configures the distributor.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "querier",
      "Required": false,
      "Block": {
        "Name": "querier",
        "Desc": "Configures the querier. Only appropriate when running all modules or just the querier.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "tail_max_duration",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.tail-max-duration",
            "FieldDesc": "Maximum duration for which the live tailing requests are served.",
            "FieldType": "duration",
            "FieldDefault": "1h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "extra_query_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.extra-query-delay",
            "FieldDesc": "Time to wait before sending more than the minimum successful query requests.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_ingesters_within",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.query-ingesters-within",
            "FieldDesc": "Maximum lookback beyond which queries are not sent to ingester. 0 means all queries are sent to ingester.",
            "FieldType": "duration",
            "FieldDefault": "3h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "engine",
            "Required": false,
            "Block": {
              "Name": "engine",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_look_back_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.engine.max-lookback-period",
                  "FieldDesc": "The maximum amount of time to look back for log lines. Used only for instant log queries.",
                  "FieldType": "duration",
                  "FieldDefault": "30s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_count_min_sketch_heap_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.engine.max-count-min-sketch-heap-size",
                  "FieldDesc": "The maximum number of labels the heap of a topk query using a count min sketch can track.",
                  "FieldType": "int",
                  "FieldDefault": "10000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_v2_engine",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.engine.enable-v2-engine",
                  "FieldDesc": "Experimental: Enable next generation query engine for supported queries.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "batch_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.engine.batch-size",
                  "FieldDesc": "Experimental: Batch size of the next generation query engine.",
                  "FieldType": "int",
                  "FieldDefault": "100",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_concurrent",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-concurrent",
            "FieldDesc": "The maximum number of queries that can be simultaneously processed by the querier.",
            "FieldType": "int",
            "FieldDefault": "4",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_store_only",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.query-store-only",
            "FieldDesc": "Only query the store, and not attempt any ingesters. This is useful for running a standalone querier pool operating only against stored data.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_ingester_only",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.query-ingester-only",
            "FieldDesc": "When true, queriers only query the ingesters, and not stored data. This is useful when the object store is unavailable.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "multi_tenant_queries_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.multi-tenant-queries-enabled",
            "FieldDesc": "When true, allow queries to span multiple tenants.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "per_request_limits_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.per-request-limits-enabled",
            "FieldDesc": "When true, querier limits sent via a header are enforced.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_partition_ingesters",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.query-partition-ingesters",
            "FieldDesc": "When true, querier directs ingester queries to the partition-ingesters instead of the normal ingesters.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configures the querier. Only appropriate when running all modules or just the querier.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "query_scheduler",
      "Required": false,
      "Block": {
        "Name": "query_scheduler",
        "Desc": "The query_scheduler block configures the Loki query scheduler. When configured it separates the tenant query queues from the query-frontend.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "max_outstanding_requests_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "query-scheduler.max-outstanding-requests-per-tenant",
            "FieldDesc": "Maximum number of outstanding requests per tenant per query-scheduler. In-flight requests above this limit will fail with HTTP response status code 429.",
            "FieldType": "int",
            "FieldDefault": "32000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_queue_hierarchy_levels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "query-scheduler.max-queue-hierarchy-levels",
            "FieldDesc": "Maximum number of levels of nesting of hierarchical queues. 0 means that hierarchical queues are disabled.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "querier_forget_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "query-scheduler.querier-forget-delay",
            "FieldDesc": "If a querier disconnects without sending notification about graceful shutdown, the query-scheduler will keep the querier in the tenant's shard until the forget delay has passed. This feature is useful to reduce the blast radius when shuffle-sharding is enabled.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "This configures the gRPC client used to report errors back to the query-frontend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.grpc-client-config.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.grpc-client-config.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "This configures the gRPC client used to report errors back to the query-frontend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "use_scheduler_ring",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "query-scheduler.use-scheduler-ring",
            "FieldDesc": "Set to true to have the query schedulers create and place themselves in a ring. If no frontend_address or scheduler_address are present anywhere else in the configuration, Loki will toggle this value to true.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "scheduler_ring",
            "Required": false,
            "Block": {
              "Name": "scheduler_ring",
              "Desc": "The hash ring configuration. This option is required only if use_scheduler_ring is true.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "query-scheduler.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "query-scheduler.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "query-scheduler.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which compactors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "zone_awareness_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.zone-awareness-enabled",
                  "FieldDesc": "True to enable zone-awareness and replicate blocks across different availability zones.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.num-tokens",
                  "FieldDesc": "IGNORED: Num tokens is fixed to 1",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.replication-factor",
                  "FieldDesc": "IGNORED: Replication factor is fixed to 2",
                  "FieldType": "int",
                  "FieldDefault": "2",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-availability-zone",
                  "FieldDesc": "The availability zone where this instance is running. Required if zone-awareness is enabled.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "query-scheduler.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The hash ring configuration. This option is required only if use_scheduler_ring is true.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The query_scheduler block configures the Loki query scheduler. When configured it separates the tenant query queues from the query-frontend.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "frontend",
      "Required": false,
      "Block": {
        "Name": "frontend",
        "Desc": "The frontend block configures the Loki query-frontend.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "log_queries_longer_than",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.log-queries-longer-than",
            "FieldDesc": "Log queries that are slower than the specified duration. Set to 0 to disable. Set to < 0 to enable on all queries.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_query_request_headers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.log-query-request-headers",
            "FieldDesc": "Comma-separated list of request header names to include in query logs. Applies to both query stats and slow queries logs.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_body_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-body-size",
            "FieldDesc": "Max body size for downstream prometheus.",
            "FieldType": "int",
            "FieldDefault": "10485760",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_stats_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.query-stats-enabled",
            "FieldDesc": "True to enable query statistics tracking. When enabled, a message with some statistics is logged for every query.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_outstanding_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-outstanding-requests-per-tenant",
            "FieldDesc": "Maximum number of outstanding requests per tenant per frontend; requests beyond this error with HTTP 429.",
            "FieldType": "int",
            "FieldDefault": "2048",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "querier_forget_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "query-frontend.querier-forget-delay",
            "FieldDesc": "In the event a tenant is repeatedly sending queries that lead the querier to crash or be killed due to an out-of-memory error, the crashed querier will be disconnected from the query frontend and a new querier will be immediately assigned to the tenant’s shard. This invalidates the assumption that shuffle sharding can be used to reduce the impact on tenants. This option mitigates the impact by configuring a delay between when a querier disconnects because of a crash and when the crashed querier is actually removed from the tenant's shard.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "scheduler_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.scheduler-address",
            "FieldDesc": "DNS hostname used for finding query-schedulers.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "scheduler_dns_lookup_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.scheduler-dns-lookup-period",
            "FieldDesc": "How often to resolve the scheduler-address, in order to look for new query-scheduler instances. Also used to determine how often to poll the scheduler-ring for addresses if the scheduler-ring is configured.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "scheduler_worker_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.scheduler-worker-concurrency",
            "FieldDesc": "Number of concurrent workers forwarding queries to single query-scheduler.",
            "FieldType": "int",
            "FieldDefault": "5",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.grpc-client-config.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.grpc-client-config.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "graceful_shutdown_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.graceful-shutdown-timeout",
            "FieldDesc": "Time to wait for inflight requests to finish before forcefully shutting down. This needs to be aligned with the query timeout and the graceful termination period of the process orchestrator.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_interface_names",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.instance-interface-names",
            "FieldDesc": "Name of network interface to read address from. This address is sent to query-scheduler and querier, which uses it to send the query response back to query-frontend.",
            "FieldType": "list of strings",
            "FieldDefault": "[<private network interfaces>]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_enable_ipv6",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.instance-enable-ipv6",
            "FieldDesc": "Enable using a IPv6 instance address (default false).",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "encoding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.encoding",
            "FieldDesc": "Defines the encoding for requests to and responses from the scheduler and querier. Can be 'json' or 'protobuf' (defaults to 'json').",
            "FieldType": "string",
            "FieldDefault": "json",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compress_responses",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.compress-http-responses",
            "FieldDesc": "Compress HTTP responses.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "downstream_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.downstream-url",
            "FieldDesc": "URL of downstream Loki.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tail_proxy_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.tail-proxy-url",
            "FieldDesc": "URL of querier for tail proxy.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "tail_tls_config",
            "Required": false,
            "Block": {
              "Name": "tls_config",
              "Desc": "The TLS configuration.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.tail-tls-config.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The TLS configuration.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "support_parquet_encoding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Support 'application/vnd.apache.parquet' content type in HTTP responses.",
            "FieldType": "boolean",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The frontend block configures the Loki query-frontend.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "query_range",
      "Required": false,
      "Block": {
        "Name": "query_range",
        "Desc": "The query_range block configures the query splitting and caching in the Loki query-frontend.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "align_queries_with_step",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.align-querier-with-step",
            "FieldDesc": "Mutate incoming queries to align their start and end with their step.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "results_cache",
            "Required": false,
            "Block": {
              "Name": "results_cache",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-results",
            "FieldDesc": "Cache query results.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_retries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-retries-per-request",
            "FieldDesc": "Maximum number of retries for a single request; beyond this, the downstream error is returned.",
            "FieldType": "int",
            "FieldDefault": "5",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "parallelise_shardable_queries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.parallelise-shardable-queries",
            "FieldDesc": "Perform query parallelisations based on storage sharding configuration and query ASTs. This feature is supported only by the chunks storage engine.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "shard_aggregations",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.shard-aggregations",
            "FieldDesc": "A comma-separated list of LogQL vector and range aggregations that should be sharded. Possible values 'quantile_over_time', 'last_over_time', 'first_over_time'.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_index_stats_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-index-stats-results",
            "FieldDesc": "Cache index stats query results.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "index_stats_results_cache",
            "Required": false,
            "Block": {
              "Name": "index_stats_results_cache",
              "Desc": "If a cache config is not specified and cache_index_stats_results is true, the config for the results cache is used.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.index-stats-results-cache.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.index-stats-results-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.index-stats-results-cache.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.index-stats-results-cache.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "If a cache config is not specified and cache_index_stats_results is true, the config for the results cache is used.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_volume_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-volume-results",
            "FieldDesc": "Cache volume query results.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "volume_results_cache",
            "Required": false,
            "Block": {
              "Name": "volume_results_cache",
              "Desc": "If a cache config is not specified and cache_volume_results is true, the config for the results cache is used.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.volume-results-cache.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.volume-results-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.volume-results-cache.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.volume-results-cache.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "If a cache config is not specified and cache_volume_results is true, the config for the results cache is used.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_instant_metric_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-instant-metric-results",
            "FieldDesc": "Cache instant metric query results.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "instant_metric_results_cache",
            "Required": false,
            "Block": {
              "Name": "instant_metric_results_cache",
              "Desc": "If a cache config is not specified and cache_instant_metric_results is true, the config for the results cache is used.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.instant-metric-results-cache.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.instant-metric-results-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.instant-metric-results-cache.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.instant-metric-results-cache.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "If a cache config is not specified and cache_instant_metric_results is true, the config for the results cache is used.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instant_metric_query_split_align",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.instant-metric-query-split-align",
            "FieldDesc": "Whether to align the splits of instant metric query with splitByInterval and query's exec time. Useful when instant_metric_cache is enabled",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_series_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-series-results",
            "FieldDesc": "Cache series query results.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "series_results_cache",
            "Required": false,
            "Block": {
              "Name": "series_results_cache",
              "Desc": "If series_results_cache is not configured and cache_series_results is true, the config for the results cache is used.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.series-results-cache.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.series-results-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.series-results-cache.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.series-results-cache.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "If series_results_cache is not configured and cache_series_results is true, the config for the results cache is used.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_label_results",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.cache-label-results",
            "FieldDesc": "Cache label query results.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "label_results_cache",
            "Required": false,
            "Block": {
              "Name": "label_results_cache",
              "Desc": "If label_results_cache is not configured and cache_label_results is true, the config for the results cache is used.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "frontend.label-results-cache.default-validity",
                        "FieldDesc": "The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.background.write-back-concurrency",
                              "FieldDesc": "At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.background.write-back-buffer",
                              "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.background.write-back-size-limit",
                              "FieldDesc": "Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.expiration",
                              "FieldDesc": "How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.batchsize",
                              "FieldDesc": "How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.parallelism",
                              "FieldDesc": "Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.hostname",
                              "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.service",
                              "FieldDesc": "SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.addresses",
                              "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.max-idle-conns",
                              "FieldDesc": "Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.max-item-size",
                              "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.update-interval",
                              "FieldDesc": "Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.consistent-hash",
                              "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "frontend.label-results-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.endpoint",
                              "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.master-name",
                              "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.timeout",
                              "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.expiration",
                              "FieldDesc": "How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.db",
                              "FieldDesc": "Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.pool-size",
                              "FieldDesc": "Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.username",
                              "FieldDesc": "Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.password",
                              "FieldDesc": "Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.tls-enabled",
                              "FieldDesc": "Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.idle-timeout",
                              "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.max-connection-age",
                              "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.redis.route-randomly",
                              "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.embedded-cache.enabled",
                              "FieldDesc": "Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "frontend.label-results-cache.embedded-cache.ttl",
                              "FieldDesc": "The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "frontend.label-results-cache.compression",
                  "FieldDesc": "Use compression in cache. The default is an empty value '', which disables compression. Supported values are: 'snappy' and ''.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "If label_results_cache is not configured and cache_label_results is true, the config for the results cache is used.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The query_range block configures the query splitting and caching in the Loki query-frontend.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ruler",
      "Required": false,
      "Block": {
        "Name": "ruler",
        "Desc": "The ruler block configures the Loki ruler.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "external_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.external.url",
            "FieldDesc": "Base URL of the Grafana instance.",
            "FieldType": "url",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "datasource_uid",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.datasource-uid",
            "FieldDesc": "Datasource UID for the dashboard.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "slice",
            "Name": "external_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Labels to add to all alerts.",
            "FieldType": "list of Labels",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": {
              "Name": "external_labels",
              "Desc": "Labels to add to all alerts.",
              "Entries": null,
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            }
          },
          {
            "Kind": "block",
            "Name": "ruler_client",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "evaluation_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.evaluation-interval",
            "FieldDesc": "How frequently to evaluate rules.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "poll_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.poll-interval",
            "FieldDesc": "How frequently to poll for rule changes.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "storage",
            "Required": false,
            "Block": {
              "Name": "storage",
              "Desc": "Deprecated: Use -ruler-storage. CLI flags and their respective YAML config options instead.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.storage.type",
                  "FieldDesc": "Method to use for backend rule storage (configdb, azure, gcs, s3, swift, local, bos, cos)",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "azure",
                  "Required": false,
                  "Block": {
                    "Name": "azure_storage_config",
                    "Desc": "Configures backend rule storage for Azure.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "environment",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.environment",
                        "FieldDesc": "Azure Cloud environment. Supported values are: AzureGlobal, AzureChinaCloud, AzureGermanCloud, AzureUSGovernment.",
                        "FieldType": "string",
                        "FieldDefault": "AzureGlobal",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "account_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.account-name",
                        "FieldDesc": "Azure storage account name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "account_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.account-key",
                        "FieldDesc": "Azure storage account key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connection_string",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.connection-string",
                        "FieldDesc": "If `connection-string` is set, the values of `account-name` and `endpoint-suffix` values will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.container-name",
                        "FieldDesc": "Name of the storage account blob container used to store chunks. This container must be created before running cortex.",
                        "FieldType": "string",
                        "FieldDefault": "loki",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint_suffix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.endpoint-suffix",
                        "FieldDesc": "Azure storage endpoint suffix without schema. The storage account name will be prefixed to this value to create the FQDN.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_managed_identity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.use-managed-identity",
                        "FieldDesc": "Use Managed Identity to authenticate to the Azure storage account.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_federated_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.use-federated-token",
                        "FieldDesc": "Use Federated Token to authenticate to the Azure storage account.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_assigned_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.user-assigned-id",
                        "FieldDesc": "User assigned identity ID to authenticate to the Azure storage account.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_service_principal",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.use-service-principal",
                        "FieldDesc": "Use Service Principal to authenticate through Azure OAuth.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "client_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.client-id",
                        "FieldDesc": "Azure Service Principal ID(GUID).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "client_secret",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.client-secret",
                        "FieldDesc": "Azure Service Principal secret key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tenant_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.tenant-id",
                        "FieldDesc": "Azure Tenant ID is used to authenticate through Azure OAuth.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.chunk-delimiter",
                        "FieldDesc": "Chunk delimiter for blob ID to be used",
                        "FieldType": "string",
                        "FieldDefault": "-",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "download_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.download-buffer-size",
                        "FieldDesc": "Preallocated buffer size for downloads.",
                        "FieldType": "int",
                        "FieldDefault": "512000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "upload_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.upload-buffer-size",
                        "FieldDesc": "Preallocated buffer size for uploads.",
                        "FieldType": "int",
                        "FieldDefault": "256000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "upload_buffer_count",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.download-buffer-count",
                        "FieldDesc": "Number of buffers used to used to upload a chunk.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.request-timeout",
                        "FieldDesc": "Timeout for requests made against azure blob storage.",
                        "FieldType": "duration",
                        "FieldDefault": "30s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.max-retries",
                        "FieldDesc": "Number of retries for a request which times out.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_retry_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.min-retry-delay",
                        "FieldDesc": "Minimum time to wait before retrying a request.",
                        "FieldType": "duration",
                        "FieldDefault": "10ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retry_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.azure.max-retry-delay",
                        "FieldDesc": "Maximum time to wait before retrying a request.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for Azure.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "alibabacloud",
                  "Required": false,
                  "Block": {
                    "Name": "alibabacloud_storage_config",
                    "Desc": "Configures backend rule storage for AlibabaCloud Object Storage (OSS).",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.bucketname",
                        "FieldDesc": "Name of OSS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.endpoint",
                        "FieldDesc": "oss Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.access-key-id",
                        "FieldDesc": "alibabacloud Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.secret-access-key",
                        "FieldDesc": "alibabacloud Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "conn_timeout_sec",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.conn-timeout-sec",
                        "FieldDesc": "Connection timeout in seconds",
                        "FieldType": "int",
                        "FieldDefault": "30",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "read_write_timeout_sec",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.oss.read-write-timeout-sec",
                        "FieldDesc": "Read/Write timeout in seconds",
                        "FieldType": "int",
                        "FieldDefault": "60",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for AlibabaCloud Object Storage (OSS).",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "gcs",
                  "Required": false,
                  "Block": {
                    "Name": "gcs_storage_config",
                    "Desc": "Configures backend rule storage for GCS.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.bucketname",
                        "FieldDesc": "Name of GCS bucket. Please refer to https://cloud.google.com/docs/authentication/production for more information about how to configure authentication.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.endpoint",
                        "FieldDesc": "Custom GCS endpoint URL.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service_account",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.service-account",
                        "FieldDesc": "Service account key content in JSON format, refer to https://cloud.google.com/iam/docs/creating-managing-service-account-keys for creation.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.chunk-buffer-size",
                        "FieldDesc": "The size of the buffer that GCS client for each PUT request. 0 to disable buffering.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.request-timeout",
                        "FieldDesc": "The duration after which the requests to GCS should be timed out.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_opencensus",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.enable-opencensus",
                        "FieldDesc": "Enable OpenCensus (OC) instrumentation for all requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_http2",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.enable-http2",
                        "FieldDesc": "Enable HTTP2 connections.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.gcs.enable-retries",
                        "FieldDesc": "Enable automatic retries of failed idempotent requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for GCS.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "s3",
                  "Required": false,
                  "Block": {
                    "Name": "s3_storage_config",
                    "Desc": "Configures backend rule storage for S3.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "s3",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.url",
                        "FieldDesc": "S3 endpoint URL with escaped Key and Secret encoded. If only region is specified as a host, proper endpoint will be deduced. Use inmemory:///<bucket-name> to use a mock in-memory implementation.",
                        "FieldType": "url",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "s3forcepathstyle",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.force-path-style",
                        "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucketnames",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.buckets",
                        "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over. Overrides any buckets specified in s3.url flag",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.endpoint",
                        "FieldDesc": "S3 Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.region",
                        "FieldDesc": "AWS region to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.access-key-id",
                        "FieldDesc": "AWS Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.secret-access-key",
                        "FieldDesc": "AWS Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "session_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.session-token",
                        "FieldDesc": "AWS Session Token",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.insecure",
                        "FieldDesc": "Disable https on s3 connection.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.chunk-delimiter",
                        "FieldDesc": "Delimiter used to replace the default delimiter ':' in chunk IDs when storing chunks. This is mainly intended when you run a MinIO instance on a Windows machine. You should not change this value inflight.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_config",
                        "Required": false,
                        "Block": {
                          "Name": "http_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.http.timeout",
                              "FieldDesc": "Timeout specifies a time limit for requests made by s3 Client.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.http.idle-conn-timeout",
                              "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.http.response-header-timeout",
                              "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.http.insecure-skip-verify",
                              "FieldDesc": "Set to true to skip verifying the certificate chain and hostname.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.http.ca-file",
                              "FieldDesc": "Path to the trusted CA file that signed the SSL certificate of the S3 endpoint.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "signature_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.signature-version",
                        "FieldDesc": "The signature version to use for authenticating against S3. Supported values are: v4.",
                        "FieldType": "string",
                        "FieldDefault": "v4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_class",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.storage-class",
                        "FieldDesc": "The S3 storage class which objects will use. Supported values are: GLACIER, DEEP_ARCHIVE, GLACIER_IR, INTELLIGENT_TIERING, ONEZONE_IA, OUTPOSTS, REDUCED_REDUNDANCY, STANDARD, STANDARD_IA.",
                        "FieldType": "string",
                        "FieldDefault": "STANDARD",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "sse",
                        "Required": false,
                        "Block": {
                          "Name": "sse",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.sse.type",
                              "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.sse.kms-key-id",
                              "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_encryption_context",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.sse.kms-encryption-context",
                              "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "Configures back off when S3 get Object.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.min-backoff",
                              "FieldDesc": "Minimum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.max-backoff",
                              "FieldDesc": "Maximum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "3s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.s3.max-retries",
                              "FieldDesc": "Maximum number of times to retry for s3 GetObject or ObjectExists",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configures back off when S3 get Object.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "disable_dualstack",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.s3.disable-dualstack",
                        "FieldDesc": "Disable forcing S3 dualstack endpoint usage.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for S3.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "bos",
                  "Required": false,
                  "Block": {
                    "Name": "bos_storage_config",
                    "Desc": "Configures backend rule storage for Baidu Object Storage (BOS).",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.bos.bucket-name",
                        "FieldDesc": "Name of BOS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.bos.endpoint",
                        "FieldDesc": "BOS endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "bj.bcebos.com",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.bos.access-key-id",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.bos.secret-access-key",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for Baidu Object Storage (BOS).",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "swift",
                  "Required": false,
                  "Block": {
                    "Name": "swift_storage_config",
                    "Desc": "Configures backend rule storage for Swift.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "auth_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.auth-version",
                        "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_url",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.auth-url",
                        "FieldDesc": "OpenStack Swift authentication URL",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "internal",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.internal",
                        "FieldDesc": "Set this to true to use the internal OpenStack Swift endpoint URL",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.username",
                        "FieldDesc": "OpenStack Swift username.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.user-domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.user-domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.user-id",
                        "FieldDesc": "OpenStack Swift user ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.password",
                        "FieldDesc": "OpenStack Swift API key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.project-id",
                        "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.project-name",
                        "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.project-domain-id",
                        "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.project-domain-name",
                        "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.region-name",
                        "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.container-name",
                        "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.max-retries",
                        "FieldDesc": "Max retries on requests error.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.connect-timeout",
                        "FieldDesc": "Time after which a connection attempt is aborted.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.swift.request-timeout",
                        "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http",
                        "Required": false,
                        "Block": {
                          "Name": "http",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.swift.http.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for Swift.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cos",
                  "Required": false,
                  "Block": {
                    "Name": "cos_storage_config",
                    "Desc": "Configures backend rule storage for IBM Cloud Object Storage (COS).",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "forcepathstyle",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.force-path-style",
                        "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucketnames",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.buckets",
                        "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.endpoint",
                        "FieldDesc": "COS Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.region",
                        "FieldDesc": "COS region to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.access-key-id",
                        "FieldDesc": "COS HMAC Access Key ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.secret-access-key",
                        "FieldDesc": "COS HMAC Secret Access Key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_config",
                        "Required": false,
                        "Block": {
                          "Name": "http_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.cos.http.idle-conn-timeout",
                              "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.cos.http.response-header-timeout",
                              "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "Configures back off when cos get Object.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.cos.min-backoff",
                              "FieldDesc": "Minimum backoff time when cos get Object.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.cos.max-backoff",
                              "FieldDesc": "Maximum backoff time when cos get Object.",
                              "FieldType": "duration",
                              "FieldDefault": "3s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.storage.cos.max-retries",
                              "FieldDesc": "Maximum number of times to retry when cos get Object.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configures back off when cos get Object.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "api_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.api-key",
                        "FieldDesc": "IAM API key to access COS.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service_instance_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.service-instance-id",
                        "FieldDesc": "COS service instance id to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.auth-endpoint",
                        "FieldDesc": "IAM Auth Endpoint for authentication.",
                        "FieldType": "string",
                        "FieldDefault": "https://iam.cloud.ibm.com/identity/token",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "cr_token_file_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.cr-token-file-path",
                        "FieldDesc": "Compute resource token file path.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "trusted_profile_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.trusted-profile-name",
                        "FieldDesc": "Name of the trusted profile.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "trusted_profile_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.cos.trusted-profile-id",
                        "FieldDesc": "ID of the trusted profile.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for IBM Cloud Object Storage (COS).",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "local",
                  "Required": false,
                  "Block": {
                    "Name": "local",
                    "Desc": "Configures backend rule storage for a local file system directory.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "directory",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.storage.local.directory",
                        "FieldDesc": "Directory to scan for rules",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures backend rule storage for a local file system directory.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: Use -ruler-storage. CLI flags and their respective YAML config options instead.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "rule_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.rule-path",
            "FieldDesc": "File path to store temporary rule files.",
            "FieldType": "string",
            "FieldDefault": "/rules",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "alertmanager_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.alertmanager-url",
            "FieldDesc": "Comma-separated list of Alertmanager URLs to send notifications to. Each Alertmanager URL is treated as a separate group in the configuration. Multiple Alertmanagers in HA per group can be supported by using DNS resolution via '-ruler.alertmanager-discovery'.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_alertmanager_discovery",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.alertmanager-discovery",
            "FieldDesc": "Use DNS SRV records to discover Alertmanager hosts.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "alertmanager_refresh_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.alertmanager-refresh-interval",
            "FieldDesc": "How long to wait between refreshing DNS resolutions of Alertmanager hosts.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_alertmanager_v2",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.alertmanager-use-v2",
            "FieldDesc": "Use Alertmanager APIv2. APIv1 was deprecated in Alertmanager 0.16.0 and is removed as of 0.27.0.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "alert_relabel_configs",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "List of alert relabel configs.",
            "FieldType": "relabel_config...",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "notification_queue_capacity",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.notification-queue-capacity",
            "FieldDesc": "Capacity of the queue for notifications to be sent to the Alertmanager.",
            "FieldType": "int",
            "FieldDefault": "10000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "notification_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.notification-timeout",
            "FieldDesc": "HTTP timeout duration when sending notifications to the Alertmanager.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "alertmanager_client",
            "Required": false,
            "Block": {
              "Name": "alertmanager_client",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.alertmanager-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "basic_auth_username",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.alertmanager-client.basic-auth-username",
                  "FieldDesc": "HTTP Basic authentication username. It overrides the username set in the URL (if any).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "basic_auth_password",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.alertmanager-client.basic-auth-password",
                  "FieldDesc": "HTTP Basic authentication password. It overrides the password set in the URL (if any).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "type",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.alertmanager-client.type",
                  "FieldDesc": "HTTP Header authorization type (default: Bearer).",
                  "FieldType": "string",
                  "FieldDefault": "Bearer",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "credentials",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.alertmanager-client.credentials",
                  "FieldDesc": "HTTP Header authorization credentials.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "credentials_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.alertmanager-client.credentials-file",
                  "FieldDesc": "HTTP Header authorization credentials file.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "for_outage_tolerance",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.for-outage-tolerance",
            "FieldDesc": "Max time to tolerate outage for restoring \"for\" state of alert.",
            "FieldType": "duration",
            "FieldDefault": "1h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "for_grace_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.for-grace-period",
            "FieldDesc": "Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than the grace period.",
            "FieldType": "duration",
            "FieldDefault": "10m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "resend_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.resend-delay",
            "FieldDesc": "Minimum amount of time to wait before resending an alert to Alertmanager.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_sharding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.enable-sharding",
            "FieldDesc": "Distribute rule evaluation using ring backend.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sharding_strategy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.sharding-strategy",
            "FieldDesc": "The sharding strategy to use. Supported values are: default, shuffle-sharding.",
            "FieldType": "string",
            "FieldDefault": "default",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sharding_algo",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.sharding-algo",
            "FieldDesc": "The sharding algorithm to use for deciding how rules & groups are sharded. Supported values are: by-group, by-rule.",
            "FieldType": "string",
            "FieldDefault": "by-group",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "search_pending_for",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.search-pending-for",
            "FieldDesc": "Time to spend searching for a pending ruler when shutting down.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "ring",
            "Required": false,
            "Block": {
              "Name": "ring",
              "Desc": "Ring used by Loki ruler. The CLI flags prefix for this block configuration is 'ruler.ring'.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "rulers/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ruler.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.ring.heartbeat-period",
                  "FieldDesc": "Interval between heartbeats sent to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which ruler ring members are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read addresses from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.ring.num-tokens",
                  "FieldDesc": "The number of tokens the lifecycler will generate and put into the ring if it joined without transferring tokens from another lifecycler.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Ring used by Loki ruler. The CLI flags prefix for this block configuration is 'ruler.ring'.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "flush_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.flush-period",
            "FieldDesc": "Period with which to attempt to flush rule groups.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_api",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.enable-api",
            "FieldDesc": "Enable the ruler API.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enabled_tenants",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.enabled-tenants",
            "FieldDesc": "Comma separated list of tenants whose rules this ruler can evaluate. If specified, only these tenants will be handled by ruler, otherwise this ruler can process rules from all tenants. Subject to sharding.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "disabled_tenants",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.disabled-tenants",
            "FieldDesc": "Comma separated list of tenants whose rules this ruler cannot evaluate. If specified, a ruler that would normally pick the specified tenant(s) for processing will ignore them instead. Subject to sharding.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_stats_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.query-stats-enabled",
            "FieldDesc": "Report the wall time for ruler queries to complete as a per user metric and as an info level log message.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "disable_rule_group_label",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.disable-rule-group-label",
            "FieldDesc": "Disable the rule_group label on exported metrics.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "wal",
            "Required": false,
            "Block": {
              "Name": "wal",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "dir",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal.dir",
                  "FieldDesc": "The directory in which to write tenant WAL files. Each tenant will have its own directory one level below this directory.",
                  "FieldType": "string",
                  "FieldDefault": "ruler-wal",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "truncate_frequency",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal.truncate-frequency",
                  "FieldDesc": "Frequency with which to run the WAL truncation process.",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_age",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal.min-age",
                  "FieldDesc": "Minimum age that samples must exist in the WAL before being truncated.",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_age",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal.max-age",
                  "FieldDesc": "Maximum age that samples must exist in the WAL before being truncated.",
                  "FieldType": "duration",
                  "FieldDefault": "4h0m0s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "wal_cleaner",
            "Required": false,
            "Block": {
              "Name": "wal_cleaner",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "min_age",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal-cleaner.min-age",
                  "FieldDesc": "The minimum age of a WAL to consider for cleaning.",
                  "FieldType": "duration",
                  "FieldDefault": "12h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.wal-cleaner.period",
                  "FieldDesc": "How often to run the WAL cleaner. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "remote_write",
            "Required": false,
            "Block": {
              "Name": "remote_write",
              "Desc": "Remote-write configuration to send rule samples to a Prometheus remote-write endpoint.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "client",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Deprecated: Use 'clients' instead. Configure remote write client.",
                  "FieldType": "RemoteWriteConfig",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "clients",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Configure remote write clients. A map with remote client id as key. For details, see https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write Specifying a header with key 'X-Scope-OrgID' under the 'headers' section of RemoteWriteConfig is not permitted. If specified, it will be dropped during config parsing.",
                  "FieldType": "map of string to RemoteWriteConfig",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.remote-write.enabled",
                  "FieldDesc": "Enable remote-write functionality.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "config_refresh_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.remote-write.config-refresh-period",
                  "FieldDesc": "Minimum period to wait between refreshing remote-write reconfigurations. This should be greater than or equivalent to -limits.per-user-override-period.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "add_org_id_header",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.remote-write.add-org-id-header",
                  "FieldDesc": "Add an X-Scope-OrgID header in remote write requests with the tenant ID of a Loki tenant that the recording rules are part of.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Remote-write configuration to send rule samples to a Prometheus remote-write endpoint.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "evaluation",
            "Required": false,
            "Block": {
              "Name": "evaluation",
              "Desc": "Configuration for rule evaluation.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.evaluation.mode",
                  "FieldDesc": "The evaluation mode for the ruler. Can be either 'local' or 'remote'. If set to 'local', the ruler will evaluate rules locally. If set to 'remote', the ruler will evaluate rules remotely. If unset, the ruler will evaluate rules locally.",
                  "FieldType": "string",
                  "FieldDefault": "local",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_jitter",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler.evaluation.max-jitter",
                  "FieldDesc": "Upper bound of random duration to wait before rule evaluation to avoid contention during concurrent execution of rules. Jitter is calculated consistently for a given rule. Set 0 to disable (default).",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "query_frontend",
                  "Required": false,
                  "Block": {
                    "Name": "query_frontend",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "address",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.evaluation.query-frontend.address",
                        "FieldDesc": "GRPC listen address of the query-frontend(s). Must be a DNS address (prefixed with dns:///) to enable client side load balancing.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler.evaluation.query-frontend.tls-enabled",
                        "FieldDesc": "Set to true if query-frontend connection requires TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler.evaluation.query-frontend.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configuration for rule evaluation.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The ruler block configures the Loki ruler.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ruler_storage",
      "Required": false,
      "Block": {
        "Name": "ruler_storage",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "",
            "Required": false,
            "Block": {
              "Name": "thanos_object_store_config",
              "Desc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "s3",
                  "Required": false,
                  "Block": {
                    "Name": "s3",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.endpoint",
                        "FieldDesc": "The S3 bucket endpoint. It could be an AWS S3 endpoint listed at https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an S3-compatible service in hostname:port format.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.region",
                        "FieldDesc": "S3 region. If unset, the client will issue a S3 GetBucketLocation API call to autodetect it.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.bucket-name",
                        "FieldDesc": "S3 bucket name",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.secret-access-key",
                        "FieldDesc": "S3 secret access key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.access-key-id",
                        "FieldDesc": "S3 access key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "session_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.session-token",
                        "FieldDesc": "S3 session token",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.insecure",
                        "FieldDesc": "If enabled, use http:// for the S3 endpoint instead of https://. This could be useful in local dev/test environments while using an S3-compatible backend storage, like Minio.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "list_objects_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.list-objects-version",
                        "FieldDesc": "Use a specific version of the S3 list object API. Supported values are v1 or v2. Default is unset.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucket_lookup_type",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.bucket-lookup-type",
                        "FieldDesc": "Bucket lookup style type, used to access bucket in S3-compatible service. Default is auto. Supported values are: auto, path, virtual-hosted.",
                        "FieldType": "int",
                        "FieldDefault": "auto",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "dualstack_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.dualstack-enabled",
                        "FieldDesc": "When enabled, direct all AWS S3 requests to the dual-stack IPv4/IPv6 endpoint for the configured region.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_class",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.storage-class",
                        "FieldDesc": "The S3 storage class to use, not set by default. Details can be found at https://aws.amazon.com/s3/storage-classes/. Supported values are: STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS, GLACIER_IR, SNOW, EXPRESS_ONEZONE",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "native_aws_auth_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.native-aws-auth-enabled",
                        "FieldDesc": "If enabled, it will use the default authentication methods of the AWS SDK for go based on known environment variables and known AWS config files.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "part_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.part-size",
                        "FieldDesc": "The minimum file size in bytes used for multipart uploads. If 0, the value is optimally computed for each object.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "send_content_md5",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.send-content-md5",
                        "FieldDesc": "If enabled, a Content-MD5 header is sent with S3 Put Object requests. Consumes more resources to compute the MD5, but may improve compatibility with object storage services that do not support checksums.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "sts_endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.sts-endpoint",
                        "FieldDesc": "Accessing S3 resources using temporary, secure credentials provided by AWS Security Token Service.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.s3.max-retries",
                        "FieldDesc": "The maximum number of retries for S3 requests that are retryable. Default is 10, set this to 1 to disable retries.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "sse",
                        "Required": false,
                        "Block": {
                          "Name": "sse",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.sse.type",
                              "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.sse.kms-key-id",
                              "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_encryption_context",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.sse.kms-encryption-context",
                              "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http",
                        "Required": false,
                        "Block": {
                          "Name": "http",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.idle-conn-timeout",
                              "FieldDesc": "The time an idle connection will remain idle before closing.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.response-header-timeout",
                              "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                              "FieldType": "duration",
                              "FieldDefault": "2m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.insecure-skip-verify",
                              "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_handshake_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.tls-handshake-timeout",
                              "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expect_continue_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.expect-continue-timeout",
                              "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_connections",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.max-idle-connections",
                              "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_connections_per_host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.max-idle-connections-per-host",
                              "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connections_per_host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.max-connections-per-host",
                              "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.http.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "trace",
                        "Required": false,
                        "Block": {
                          "Name": "trace",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.s3.trace.enabled",
                              "FieldDesc": "When enabled, low-level S3 HTTP operation information is logged at the debug level.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "gcs",
                  "Required": false,
                  "Block": {
                    "Name": "gcs",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.gcs.bucket-name",
                        "FieldDesc": "GCS bucket name",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service_account",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.gcs.service-account",
                        "FieldDesc": "JSON either from a Google Developers Console client_credentials.json file, or a Google Developers service account key. Needs to be valid JSON, not a filesystem path. If empty, fallback to Google default logic:\n1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. For workload identity federation, refer to https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation on how to generate the JSON configuration file for on-prem/non-Google cloud platforms.\n2. A JSON file in a location known to the gcloud command-line tool: $HOME/.config/gcloud/application_default_credentials.json.\n3. On Google Compute Engine it fetches credentials from the metadata server.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.gcs.chunk-buffer-size",
                        "FieldDesc": "The maximum size of the buffer that GCS client for a single PUT request. 0 to disable buffering.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.gcs.max-retries",
                        "FieldDesc": "The maximum number of retries for idempotent operations. Overrides the default gcs storage client behavior if this value is greater than 0. Set this to 1 to disable retries.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "azure",
                  "Required": false,
                  "Block": {
                    "Name": "azure",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "account_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.account-name",
                        "FieldDesc": "Azure storage account name",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "account_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.account-key",
                        "FieldDesc": "Azure storage account key. If unset, Azure managed identities will be used for authentication instead.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connection_string",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.connection-string",
                        "FieldDesc": "If `connection-string` is set, the value of `endpoint-suffix` will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.container-name",
                        "FieldDesc": "Azure storage container name",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint_suffix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.endpoint-suffix",
                        "FieldDesc": "Azure storage endpoint suffix without schema. The account name will be prefixed to this value to create the FQDN. If set to empty string, default endpoint suffix is used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.max-retries",
                        "FieldDesc": "Number of retries for recoverable errors",
                        "FieldType": "int",
                        "FieldDefault": "20",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_assigned_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.user-assigned-id",
                        "FieldDesc": "User assigned managed identity. If empty, then System assigned identity is used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.azure.chunk-delimiter",
                        "FieldDesc": "Delimiter used to replace ':' in chunk IDs when storing chunks",
                        "FieldType": "string",
                        "FieldDefault": "-",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "swift",
                  "Required": false,
                  "Block": {
                    "Name": "swift",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "application_credential_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.application-credential-id",
                        "FieldDesc": "OpenStack Swift application credential id",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "application_credential_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.application-credential-name",
                        "FieldDesc": "OpenStack Swift application credential name",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "application_credential_secret",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.application-credential-secret",
                        "FieldDesc": "OpenStack Swift application credential secret",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.auth-version",
                        "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_url",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.auth-url",
                        "FieldDesc": "OpenStack Swift authentication URL",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.username",
                        "FieldDesc": "OpenStack Swift username.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.user-domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.user-domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.user-id",
                        "FieldDesc": "OpenStack Swift user ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.password",
                        "FieldDesc": "OpenStack Swift API key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.project-id",
                        "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.project-name",
                        "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.project-domain-id",
                        "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.project-domain-name",
                        "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.region-name",
                        "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.container-name",
                        "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.max-retries",
                        "FieldDesc": "Max retries on requests error.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.connect-timeout",
                        "FieldDesc": "Time after which a connection attempt is aborted.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.swift.request-timeout",
                        "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http",
                        "Required": false,
                        "Block": {
                          "Name": "http",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.idle-conn-timeout",
                              "FieldDesc": "The time an idle connection will remain idle before closing.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.response-header-timeout",
                              "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                              "FieldType": "duration",
                              "FieldDefault": "2m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.insecure-skip-verify",
                              "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_handshake_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.tls-handshake-timeout",
                              "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expect_continue_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.expect-continue-timeout",
                              "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_connections",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.max-idle-connections",
                              "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_connections_per_host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.max-idle-connections-per-host",
                              "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connections_per_host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.max-connections-per-host",
                              "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ruler-storage.swift.http.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "filesystem",
                  "Required": false,
                  "Block": {
                    "Name": "filesystem",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "dir",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.filesystem.dir",
                        "FieldDesc": "Local filesystem storage directory.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "alibaba",
                  "Required": false,
                  "Block": {
                    "Name": "alibaba",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.oss.endpoint",
                        "FieldDesc": "Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucket",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.oss.bucketname",
                        "FieldDesc": "Name of OSS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.oss.access-key-id",
                        "FieldDesc": "alibabacloud Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_secret",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.oss.access-key-secret",
                        "FieldDesc": "alibabacloud Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "bos",
                  "Required": false,
                  "Block": {
                    "Name": "bos",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.bos.bucket",
                        "FieldDesc": "Name of BOS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.bos.endpoint",
                        "FieldDesc": "BOS endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.bos.access-key",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ruler-storage.bos.secret-key",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "storage_prefix",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler-storage.storage-prefix",
                  "FieldDesc": "Prefix for all objects stored in the backend storage. For simplicity, it may only contain digits, English alphabet letters and dashes.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
            "Root": true,
            "Inline": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "backend",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler-storage.backend",
            "FieldDesc": "Backend storage to use. Supported backends are: local, s3, gcs, azure, swift, filesystem, alibabacloud, bos",
            "FieldType": "string",
            "FieldDefault": "filesystem",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "local",
            "Required": false,
            "Block": {
              "Name": "local",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ruler-storage.local.directory",
                  "FieldDesc": "Directory to scan for rules",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingester_client",
      "Required": false,
      "Block": {
        "Name": "ingester_client",
        "Desc": "The ingester_client block configures how the distributor will connect to ingesters. Only appropriate when running all components, the distributor, or the querier.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "pool_config",
            "Required": false,
            "Block": {
              "Name": "pool_config",
              "Desc": "Configures how connections are pooled.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "client_cleanup_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.client-cleanup-period",
                  "FieldDesc": "How frequently to clean up clients for ingesters that have gone away.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "health_check_ingesters",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "distributor.health-check-ingesters",
                  "FieldDesc": "Run a health check on each ingester client during periodic cleanup.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "remote_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.healthcheck-timeout",
                  "FieldDesc": "How quickly a dead client will be removed after it has been detected to disappear. Set this to a value to allow time for a secondary health check to recover the missing client.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how connections are pooled.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "remote_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.client.timeout",
            "FieldDesc": "The remote request timeout on the client side.",
            "FieldType": "duration",
            "FieldDefault": "5s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures how the gRPC connection to ingesters work as a client.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how the gRPC connection to ingesters work as a client.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The ingester_client block configures how the distributor will connect to ingesters. Only appropriate when running all components, the distributor, or the querier.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingester",
      "Required": false,
      "Block": {
        "Name": "ingester",
        "Desc": "The ingester block configures the ingester and how the ingester will register itself to a key value store.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "lifecycler",
            "Required": false,
            "Block": {
              "Name": "lifecycler",
              "Desc": "Configures how the lifecycle of the ingester will operate and where it will register for discovery.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "ring",
                  "Required": false,
                  "Block": {
                    "Name": "ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ring.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "consul",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ring.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "block",
                                    "Name": "",
                                    "Required": false,
                                    "Block": {
                                      "Name": "tls_config",
                                      "Desc": "The TLS configuration.",
                                      "Entries": [
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cert_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-cert-path",
                                          "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_key_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-key-path",
                                          "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_ca_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-ca-path",
                                          "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_server_name",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-server-name",
                                          "FieldDesc": "Override the expected name on the server certificate.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_insecure_skip_verify",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-insecure-skip-verify",
                                          "FieldDesc": "Skip validating server certificate.",
                                          "FieldType": "boolean",
                                          "FieldDefault": "false",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cipher_suites",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-cipher-suites",
                                          "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_min_version",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "etcd.tls-min-version",
                                          "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        }
                                      ],
                                      "FlagsPrefix": "",
                                      "FlagsPrefixes": null
                                    },
                                    "BlockDesc": "The TLS configuration.",
                                    "Root": true,
                                    "Inline": true,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "heartbeat_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ring.heartbeat-timeout",
                        "FieldDesc": "The heartbeat timeout after which ingesters are skipped for reads/writes. 0 = never (timeout disabled).",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "replication_factor",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "distributor.replication-factor",
                        "FieldDesc": "The number of ingesters to write to and read from.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "zone_awareness_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "distributor.zone-awareness-enabled",
                        "FieldDesc": "True to enable the zone-awareness and replicate ingested samples across different availability zones.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_zones",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "distributor.excluded-zones",
                        "FieldDesc": "Comma-separated list of zones to exclude from the ring. Instances in excluded zones will be filtered out from the ring.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.num-tokens",
                  "FieldDesc": "Number of tokens for each ingester.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to consul. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.heartbeat-timeout",
                  "FieldDesc": "Heartbeat timeout after which instance is assumed to be unhealthy. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "observe_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.observe-period",
                  "FieldDesc": "Observe tokens after generating to resolve collisions. Useful when using gossiping ring.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "join_after",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.join-after",
                  "FieldDesc": "Period to wait for a claim from another member; will join automatically after this.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_ready_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.min-ready-duration",
                  "FieldDesc": "Minimum duration to wait after the internal readiness checks have passed but before succeeding the readiness endpoint. This is used to slowdown deployment controllers (eg. Kubernetes) after an instance is ready and before they proceed with a rolling update, to give the rest of the cluster instances enough time to receive ring updates.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.lifecycler.interface",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inet6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.enable-inet6",
                  "FieldDesc": "Enable IPv6 support. Required to make use of IP addresses from IPv6 interfaces.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "final_sleep",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.final-sleep",
                  "FieldDesc": "Duration to sleep for before exiting, to ensure metrics are scraped.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.availability-zone",
                  "FieldDesc": "The availability zone where this instance is running.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown. It can be useful to disable for rolling restarts with consistent naming in conjunction with -distributor.extend-writes=false.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "readiness_check_ring_health",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.readiness-check-ring-health",
                  "FieldDesc": "When enabled the readiness probe succeeds only after all instances are ACTIVE and healthy in the ring, otherwise only the instance itself is checked. This option should be disabled if in your cluster multiple instances can be rolled out simultaneously, otherwise rolling updates may be slowed down.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.lifecycler.addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.lifecycler.port",
                  "FieldDesc": "port to advertise in consul (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.lifecycler.ID",
                  "FieldDesc": "ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how the lifecycle of the ingester will operate and where it will register for discovery.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "concurrent_flushes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.concurrent-flushes",
            "FieldDesc": "How many flushes can happen concurrently from each stream.",
            "FieldType": "int",
            "FieldDefault": "32",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "flush_check_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.flush-check-period",
            "FieldDesc": "How often should the ingester see if there are any blocks to flush. The first flush check is delayed by a random time up to 0.8x the flush check period. Additionally, there is +/- 1% jitter added to the interval.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "flush_op_backoff",
            "Required": false,
            "Block": {
              "Name": "flush_op_backoff",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "min_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.flush-op-backoff-min-period",
                  "FieldDesc": "Minimum backoff period when a flush fails. Each concurrent flush has its own backoff, see `ingester.concurrent-flushes`.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.flush-op-backoff-max-period",
                  "FieldDesc": "Maximum backoff period when a flush fails. Each concurrent flush has its own backoff, see `ingester.concurrent-flushes`.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.flush-op-backoff-retries",
                  "FieldDesc": "Maximum retries for failed flushes.",
                  "FieldType": "int",
                  "FieldDefault": "10",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "flush_op_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.flush-op-timeout",
            "FieldDesc": "The timeout for an individual flush. Will be retried up to `flush-op-backoff-retries` times.",
            "FieldType": "duration",
            "FieldDefault": "10m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_retain_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.chunks-retain-period",
            "FieldDesc": "How long chunks should be retained in-memory after they've been flushed.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_idle_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.chunks-idle-period",
            "FieldDesc": "How long chunks should sit in-memory with no updates before being flushed if they don't hit the max block size. This means that half-empty chunks will still be flushed after a certain period as long as they receive no further activity.",
            "FieldType": "duration",
            "FieldDefault": "30m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_block_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.chunks-block-size",
            "FieldDesc": "The targeted _uncompressed_ size in bytes of a chunk block When this threshold is exceeded the head block will be cut and compressed inside the chunk.",
            "FieldType": "int",
            "FieldDefault": "262144",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_target_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.chunk-target-size",
            "FieldDesc": "A target _compressed_ size in bytes for chunks. This is a desired size not an exact size, chunks may be slightly bigger or significantly smaller if they get flushed for other reasons (e.g. chunk_idle_period). A value of 0 creates chunks with a fixed 10 blocks, a non zero value will create chunks with a variable number of blocks to meet the target size.",
            "FieldType": "int",
            "FieldDefault": "1572864",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_encoding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.chunk-encoding",
            "FieldDesc": "The algorithm to use for compressing chunk. (none, gzip, lz4-64k, snappy, lz4-256k, lz4-1M, lz4, flate, zstd)",
            "FieldType": "string",
            "FieldDefault": "gzip",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_chunk_age",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.max-chunk-age",
            "FieldDesc": "The maximum duration of a timeseries chunk in memory. If a timeseries runs for longer than this, the current chunk will be flushed to the store and a new chunk created.",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "autoforget_unhealthy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.autoforget-unhealthy",
            "FieldDesc": "Forget about ingesters having heartbeat timestamps older than `ring.kvstore.heartbeat_timeout`. This is equivalent to clicking on the `/ring` `forget` button in the UI: the ingester is removed from the ring. This is a useful setting when you are sure that an unhealthy node won't return. An example is when not using stateful sets or the equivalent. Use `memberlist.rejoin_interval` > 0 to handle network partition cases when using a memberlist.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sync_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.sync-period",
            "FieldDesc": "Parameters used to synchronize ingesters to cut chunks at the same moment. Sync period is used to roll over incoming entry to a new chunk. If chunk's utilization isn't high enough (eg. less than 50% when sync_min_utilization is set to 0.5), then this chunk rollover doesn't happen.",
            "FieldType": "duration",
            "FieldDefault": "1h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sync_min_utilization",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.sync-min-utilization",
            "FieldDesc": "Minimum utilization of chunk when doing synchronization.",
            "FieldType": "float",
            "FieldDefault": "0.1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_returned_stream_errors",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.max-ignored-stream-errors",
            "FieldDesc": "The maximum number of errors a stream will report to the user when a push fails. 0 to make unlimited.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_store_max_look_back_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.query-store-max-look-back-period",
            "FieldDesc": "How far back should an ingester be allowed to query the store for data, for use only with boltdb-shipper/tsdb index and filesystem object store. -1 for infinite.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "wal",
            "Required": false,
            "Block": {
              "Name": "wal",
              "Desc": "The ingester WAL (Write Ahead Log) records incoming logs and stores them on the local file systems in order to guarantee persistence of acknowledged data in the event of a process crash.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.wal-enabled",
                  "FieldDesc": "Enable writing of ingested data into WAL.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "dir",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.wal-dir",
                  "FieldDesc": "Directory where the WAL data is stored and/or recovered from.",
                  "FieldType": "string",
                  "FieldDefault": "wal",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "checkpoint_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.checkpoint-duration",
                  "FieldDesc": "Interval at which checkpoints should be created.",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "flush_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.flush-on-shutdown",
                  "FieldDesc": "When WAL is enabled, should chunks be flushed to long-term storage on shutdown.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replay_memory_ceiling",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.wal-replay-memory-ceiling",
                  "FieldDesc": "Maximum memory size the WAL may use during replay. After hitting this, it will flush data to storage before continuing. A unit suffix (KB, MB, GB) may be applied.",
                  "FieldType": "int",
                  "FieldDefault": "4GB",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The ingester WAL (Write Ahead Log) records incoming logs and stores them on the local file systems in order to guarantee persistence of acknowledged data in the event of a process crash.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "index_shards",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.index-shards",
            "FieldDesc": "Shard factor used in the ingesters for the in process reverse index. This MUST be evenly divisible by ALL schema shard factors or Loki will not start.",
            "FieldType": "int",
            "FieldDefault": "32",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_dropped_streams",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.tailer.max-dropped-streams",
            "FieldDesc": "Maximum number of dropped streams to keep in memory during tailing.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "shutdown_marker_path",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.shutdown-marker-path",
            "FieldDesc": "Path where the shutdown marker file is stored. If not set and common.path_prefix is set then common.path_prefix will be used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "owned_streams_check_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.owned-streams-check-interval",
            "FieldDesc": "Interval at which the ingester ownedStreamService checks for changes in the ring to recalculate owned streams.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "kafka_ingestion",
            "Required": false,
            "Block": {
              "Name": "kafka_ingestion",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingester.kafka-ingestion-enabled",
                  "FieldDesc": "Whether the kafka ingester is enabled.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "partition_ring",
                  "Required": false,
                  "Block": {
                    "Name": "partition_ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "The key-value store used to share the hash ring across multiple instances. This option needs be set on ingesters, distributors, queriers, and rulers when running in microservices mode.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingester.partition-ring.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "memberlist",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingester.partition-ring.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "block",
                                    "Name": "",
                                    "Required": false,
                                    "Block": {
                                      "Name": "tls_config",
                                      "Desc": "The TLS configuration.",
                                      "Entries": [
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cert_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-cert-path",
                                          "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_key_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-key-path",
                                          "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_ca_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-ca-path",
                                          "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_server_name",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-server-name",
                                          "FieldDesc": "Override the expected name on the server certificate.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_insecure_skip_verify",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-insecure-skip-verify",
                                          "FieldDesc": "Skip validating server certificate.",
                                          "FieldType": "boolean",
                                          "FieldDefault": "false",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cipher_suites",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-cipher-suites",
                                          "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_min_version",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingester.partition-ring.etcd.tls-min-version",
                                          "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        }
                                      ],
                                      "FlagsPrefix": "",
                                      "FlagsPrefixes": null
                                    },
                                    "BlockDesc": "The TLS configuration.",
                                    "Root": true,
                                    "Inline": true,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingester.partition-ring.multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The key-value store used to share the hash ring across multiple instances. This option needs be set on ingesters, distributors, queriers, and rulers when running in microservices mode.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_partition_owners_count",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.partition-ring.min-partition-owners-count",
                        "FieldDesc": "Minimum number of owners to wait before a PENDING partition gets switched to ACTIVE.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_partition_owners_duration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.partition-ring.min-partition-owners-duration",
                        "FieldDesc": "How long the minimum number of owners are enforced before a PENDING partition gets switched to ACTIVE.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "delete_inactive_partition_after",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingester.partition-ring.delete-inactive-partition-after",
                        "FieldDesc": "How long to wait before an INACTIVE partition is eligible for deletion. The partition is deleted only if it has been in INACTIVE state for at least the configured duration and it has no owners registered. A value of 0 disables partitions deletion.",
                        "FieldType": "duration",
                        "FieldDefault": "13h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The ingester block configures the ingester and how the ingester will register itself to a key value store.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "block_builder",
      "Required": false,
      "Block": {
        "Name": "block_builder",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "concurrent_flushes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.concurrent-flushes",
            "FieldDesc": "How many flushes can happen concurrently",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "concurrent_writers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.concurrent-writers",
            "FieldDesc": "How many workers to process writes, defaults to number of available cpus",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_block_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.chunks-block-size",
            "FieldDesc": "The targeted _uncompressed_ size in bytes of a chunk block When this threshold is exceeded the head block will be cut and compressed inside the chunk.",
            "FieldType": "int",
            "FieldDefault": "256KB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_target_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.chunk-target-size",
            "FieldDesc": "A target _compressed_ size in bytes for chunks. This is a desired size not an exact size, chunks may be slightly bigger or significantly smaller if they get flushed for other reasons (e.g. chunk_idle_period). A value of 0 creates chunks with a fixed 10 blocks, a non zero value will create chunks with a variable number of blocks to meet the target size.",
            "FieldType": "int",
            "FieldDefault": "1536KB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "chunk_encoding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.chunk-encoding",
            "FieldDesc": "The algorithm to use for compressing chunk. (none, gzip, lz4-64k, snappy, lz4-256k, lz4-1M, lz4, flate, zstd)",
            "FieldType": "string",
            "FieldDefault": "snappy",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_chunk_age",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.max-chunk-age",
            "FieldDesc": "The maximum duration of a timeseries chunk in memory. If a timeseries runs for longer than this, the current chunk will be flushed to the store and a new chunk created.",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "backoff_config",
            "Required": false,
            "Block": {
              "Name": "backoff_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "min_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.backoff..backoff-min-period",
                  "FieldDesc": "Minimum delay when backing off.",
                  "FieldType": "duration",
                  "FieldDefault": "100ms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.backoff..backoff-max-period",
                  "FieldDesc": "Maximum delay when backing off.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.backoff..backoff-retries",
                  "FieldDesc": "Number of times to backoff and retry before failing.",
                  "FieldType": "int",
                  "FieldDefault": "10",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "worker_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.worker-parallelism",
            "FieldDesc": "The number of workers to run in parallel to process jobs.",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sync_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.sync-interval",
            "FieldDesc": "The interval at which to sync job status with the scheduler.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "poll_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.poll-interval",
            "FieldDesc": "The interval at which to poll for new jobs.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "scheduler_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "blockbuilder.scheduler-address",
            "FieldDesc": "Address of the scheduler in the format described here: https://github.com/grpc/grpc/blob/master/doc/naming.md",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "scheduler_grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client..backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client..backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client..backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "blockbuilder.scheduler-grpc-client..connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "blockbuilder.scheduler-grpc-client..cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "block_scheduler",
      "Required": false,
      "Block": {
        "Name": "block_scheduler",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "block-scheduler.interval",
            "FieldDesc": "How often the scheduler should plan jobs.",
            "FieldType": "duration",
            "FieldDefault": "15m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "lookback_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "block-scheduler.lookback-period",
            "FieldDesc": "Lookback period used by the scheduler to plan jobs when the consumer group has no commits. 0 consumes from the start of the partition.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "strategy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "block-scheduler.strategy",
            "FieldDesc": "Strategy used by the planner to plan jobs. One of record-count",
            "FieldType": "string",
            "FieldDefault": "record-count",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "target_record_count",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "block-scheduler.target-record-count",
            "FieldDesc": "Target record count used by the planner to plan jobs. Only used when strategy is record-count",
            "FieldType": "int",
            "FieldDefault": "1000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "job_queue",
            "Required": false,
            "Block": {
              "Name": "job_queue",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "lease_expiry_check_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "jobqueue.lease-expiry-check-interval",
                  "FieldDesc": "Interval to check for expired job leases",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "lease_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "jobqueue.lease-duration",
                  "FieldDesc": "Duration after which a job lease is considered expired if the scheduler receives no updates from builders about the job. Expired jobs are re-enqueued",
                  "FieldType": "duration",
                  "FieldDefault": "10m0s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "pattern_ingester",
      "Required": false,
      "Block": {
        "Name": "pattern_ingester",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.enabled",
            "FieldDesc": "Whether the pattern ingester is enabled.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "lifecycler",
            "Required": false,
            "Block": {
              "Name": "lifecycler",
              "Desc": "Configures how the lifecycle of the pattern ingester will operate and where it will register for discovery.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "ring",
                  "Required": false,
                  "Block": {
                    "Name": "ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "consul",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "block",
                                    "Name": "",
                                    "Required": false,
                                    "Block": {
                                      "Name": "tls_config",
                                      "Desc": "The TLS configuration.",
                                      "Entries": [
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cert_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-cert-path",
                                          "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_key_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-key-path",
                                          "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_ca_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-ca-path",
                                          "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_server_name",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-server-name",
                                          "FieldDesc": "Override the expected name on the server certificate.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_insecure_skip_verify",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-insecure-skip-verify",
                                          "FieldDesc": "Skip validating server certificate.",
                                          "FieldType": "boolean",
                                          "FieldDefault": "false",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cipher_suites",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-cipher-suites",
                                          "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_min_version",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "pattern-ingester.etcd.tls-min-version",
                                          "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        }
                                      ],
                                      "FlagsPrefix": "",
                                      "FlagsPrefixes": null
                                    },
                                    "BlockDesc": "The TLS configuration.",
                                    "Root": true,
                                    "Inline": true,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "pattern-ingester.multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "heartbeat_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.ring.heartbeat-timeout",
                        "FieldDesc": "The heartbeat timeout after which ingesters are skipped for reads/writes. 0 = never (timeout disabled).",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "replication_factor",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.distributor.replication-factor",
                        "FieldDesc": "The number of ingesters to write to and read from.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "zone_awareness_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.distributor.zone-awareness-enabled",
                        "FieldDesc": "True to enable the zone-awareness and replicate ingested samples across different availability zones.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_zones",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.distributor.excluded-zones",
                        "FieldDesc": "Comma-separated list of zones to exclude from the ring. Instances in excluded zones will be filtered out from the ring.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.num-tokens",
                  "FieldDesc": "Number of tokens for each ingester.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to consul. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.heartbeat-timeout",
                  "FieldDesc": "Heartbeat timeout after which instance is assumed to be unhealthy. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "observe_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.observe-period",
                  "FieldDesc": "Observe tokens after generating to resolve collisions. Useful when using gossiping ring.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "join_after",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.join-after",
                  "FieldDesc": "Period to wait for a claim from another member; will join automatically after this.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_ready_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.min-ready-duration",
                  "FieldDesc": "Minimum duration to wait after the internal readiness checks have passed but before succeeding the readiness endpoint. This is used to slowdown deployment controllers (eg. Kubernetes) after an instance is ready and before they proceed with a rolling update, to give the rest of the cluster instances enough time to receive ring updates.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.lifecycler.interface",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inet6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.enable-inet6",
                  "FieldDesc": "Enable IPv6 support. Required to make use of IP addresses from IPv6 interfaces.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "final_sleep",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.final-sleep",
                  "FieldDesc": "Duration to sleep for before exiting, to ensure metrics are scraped.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.availability-zone",
                  "FieldDesc": "The availability zone where this instance is running.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown. It can be useful to disable for rolling restarts with consistent naming in conjunction with -distributor.extend-writes=false.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "readiness_check_ring_health",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.readiness-check-ring-health",
                  "FieldDesc": "When enabled the readiness probe succeeds only after all instances are ACTIVE and healthy in the ring, otherwise only the instance itself is checked. This option should be disabled if in your cluster multiple instances can be rolled out simultaneously, otherwise rolling updates may be slowed down.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.lifecycler.addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.lifecycler.port",
                  "FieldDesc": "port to advertise in consul (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.lifecycler.ID",
                  "FieldDesc": "ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how the lifecycle of the pattern ingester will operate and where it will register for discovery.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "client_config",
            "Required": false,
            "Block": {
              "Name": "client_config",
              "Desc": "Configures how the pattern ingester will connect to the ingesters.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "pool_config",
                  "Required": false,
                  "Block": {
                    "Name": "pool_config",
                    "Desc": "Configures how connections are pooled.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "client_cleanup_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client-cleanup-period",
                        "FieldDesc": "How frequently to clean up clients for ingesters that have gone away.",
                        "FieldType": "duration",
                        "FieldDefault": "15s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "health_check_ingesters",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.health-check-ingesters",
                        "FieldDesc": "Run a health check on each ingester client during periodic cleanup.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "remote_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.remote-timeout",
                        "FieldDesc": "Timeout for the health check.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures how connections are pooled.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "remote_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.client.timeout",
                  "FieldDesc": "The remote request timeout on the client side.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "grpc_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "grpc_client",
                    "Desc": "Configures how the gRPC connection to ingesters work as a client.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_recv_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.grpc-max-recv-msg-size",
                        "FieldDesc": "gRPC client max receive message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_send_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.grpc-max-send-msg-size",
                        "FieldDesc": "gRPC client max send message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "grpc_compression",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.grpc-compression",
                        "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.grpc-client-rate-limit",
                        "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                        "FieldType": "float",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit_burst",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.grpc-client-rate-limit-burst",
                        "FieldDesc": "Rate limit burst for gRPC client.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "backoff_on_ratelimits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.backoff-on-ratelimits",
                        "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.backoff-min-period",
                              "FieldDesc": "Minimum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.backoff-max-period",
                              "FieldDesc": "Maximum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.backoff-retries",
                              "FieldDesc": "Number of times to backoff and retry before failing.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_stream_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.initial-stream-window-size",
                        "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_connection_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.initial-connection-window-size",
                        "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.tls-enabled",
                        "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.connect-timeout",
                        "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_base_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.connect-backoff-base-delay",
                        "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_max_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.client.connect-backoff-max-delay",
                        "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "cluster_validation",
                        "Required": false,
                        "Block": {
                          "Name": "cluster_validation",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "label",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "pattern-ingester.client.cluster-validation.label",
                              "FieldDesc": "Optionally define the cluster validation label.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures how the gRPC connection to ingesters work as a client.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how the pattern ingester will connect to the ingesters.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "concurrent_flushes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.concurrent-flushes",
            "FieldDesc": "How many flushes can happen concurrently from each stream.",
            "FieldType": "int",
            "FieldDefault": "32",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "flush_check_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.flush-check-period",
            "FieldDesc": "How often should the ingester see if there are any blocks to flush. The first flush check is delayed by a random time up to 0.8x the flush check period. Additionally, there is +/- 1% jitter added to the interval.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_clusters",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.max-clusters",
            "FieldDesc": "The maximum number of detected pattern clusters that can be created by streams.",
            "FieldType": "int",
            "FieldDefault": "300",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_eviction_ratio",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.max-eviction-ratio",
            "FieldDesc": "The maximum eviction ratio of patterns per stream. Once that ratio is reached, the stream will throttled pattern detection.",
            "FieldType": "float",
            "FieldDefault": "0.25",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "metric_aggregation",
            "Required": false,
            "Block": {
              "Name": "metric_aggregation",
              "Desc": "Configures the metric aggregation and storage behavior of the pattern ingester.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "sample_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.metric-aggregation.downsample-period",
                  "FieldDesc": "How often to sample metrics and patterns from raw push observations.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "loki_address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.metric-aggregation.loki-address",
                  "FieldDesc": "The address of the Loki instance to push aggregated metrics to.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.metric-aggregation.timeout",
                  "FieldDesc": "The timeout for writing to Loki.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "push_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.metric-aggregation.push-period",
                  "FieldDesc": "How long to wait in between pushes to Loki.",
                  "FieldType": "duration",
                  "FieldDefault": "30s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "http_client_config",
                    "Desc": "The HTTP client configuration for pushing metrics to Loki.",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "basic_auth",
                        "Required": false,
                        "Block": {
                          "Name": "basic_auth",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "authorization",
                        "Required": false,
                        "Block": {
                          "Name": "authorization",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "oauth2",
                        "Required": false,
                        "Block": {
                          "Name": "oauth2",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "client_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "scopes",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "list of strings",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "token_url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint_params",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "tls_config",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "ca",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "ca_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "ca_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "boolean",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "proxy_url",
                              "Required": false,
                              "Block": {
                                "Name": "proxy_url",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "url",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "url",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "no_proxy",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "proxy_from_environment",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "boolean",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "proxy_connect_header",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to list of strings",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bearer_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bearer_token_file",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "tls_config",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "ca",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "boolean",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "follow_redirects",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_http2",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "proxy_url",
                        "Required": false,
                        "Block": {
                          "Name": "proxy_url",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "url",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "no_proxy",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "proxy_from_environment",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "proxy_connect_header",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to list of strings",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_headers",
                        "Required": false,
                        "Block": {
                          "Name": "http_headers",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to Header",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The HTTP client configuration for pushing metrics to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "use_tls",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.metric-aggregation.tls",
                  "FieldDesc": "Whether to use TLS for pushing metrics to Loki.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "basic_auth",
                  "Required": false,
                  "Block": {
                    "Name": "basic_auth",
                    "Desc": "The basic auth configuration for pushing metrics to Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.metric-aggregation..basic-auth.username",
                        "FieldDesc": "Basic auth username for sending aggregations back to Loki.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.metric-aggregation..basic-auth.password",
                        "FieldDesc": "Basic auth password for sending aggregations back to Loki.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The basic auth configuration for pushing metrics to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "The backoff configuration for pushing metrics to Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.metric-aggregation...backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.metric-aggregation...backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.metric-aggregation...backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The backoff configuration for pushing metrics to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the metric aggregation and storage behavior of the pattern ingester.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "pattern_persistence",
            "Required": false,
            "Block": {
              "Name": "pattern_persistence",
              "Desc": "Configures how detected patterns are pushed back to Loki for persistence.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "loki_address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.pattern-persistence.loki-address",
                  "FieldDesc": "The address of the Loki instance to push patterns to.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.pattern-persistence.timeout",
                  "FieldDesc": "The timeout for writing patterns to Loki.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "push_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.pattern-persistence.push-period",
                  "FieldDesc": "How long to wait between pattern pushes to Loki.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "http_client_config",
                    "Desc": "The HTTP client configuration for pushing patterns to Loki.",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "basic_auth",
                        "Required": false,
                        "Block": {
                          "Name": "basic_auth",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "authorization",
                        "Required": false,
                        "Block": {
                          "Name": "authorization",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "credentials_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "oauth2",
                        "Required": false,
                        "Block": {
                          "Name": "oauth2",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "client_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "client_secret_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "scopes",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "list of strings",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "token_url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint_params",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "tls_config",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "ca",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "ca_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key_file",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "ca_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cert_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "key_ref",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "boolean",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "proxy_url",
                              "Required": false,
                              "Block": {
                                "Name": "proxy_url",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "url",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "url",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "no_proxy",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "proxy_from_environment",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "boolean",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "proxy_connect_header",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to list of strings",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bearer_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bearer_token_file",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "tls_config",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "ca",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cert_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "key_ref",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "boolean",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "follow_redirects",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_http2",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "proxy_url",
                        "Required": false,
                        "Block": {
                          "Name": "proxy_url",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "url",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "no_proxy",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "proxy_from_environment",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "boolean",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "proxy_connect_header",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to list of strings",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_headers",
                        "Required": false,
                        "Block": {
                          "Name": "http_headers",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "map of string to Header",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The HTTP client configuration for pushing patterns to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "use_tls",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.pattern-persistence.tls",
                  "FieldDesc": "Whether to use TLS for pushing patterns to Loki.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "basic_auth",
                  "Required": false,
                  "Block": {
                    "Name": "basic_auth",
                    "Desc": "The basic auth configuration for pushing patterns to Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.pattern-persistence..basic-auth.username",
                        "FieldDesc": "Basic auth username for sending patterns back to Loki.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.pattern-persistence..basic-auth.password",
                        "FieldDesc": "Basic auth password for sending patterns back to Loki.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The basic auth configuration for pushing patterns to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "The backoff configuration for pushing patterns to Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.pattern-persistence...backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.pattern-persistence...backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "pattern-ingester.pattern-persistence...backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The backoff configuration for pushing patterns to Loki.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "batch_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.pattern-persistence.batch-size",
                  "FieldDesc": "The maximum number of patterns to accumulate before pushing.",
                  "FieldType": "int",
                  "FieldDefault": "1000",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures how detected patterns are pushed back to Loki for persistence.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "tee_config",
            "Required": false,
            "Block": {
              "Name": "tee_config",
              "Desc": "Configures the pattern tee which forwards requests to the pattern ingester.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "batch_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tee.batch-size",
                  "FieldDesc": "The size of the batch of raw logs to send for template mining",
                  "FieldType": "int",
                  "FieldDefault": "5000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "batch_flush_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tee.batch-flush-interval",
                  "FieldDesc": "The max time between batches of raw logs to send for template mining",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "flush_queue_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tee.flush-queue-size",
                  "FieldDesc": "The number of log flushes to queue before dropping",
                  "FieldType": "int",
                  "FieldDefault": "1000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "flush_worker_count",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tee.flush-worker-count",
                  "FieldDesc": "the number of concurrent workers sending logs to the template service",
                  "FieldType": "int",
                  "FieldDefault": "100",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "stop_flush_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "pattern-ingester.tee.stop-flush-timeout",
                  "FieldDesc": "The max time we will try to flush any remaining logs to be mined when the service is stopped",
                  "FieldType": "duration",
                  "FieldDefault": "30s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the pattern tee which forwards requests to the pattern ingester.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "connection_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.connection-timeout",
            "FieldDesc": "Timeout for connections between the Loki and the pattern ingester.",
            "FieldType": "duration",
            "FieldDefault": "2s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_allowed_line_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.max-allowed-line-length",
            "FieldDesc": "The maximum length of log lines that can be used for pattern detection.",
            "FieldType": "int",
            "FieldDefault": "3000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retain_for",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "pattern-ingester.retain-for",
            "FieldDesc": "How long to retain patterns in the pattern ingester after they are pushed.",
            "FieldType": "duration",
            "FieldDefault": "3h0m0s",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "index_gateway",
      "Required": false,
      "Block": {
        "Name": "index_gateway",
        "Desc": "The index_gateway block configures the Loki index gateway server, responsible for serving index queries without the need to constantly interact with the object store.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "mode",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "index-gateway.mode",
            "FieldDesc": "Defines in which mode the index gateway server will operate (default to 'simple'). It supports two modes:\n- 'simple': an index gateway server instance is responsible for handling, storing and returning requests for all indices for all tenants.\n- 'ring': an index gateway server instance is responsible for a subset of tenants instead of all tenants.",
            "FieldType": "string",
            "FieldDefault": "simple",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "ring",
            "Required": false,
            "Block": {
              "Name": "ring",
              "Desc": "Defines the ring to be used by the index gateway servers and clients in case the servers are configured to run in 'ring' mode. In case this isn't configured, this block supports inheriting configuration from the common ring section.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "index-gateway.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "index-gateway.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "index-gateway.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "index-gateway.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which compactors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "zone_awareness_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.zone-awareness-enabled",
                  "FieldDesc": "True to enable zone-awareness and replicate blocks across different availability zones.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.num-tokens",
                  "FieldDesc": "IGNORED: Num tokens is fixed to 128",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "replication-factor",
                  "FieldDesc": "Deprecated: How many index gateway instances are assigned to each tenant. Use -index-gateway.shard-size instead. The shard size is also a per-tenant setting.",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-availability-zone",
                  "FieldDesc": "The availability zone where this instance is running. Required if zone-awareness is enabled.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "index-gateway.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Defines the ring to be used by the index gateway servers and clients in case the servers are configured to run in 'ring' mode. In case this isn't configured, this block supports inheriting configuration from the common ring section.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The index_gateway block configures the Loki index gateway server, responsible for serving index queries without the need to constantly interact with the object store.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "bloom_build",
      "Required": false,
      "Block": {
        "Name": "bloom_build",
        "Desc": "Experimental: The bloom_build block configures the Loki bloom planner and builder servers, responsible for building bloom filters.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.enabled",
            "FieldDesc": "Flag to enable or disable the usage of the bloom-planner and bloom-builder components.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "planner",
            "Required": false,
            "Block": {
              "Name": "planner",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "planning_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom-build.planner.interval",
                  "FieldDesc": "Interval at which to re-run the bloom creation planning.",
                  "FieldType": "duration",
                  "FieldDefault": "8h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_table_offset",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom-build.planner.min-table-offset",
                  "FieldDesc": "Newest day-table offset (from today, inclusive) to build blooms for. 0 start building from today, 1 from yesterday and so on. Increase to lower cost by not re-writing data to object storage too frequently since recent data changes more often at the cost of not having blooms available as quickly.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_table_offset",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom-build.planner.max-table-offset",
                  "FieldDesc": "Oldest day-table offset (from today, inclusive) to build blooms for. 1 till yesterday, 2 till day before yesterday and so on. This can be used to lower cost by not trying to build blooms for older data which doesn't change. This can be optimized by aligning it with the maximum `reject_old_samples_max_age` setting of any tenant.",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "retention",
                  "Required": false,
                  "Block": {
                    "Name": "retention",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.planner.retention.enabled",
                        "FieldDesc": "Enable bloom retention.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "queue",
                  "Required": false,
                  "Block": {
                    "Name": "queue",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_queued_tasks_per_tenant",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.planner.queue.max-tasks-per-tenant",
                        "FieldDesc": "Maximum number of tasks to queue per tenant.",
                        "FieldType": "int",
                        "FieldDefault": "30000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "store_tasks_on_disk",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.planner.queue.store-tasks-on-disk",
                        "FieldDesc": "Whether to store tasks on disk.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tasks_disk_directory",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.planner.queue.tasks-disk-directory",
                        "FieldDesc": "Directory to store tasks on disk.",
                        "FieldType": "string",
                        "FieldDefault": "/tmp/bloom-planner-queue",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "clean_tasks_directory",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.planner.queue.clean-tasks-directory",
                        "FieldDesc": "Whether to clean the tasks directory on startup.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "builder",
            "Required": false,
            "Block": {
              "Name": "builder",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "grpc_config",
                  "Required": false,
                  "Block": {
                    "Name": "grpc_client",
                    "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_recv_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.grpc-max-recv-msg-size",
                        "FieldDesc": "gRPC client max receive message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_send_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.grpc-max-send-msg-size",
                        "FieldDesc": "gRPC client max send message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "grpc_compression",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.grpc-compression",
                        "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.grpc-client-rate-limit",
                        "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                        "FieldType": "float",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit_burst",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.grpc-client-rate-limit-burst",
                        "FieldDesc": "Rate limit burst for gRPC client.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "backoff_on_ratelimits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.backoff-on-ratelimits",
                        "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.backoff-min-period",
                              "FieldDesc": "Minimum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.backoff-max-period",
                              "FieldDesc": "Maximum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.backoff-retries",
                              "FieldDesc": "Number of times to backoff and retry before failing.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_stream_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.initial-stream-window-size",
                        "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_connection_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.initial-connection-window-size",
                        "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.tls-enabled",
                        "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.connect-timeout",
                        "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_base_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.connect-backoff-base-delay",
                        "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_max_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.grpc.connect-backoff-max-delay",
                        "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "cluster_validation",
                        "Required": false,
                        "Block": {
                          "Name": "cluster_validation",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "label",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-build.builder.grpc.cluster-validation.label",
                              "FieldDesc": "Optionally define the cluster validation label.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "planner_address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom-build.builder.planner-address",
                  "FieldDesc": "Hostname (and port) of the bloom planner",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.backoff.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.backoff.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-build.builder.backoff.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Experimental: The bloom_build block configures the Loki bloom planner and builder servers, responsible for building bloom filters.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "bloom_gateway",
      "Required": false,
      "Block": {
        "Name": "bloom_gateway",
        "Desc": "Experimental: The bloom_gateway block configures the Loki bloom gateway server, responsible for serving queries for filtering chunks based on filter expressions.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.enabled",
            "FieldDesc": "Flag to enable or disable the bloom gateway component globally.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "client",
            "Required": false,
            "Block": {
              "Name": "client",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "pool_config",
                  "Required": false,
                  "Block": {
                    "Name": "pool_config",
                    "Desc": "Configures the behavior of the connection pool.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "check_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.pool.check-interval",
                        "FieldDesc": "How frequently to update the list of servers.",
                        "FieldType": "duration",
                        "FieldDefault": "15s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures the behavior of the connection pool.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "grpc_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "grpc_client",
                    "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_recv_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.grpc-max-recv-msg-size",
                        "FieldDesc": "gRPC client max receive message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_send_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.grpc-max-send-msg-size",
                        "FieldDesc": "gRPC client max send message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "grpc_compression",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.grpc-compression",
                        "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.grpc-client-rate-limit",
                        "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                        "FieldType": "float",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit_burst",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.grpc-client-rate-limit-burst",
                        "FieldDesc": "Rate limit burst for gRPC client.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "backoff_on_ratelimits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.backoff-on-ratelimits",
                        "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.backoff-min-period",
                              "FieldDesc": "Minimum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.backoff-max-period",
                              "FieldDesc": "Maximum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.backoff-retries",
                              "FieldDesc": "Number of times to backoff and retry before failing.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_stream_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.initial-stream-window-size",
                        "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_connection_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.initial-connection-window-size",
                        "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.tls-enabled",
                        "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.connect-timeout",
                        "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_base_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.connect-backoff-base-delay",
                        "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_max_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom-gateway-client.grpc.connect-backoff-max-delay",
                        "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "cluster_validation",
                        "Required": false,
                        "Block": {
                          "Name": "cluster_validation",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "label",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom-gateway-client.grpc.cluster-validation.label",
                              "FieldDesc": "Optionally define the cluster validation label.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "addresses",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom-gateway-client.addresses",
                  "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "worker_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.worker-concurrency",
            "FieldDesc": "Number of workers to use for filtering chunks concurrently. Usually set to 1x number of CPU cores.",
            "FieldType": "int",
            "FieldDefault": "4",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_query_concurrency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.block-query-concurrency",
            "FieldDesc": "Number of blocks processed concurrently on a single worker. Usually set to 2x number of CPU cores.",
            "FieldType": "int",
            "FieldDefault": "8",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_outstanding_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.max-outstanding-per-tenant",
            "FieldDesc": "Maximum number of outstanding tasks per tenant.",
            "FieldType": "int",
            "FieldDefault": "1024",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "num_multiplex_tasks",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.num-multiplex-tasks",
            "FieldDesc": "How many tasks are multiplexed at once.",
            "FieldType": "int",
            "FieldDefault": "512",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Experimental: The bloom_gateway block configures the Loki bloom gateway server, responsible for serving queries for filtering chunks based on filter expressions.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "storage_config",
      "Required": false,
      "Block": {
        "Name": "storage_config",
        "Desc": "The storage_config block configures one of many possible stores for both the index and chunks. Which configuration to be picked should be defined in schema_config block.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "alibabacloud",
            "Required": false,
            "Block": {
              "Name": "alibabacloud_storage_config",
              "Desc": "The alibabacloud_storage_config block configures the connection to Alibaba Cloud Storage object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "bucket",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.bucketname",
                  "FieldDesc": "Name of OSS bucket.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.endpoint",
                  "FieldDesc": "oss Endpoint to connect to.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "access_key_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.access-key-id",
                  "FieldDesc": "alibabacloud Access Key ID",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_access_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.secret-access-key",
                  "FieldDesc": "alibabacloud Secret Access Key",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "conn_timeout_sec",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.conn-timeout-sec",
                  "FieldDesc": "Connection timeout in seconds",
                  "FieldType": "int",
                  "FieldDefault": "30",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "read_write_timeout_sec",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "oss.read-write-timeout-sec",
                  "FieldDesc": "Read/Write timeout in seconds",
                  "FieldType": "int",
                  "FieldDefault": "60",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The alibabacloud_storage_config block configures the connection to Alibaba Cloud Storage object storage backend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "aws",
            "Required": false,
            "Block": {
              "Name": "aws_storage_config",
              "Desc": "The aws_storage_config block configures the connection to dynamoDB and S3 object storage. Either one of them or both can be configured.",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "dynamodb",
                  "Required": false,
                  "Block": {
                    "Name": "dynamodb",
                    "Desc": "Deprecated: Configures storing indexes in DynamoDB.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "dynamodb_url",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.url",
                        "FieldDesc": "DynamoDB endpoint URL with escaped Key and Secret encoded. If only region is specified as a host, proper endpoint will be deduced. Use inmemory:///<table-name> to use a mock in-memory implementation.",
                        "FieldType": "url",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "api_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.api-limit",
                        "FieldDesc": "DynamoDB table management requests per second limit.",
                        "FieldType": "float",
                        "FieldDefault": "2",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "throttle_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.throttle-limit",
                        "FieldDesc": "DynamoDB rate cap to back off when throttled.",
                        "FieldType": "float",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "metrics",
                        "Required": false,
                        "Block": {
                          "Name": "metrics",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.url",
                              "FieldDesc": "Use metrics-based autoscaling, via this query URL",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "target_queue_length",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.target-queue-length",
                              "FieldDesc": "Queue length above which we will scale up capacity",
                              "FieldType": "int",
                              "FieldDefault": "100000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "scale_up_factor",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.scale-up-factor",
                              "FieldDesc": "Scale up capacity by this multiple",
                              "FieldType": "float",
                              "FieldDefault": "1.3",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ignore_throttle_below",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.ignore-throttle-below",
                              "FieldDesc": "Ignore throttling below this level (rate per second)",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "queue_length_query",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.queue-length-query",
                              "FieldDesc": "query to fetch ingester queue length",
                              "FieldType": "string",
                              "FieldDefault": "sum(avg_over_time(loki_ingester_flush_queue_length{job=\"cortex/ingester\"}[2m])) or sum(avg_over_time(cortex_ingester_flush_queue_length{job=\"cortex/ingester\"}[2m]))",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "write_throttle_query",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.write-throttle-query",
                              "FieldDesc": "query to fetch throttle rates per table",
                              "FieldType": "string",
                              "FieldDefault": "sum(rate(cortex_dynamo_throttled_total{operation=\"DynamoDB.BatchWriteItem\"}[1m])) by (table) > 0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "write_usage_query",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.usage-query",
                              "FieldDesc": "query to fetch write capacity usage per table",
                              "FieldType": "string",
                              "FieldDefault": "sum(rate(cortex_dynamo_consumed_capacity_total{operation=\"DynamoDB.BatchWriteItem\"}[15m])) by (table) > 0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "read_usage_query",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.read-usage-query",
                              "FieldDesc": "query to fetch read capacity usage per table",
                              "FieldType": "string",
                              "FieldDefault": "sum(rate(cortex_dynamo_consumed_capacity_total{operation=\"DynamoDB.QueryPages\"}[1h])) by (table) > 0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "read_error_query",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "metrics.read-error-query",
                              "FieldDesc": "query to fetch read errors per table",
                              "FieldType": "string",
                              "FieldDefault": "sum(increase(cortex_dynamo_failures_total{operation=\"DynamoDB.QueryPages\",error=\"ProvisionedThroughputExceededException\"}[1m])) by (table) > 0",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_gang_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.chunk-gang-size",
                        "FieldDesc": "Number of chunks to group together to parallelise fetches (zero to disable)",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_get_max_parallelism",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.chunk.get-max-parallelism",
                        "FieldDesc": "Max number of chunk-get operations to start in parallel",
                        "FieldType": "int",
                        "FieldDefault": "32",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "dynamodb.min-backoff",
                              "FieldDesc": "Minimum backoff time",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "dynamodb.max-backoff",
                              "FieldDesc": "Maximum backoff time",
                              "FieldType": "duration",
                              "FieldDefault": "50s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "dynamodb.max-retries",
                              "FieldDesc": "Maximum number of times to retry an operation",
                              "FieldType": "int",
                              "FieldDefault": "20",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "kms_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dynamodb.kms-key-id",
                        "FieldDesc": "KMS key used for encrypting DynamoDB items.  DynamoDB will use an Amazon owned KMS key if not provided.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Deprecated: Configures storing indexes in DynamoDB.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "s3_storage_config",
                    "Desc": "The s3_storage_config block configures the connection to Amazon S3 object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "s3",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.url",
                        "FieldDesc": "S3 endpoint URL with escaped Key and Secret encoded. If only region is specified as a host, proper endpoint will be deduced. Use inmemory:///<bucket-name> to use a mock in-memory implementation.",
                        "FieldType": "url",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "s3forcepathstyle",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.force-path-style",
                        "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucketnames",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.buckets",
                        "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over. Overrides any buckets specified in s3.url flag",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.endpoint",
                        "FieldDesc": "S3 Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.region",
                        "FieldDesc": "AWS region to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.access-key-id",
                        "FieldDesc": "AWS Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.secret-access-key",
                        "FieldDesc": "AWS Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "session_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.session-token",
                        "FieldDesc": "AWS Session Token",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.insecure",
                        "FieldDesc": "Disable https on s3 connection.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.chunk-delimiter",
                        "FieldDesc": "Delimiter used to replace the default delimiter ':' in chunk IDs when storing chunks. This is mainly intended when you run a MinIO instance on a Windows machine. You should not change this value inflight.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_config",
                        "Required": false,
                        "Block": {
                          "Name": "http_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.http.timeout",
                              "FieldDesc": "Timeout specifies a time limit for requests made by s3 Client.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.http.idle-conn-timeout",
                              "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.http.response-header-timeout",
                              "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.http.insecure-skip-verify",
                              "FieldDesc": "Set to true to skip verifying the certificate chain and hostname.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.http.ca-file",
                              "FieldDesc": "Path to the trusted CA file that signed the SSL certificate of the S3 endpoint.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "signature_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.signature-version",
                        "FieldDesc": "The signature version to use for authenticating against S3. Supported values are: v4.",
                        "FieldType": "string",
                        "FieldDefault": "v4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_class",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.storage-class",
                        "FieldDesc": "The S3 storage class which objects will use. Supported values are: GLACIER, DEEP_ARCHIVE, GLACIER_IR, INTELLIGENT_TIERING, ONEZONE_IA, OUTPOSTS, REDUCED_REDUNDANCY, STANDARD, STANDARD_IA.",
                        "FieldType": "string",
                        "FieldDefault": "STANDARD",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "sse",
                        "Required": false,
                        "Block": {
                          "Name": "sse",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.sse.type",
                              "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.sse.kms-key-id",
                              "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_encryption_context",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.sse.kms-encryption-context",
                              "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "Configures back off when S3 get Object.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.min-backoff",
                              "FieldDesc": "Minimum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.max-backoff",
                              "FieldDesc": "Maximum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "3s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "s3.max-retries",
                              "FieldDesc": "Maximum number of times to retry for s3 GetObject or ObjectExists",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configures back off when S3 get Object.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "disable_dualstack",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "s3.disable-dualstack",
                        "FieldDesc": "Disable forcing S3 dualstack endpoint usage.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The s3_storage_config block configures the connection to Amazon S3 object storage backend.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The aws_storage_config block configures the connection to dynamoDB and S3 object storage. Either one of them or both can be configured.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "azure",
            "Required": false,
            "Block": {
              "Name": "azure_storage_config",
              "Desc": "The azure_storage_config block configures the connection to Azure object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "environment",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.environment",
                  "FieldDesc": "Azure Cloud environment. Supported values are: AzureGlobal, AzureChinaCloud, AzureGermanCloud, AzureUSGovernment.",
                  "FieldType": "string",
                  "FieldDefault": "AzureGlobal",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "account_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.account-name",
                  "FieldDesc": "Azure storage account name.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "account_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.account-key",
                  "FieldDesc": "Azure storage account key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connection_string",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.connection-string",
                  "FieldDesc": "If `connection-string` is set, the values of `account-name` and `endpoint-suffix` values will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "container_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.container-name",
                  "FieldDesc": "Name of the storage account blob container used to store chunks. This container must be created before running cortex.",
                  "FieldType": "string",
                  "FieldDefault": "loki",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint_suffix",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.endpoint-suffix",
                  "FieldDesc": "Azure storage endpoint suffix without schema. The storage account name will be prefixed to this value to create the FQDN.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "use_managed_identity",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.use-managed-identity",
                  "FieldDesc": "Use Managed Identity to authenticate to the Azure storage account.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "use_federated_token",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.use-federated-token",
                  "FieldDesc": "Use Federated Token to authenticate to the Azure storage account.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_assigned_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.user-assigned-id",
                  "FieldDesc": "User assigned identity ID to authenticate to the Azure storage account.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "use_service_principal",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.use-service-principal",
                  "FieldDesc": "Use Service Principal to authenticate through Azure OAuth.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.client-id",
                  "FieldDesc": "Azure Service Principal ID(GUID).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_secret",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.client-secret",
                  "FieldDesc": "Azure Service Principal secret key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tenant_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.tenant-id",
                  "FieldDesc": "Azure Tenant ID is used to authenticate through Azure OAuth.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "chunk_delimiter",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.chunk-delimiter",
                  "FieldDesc": "Chunk delimiter for blob ID to be used",
                  "FieldType": "string",
                  "FieldDefault": "-",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "download_buffer_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.download-buffer-size",
                  "FieldDesc": "Preallocated buffer size for downloads.",
                  "FieldType": "int",
                  "FieldDefault": "512000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "upload_buffer_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.upload-buffer-size",
                  "FieldDesc": "Preallocated buffer size for uploads.",
                  "FieldType": "int",
                  "FieldDefault": "256000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "upload_buffer_count",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.download-buffer-count",
                  "FieldDesc": "Number of buffers used to used to upload a chunk.",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "request_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.request-timeout",
                  "FieldDesc": "Timeout for requests made against azure blob storage.",
                  "FieldType": "duration",
                  "FieldDefault": "30s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.max-retries",
                  "FieldDesc": "Number of retries for a request which times out.",
                  "FieldType": "int",
                  "FieldDefault": "5",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_retry_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.min-retry-delay",
                  "FieldDesc": "Minimum time to wait before retrying a request.",
                  "FieldType": "duration",
                  "FieldDefault": "10ms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retry_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "azure.max-retry-delay",
                  "FieldDesc": "Maximum time to wait before retrying a request.",
                  "FieldType": "duration",
                  "FieldDefault": "500ms",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The azure_storage_config block configures the connection to Azure object storage backend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "bos",
            "Required": false,
            "Block": {
              "Name": "bos_storage_config",
              "Desc": "The bos_storage_config block configures the connection to Baidu Object Storage (BOS) object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "bucket_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bos.bucket-name",
                  "FieldDesc": "Name of BOS bucket.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bos.endpoint",
                  "FieldDesc": "BOS endpoint to connect to.",
                  "FieldType": "string",
                  "FieldDefault": "bj.bcebos.com",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "access_key_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bos.access-key-id",
                  "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_access_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bos.secret-access-key",
                  "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The bos_storage_config block configures the connection to Baidu Object Storage (BOS) object storage backend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "bigtable",
            "Required": false,
            "Block": {
              "Name": "bigtable",
              "Desc": "Deprecated: Configures storing indexes in Bigtable. Required fields only required when bigtable is defined in config.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "project",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bigtable.project",
                  "FieldDesc": "Bigtable project ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bigtable.instance",
                  "FieldDesc": "Bigtable instance ID. Please refer to https://cloud.google.com/docs/authentication/production for more information about how to configure authentication.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "grpc_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "grpc_client",
                    "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_recv_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.grpc-max-recv-msg-size",
                        "FieldDesc": "gRPC client max receive message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_send_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.grpc-max-send-msg-size",
                        "FieldDesc": "gRPC client max send message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "grpc_compression",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.grpc-compression",
                        "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.grpc-client-rate-limit",
                        "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                        "FieldType": "float",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit_burst",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.grpc-client-rate-limit-burst",
                        "FieldDesc": "Rate limit burst for gRPC client.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "backoff_on_ratelimits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.backoff-on-ratelimits",
                        "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.backoff-min-period",
                              "FieldDesc": "Minimum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.backoff-max-period",
                              "FieldDesc": "Maximum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.backoff-retries",
                              "FieldDesc": "Number of times to backoff and retry before failing.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_stream_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.initial-stream-window-size",
                        "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_connection_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.initial-connection-window-size",
                        "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.tls-enabled",
                        "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.connect-timeout",
                        "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_base_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.connect-backoff-base-delay",
                        "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_max_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bigtable.connect-backoff-max-delay",
                        "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "cluster_validation",
                        "Required": false,
                        "Block": {
                          "Name": "cluster_validation",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "label",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bigtable.cluster-validation.label",
                              "FieldDesc": "Optionally define the cluster validation label.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "table_cache_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bigtable.table-cache.enabled",
                  "FieldDesc": "If enabled, once a tables info is fetched, it is cached.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "table_cache_expiration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bigtable.table-cache.expiration",
                  "FieldDesc": "Duration to cache tables before checking again.",
                  "FieldType": "duration",
                  "FieldDefault": "30m0s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: Configures storing indexes in Bigtable. Required fields only required when bigtable is defined in config.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "gcs",
            "Required": false,
            "Block": {
              "Name": "gcs_storage_config",
              "Desc": "Configures storing chunks in GCS. Required fields only required when gcs is defined in config.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "bucket_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.bucketname",
                  "FieldDesc": "Name of GCS bucket. Please refer to https://cloud.google.com/docs/authentication/production for more information about how to configure authentication.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.endpoint",
                  "FieldDesc": "Custom GCS endpoint URL.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "service_account",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.service-account",
                  "FieldDesc": "Service account key content in JSON format, refer to https://cloud.google.com/iam/docs/creating-managing-service-account-keys for creation.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "chunk_buffer_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.chunk-buffer-size",
                  "FieldDesc": "The size of the buffer that GCS client for each PUT request. 0 to disable buffering.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "request_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.request-timeout",
                  "FieldDesc": "The duration after which the requests to GCS should be timed out.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_opencensus",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.enable-opencensus",
                  "FieldDesc": "Enable OpenCensus (OC) instrumentation for all requests.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_http2",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.enable-http2",
                  "FieldDesc": "Enable HTTP2 connections.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "gcs.enable-retries",
                  "FieldDesc": "Enable automatic retries of failed idempotent requests.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures storing chunks in GCS. Required fields only required when gcs is defined in config.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "cassandra",
            "Required": false,
            "Block": {
              "Name": "cassandra",
              "Desc": "Deprecated: Configures storing chunks and/or the index in Cassandra.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "addresses",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.addresses",
                  "FieldDesc": "Comma-separated hostnames or IPs of Cassandra instances.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.port",
                  "FieldDesc": "Port that Cassandra is running on",
                  "FieldType": "int",
                  "FieldDefault": "9042",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "keyspace",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.keyspace",
                  "FieldDesc": "Keyspace to use in Cassandra.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "consistency",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.consistency",
                  "FieldDesc": "Consistency level for Cassandra.",
                  "FieldType": "string",
                  "FieldDefault": "QUORUM",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.replication-factor",
                  "FieldDesc": "Replication factor to use in Cassandra.",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "disable_initial_host_lookup",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.disable-initial-host-lookup",
                  "FieldDesc": "Instruct the cassandra driver to not attempt to get host info from the system.peers table.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "SSL",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.ssl",
                  "FieldDesc": "Use SSL when connecting to cassandra instances.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "host_verification",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.host-verification",
                  "FieldDesc": "Require SSL certificate validation.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "host_selection_policy",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.host-selection-policy",
                  "FieldDesc": "Policy for selecting Cassandra host. Supported values are: round-robin, token-aware.",
                  "FieldType": "string",
                  "FieldDefault": "round-robin",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "CA_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.ca-path",
                  "FieldDesc": "Path to certificate file to verify the peer.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.tls-cert-path",
                  "FieldDesc": "Path to certificate file used by TLS.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.tls-key-path",
                  "FieldDesc": "Path to private key file used by TLS.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "auth",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.auth",
                  "FieldDesc": "Enable password authentication when connecting to cassandra.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "username",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.username",
                  "FieldDesc": "Username to use when connecting to cassandra.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "password",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.password",
                  "FieldDesc": "Password to use when connecting to cassandra.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "password_file",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.password-file",
                  "FieldDesc": "File containing password to use when connecting to cassandra.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "custom_authenticators",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.custom-authenticator",
                  "FieldDesc": "If set, when authenticating with cassandra a custom authenticator will be expected during the handshake. This flag can be set multiple times.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.timeout",
                  "FieldDesc": "Timeout when connecting to cassandra.",
                  "FieldType": "duration",
                  "FieldDefault": "2s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.connect-timeout",
                  "FieldDesc": "Initial connection timeout, used during initial dial to server.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "reconnect_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.reconnent-interval",
                  "FieldDesc": "Interval to retry connecting to cassandra nodes marked as DOWN.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.max-retries",
                  "FieldDesc": "Number of retries to perform on a request. Set to 0 to disable retries.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "retry_max_backoff",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.retry-max-backoff",
                  "FieldDesc": "Maximum time to wait before retrying a failed request.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "retry_min_backoff",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.retry-min-backoff",
                  "FieldDesc": "Minimum time to wait before retrying a failed request.",
                  "FieldType": "duration",
                  "FieldDefault": "100ms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "query_concurrency",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.query-concurrency",
                  "FieldDesc": "Limit number of concurrent queries to Cassandra. Set to 0 to disable the limit.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_connections",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.num-connections",
                  "FieldDesc": "Number of TCP connections per host.",
                  "FieldType": "int",
                  "FieldDefault": "2",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "convict_hosts_on_failure",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.convict-hosts-on-failure",
                  "FieldDesc": "Convict hosts of being down on failure.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "table_options",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cassandra.table-options",
                  "FieldDesc": "Table options used to create index or chunk tables. This value is used as plain text in the table `WITH` like this, \"CREATE TABLE <generated_by_cortex> (...) WITH <cassandra.table-options>\". For details, see https://cortexmetrics.io/docs/production/cassandra. By default it will use the default table options of your Cassandra cluster.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: Configures storing chunks and/or the index in Cassandra.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "boltdb",
            "Required": false,
            "Block": {
              "Name": "boltdb",
              "Desc": "Deprecated: Configures storing index in BoltDB. Required fields only required when boltdb is present in the configuration.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.dir",
                  "FieldDesc": "Location of BoltDB index files.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: Configures storing index in BoltDB. Required fields only required when boltdb is present in the configuration.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "filesystem",
            "Required": false,
            "Block": {
              "Name": "local_storage_config",
              "Desc": "Configures storing the chunks on the local file system. Required fields only required when filesystem is present in the configuration.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "local.chunk-directory",
                  "FieldDesc": "Directory to store chunks in.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures storing the chunks on the local file system. Required fields only required when filesystem is present in the configuration.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "swift",
            "Required": false,
            "Block": {
              "Name": "swift_storage_config",
              "Desc": "The swift_storage_config block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "auth_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.auth-version",
                  "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "auth_url",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.auth-url",
                  "FieldDesc": "OpenStack Swift authentication URL",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "internal",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.internal",
                  "FieldDesc": "Set this to true to use the internal OpenStack Swift endpoint URL",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "username",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.username",
                  "FieldDesc": "OpenStack Swift username.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.user-domain-name",
                  "FieldDesc": "OpenStack Swift user's domain name.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.user-domain-id",
                  "FieldDesc": "OpenStack Swift user's domain ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "user_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.user-id",
                  "FieldDesc": "OpenStack Swift user ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "password",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.password",
                  "FieldDesc": "OpenStack Swift API key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.domain-id",
                  "FieldDesc": "OpenStack Swift user's domain ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.domain-name",
                  "FieldDesc": "OpenStack Swift user's domain name.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.project-id",
                  "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.project-name",
                  "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_domain_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.project-domain-id",
                  "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "project_domain_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.project-domain-name",
                  "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "region_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.region-name",
                  "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "container_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.container-name",
                  "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.max-retries",
                  "FieldDesc": "Max retries on requests error.",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.connect-timeout",
                  "FieldDesc": "Time after which a connection attempt is aborted.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "request_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "swift.request-timeout",
                  "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http",
                  "Required": false,
                  "Block": {
                    "Name": "http",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "swift.http.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The swift_storage_config block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_store",
            "Required": false,
            "Block": {
              "Name": "grpc_store",
              "Desc": "Deprecated: ",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "server_address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "grpc-store.server-address",
                  "FieldDesc": "Hostname or IP of the gRPC store instance.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: ",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "hedging",
            "Required": false,
            "Block": {
              "Name": "hedging",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "at",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.hedge-requests-at",
                  "FieldDesc": "If set to a non-zero value a second request will be issued at the provided duration. Default is 0 (disabled)",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "up_to",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.hedge-requests-up-to",
                  "FieldDesc": "The maximum of hedge requests allowed.",
                  "FieldType": "int",
                  "FieldDefault": "2",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_per_second",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.hedge-max-per-second",
                  "FieldDesc": "The maximum of hedge requests allowed per seconds.",
                  "FieldType": "int",
                  "FieldDefault": "5",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "named_stores",
            "Required": false,
            "Block": {
              "Name": "named_stores_config",
              "Desc": "Configures additional object stores for a given storage provider.\nSupported stores: aws, azure, bos, filesystem, gcs, swift.\nExample:\n```yaml\n    storage_config:\n      named_stores:\n        aws:\n          store-1:\n            endpoint: s3://foo-bucket\n            region: us-west1\n```\nNamed store from this example can be used by setting object_store to store-1 in period_config.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "aws",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to aws_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "azure",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to azure_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "bos",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to bos_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "filesystem",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to local_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "gcs",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to gcs_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "alibabacloud",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to alibabacloud_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "swift",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to swift_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cos",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to cos_storage_config",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures additional object stores for a given storage provider.\nSupported stores: aws, azure, bos, filesystem, gcs, swift.\nExample:\n```yaml\n    storage_config:\n      named_stores:\n        aws:\n          store-1:\n            endpoint: s3://foo-bucket\n            region: us-west1\n```\nNamed store from this example can be used by setting object_store to store-1 in period_config.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "cos",
            "Required": false,
            "Block": {
              "Name": "cos_storage_config",
              "Desc": "The cos_storage_config block configures the connection to IBM Cloud Object Storage (COS) backend.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "forcepathstyle",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.force-path-style",
                  "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "bucketnames",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.buckets",
                  "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.endpoint",
                  "FieldDesc": "COS Endpoint to connect to.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "region",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.region",
                  "FieldDesc": "COS region to use.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "access_key_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.access-key-id",
                  "FieldDesc": "COS HMAC Access Key ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_access_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.secret-access-key",
                  "FieldDesc": "COS HMAC Secret Access Key.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "http_config",
                  "Required": false,
                  "Block": {
                    "Name": "http_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "idle_conn_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "cos.http.idle-conn-timeout",
                        "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                        "FieldType": "duration",
                        "FieldDefault": "1m30s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "response_header_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "cos.http.response-header-timeout",
                        "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "Configures back off when cos get Object.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "cos.min-backoff",
                        "FieldDesc": "Minimum backoff time when cos get Object.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "cos.max-backoff",
                        "FieldDesc": "Maximum backoff time when cos get Object.",
                        "FieldType": "duration",
                        "FieldDefault": "3s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "cos.max-retries",
                        "FieldDesc": "Maximum number of times to retry when cos get Object.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures back off when cos get Object.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "api_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.api-key",
                  "FieldDesc": "IAM API key to access COS.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "service_instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.service-instance-id",
                  "FieldDesc": "COS service instance id to use.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "auth_endpoint",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.auth-endpoint",
                  "FieldDesc": "IAM Auth Endpoint for authentication.",
                  "FieldType": "string",
                  "FieldDefault": "https://iam.cloud.ibm.com/identity/token",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cr_token_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.cr-token-file-path",
                  "FieldDesc": "Compute resource token file path.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "trusted_profile_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.trusted-profile-name",
                  "FieldDesc": "Name of the trusted profile.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "trusted_profile_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "cos.trusted-profile-id",
                  "FieldDesc": "ID of the trusted profile.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The cos_storage_config block configures the connection to IBM Cloud Object Storage (COS) backend.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "index_cache_validity",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.index-cache-validity",
            "FieldDesc": "Cache validity for active index entries. Should be no higher than -ingester.max-chunk-idle.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "congestion_control",
            "Required": false,
            "Block": {
              "Name": "congestion_control",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.congestion-control.enabled",
                  "FieldDesc": "Use storage congestion control (default: disabled).",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "controller",
                  "Required": false,
                  "Block": {
                    "Name": "controller",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "strategy",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.congestion-control.strategy",
                        "FieldDesc": "Congestion control strategy to use (default: none, options: 'aimd').",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "aimd",
                        "Required": false,
                        "Block": {
                          "Name": "aimd",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "start",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.congestion-control.strategy.aimd.start",
                              "FieldDesc": "AIMD starting throughput window size: how many requests can be sent per second (default: 2000).",
                              "FieldType": "int",
                              "FieldDefault": "2000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "upper_bound",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.congestion-control.strategy.aimd.upper-bound",
                              "FieldDesc": "AIMD maximum throughput window size: upper limit of requests sent per second (default: 10000).",
                              "FieldType": "int",
                              "FieldDefault": "10000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "backoff_factor",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.congestion-control.strategy.aimd.backoff-factor",
                              "FieldDesc": "AIMD backoff factor when upstream service is throttled to decrease number of requests sent per second (default: 0.5).",
                              "FieldType": "float",
                              "FieldDefault": "0.5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "retry",
                  "Required": false,
                  "Block": {
                    "Name": "retry",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "strategy",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.congestion-control.retry.strategy",
                        "FieldDesc": "Congestion control retry strategy to use (default: none, options: 'limited').",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.congestion-control.retry.strategy.limited.limit",
                        "FieldDesc": "Maximum number of retries allowed.",
                        "FieldType": "int",
                        "FieldDefault": "2",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "hedging",
                  "Required": false,
                  "Block": {
                    "Name": "hedging",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "config",
                        "Required": false,
                        "Block": {
                          "Name": "config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "at",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "duration",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "up_to",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_per_second",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "int",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "strategy",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.congestion-control.hedge.strategy",
                        "FieldDesc": "Congestion control hedge strategy to use (default: none, options: 'limited').",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "object_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.object-prefix",
            "FieldDesc": "Experimental. Sets a constant prefix for all keys inserted into object storage. Example: loki/",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "index_queries_cache_config",
            "Required": false,
            "Block": {
              "Name": "cache_config",
              "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "default_validity",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.index-cache-read.default-validity",
                  "FieldDesc": "The default validity of entries for caches unless overridden.",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "background",
                  "Required": false,
                  "Block": {
                    "Name": "background",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "writeback_goroutines",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.background.write-back-concurrency",
                        "FieldDesc": "At what concurrency to write back to cache.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_buffer",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.background.write-back-buffer",
                        "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                        "FieldType": "int",
                        "FieldDefault": "500000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_size_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.background.write-back-size-limit",
                        "FieldDesc": "Size limit in bytes for background write-back.",
                        "FieldType": "int",
                        "FieldDefault": "500MB",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached",
                  "Required": false,
                  "Block": {
                    "Name": "memcached",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.expiration",
                        "FieldDesc": "How long keys stay in the memcache.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "batch_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.batchsize",
                        "FieldDesc": "How many keys to fetch in each batch.",
                        "FieldType": "int",
                        "FieldDefault": "4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "parallelism",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.parallelism",
                        "FieldDesc": "Maximum active requests to memcache.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached_client",
                  "Required": false,
                  "Block": {
                    "Name": "memcached_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.hostname",
                        "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.service",
                        "FieldDesc": "SRV service used to discover memcache servers.",
                        "FieldType": "string",
                        "FieldDefault": "memcached",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "addresses",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.addresses",
                        "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.max-idle-conns",
                        "FieldDesc": "Maximum number of idle connections in pool.",
                        "FieldType": "int",
                        "FieldDefault": "16",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_item_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.max-item-size",
                        "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "update_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.update-interval",
                        "FieldDesc": "Period with which to poll DNS for memcache servers.",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "consistent_hash",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.consistent-hash",
                        "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_consecutive_failures",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.circuit-breaker-consecutive-failures",
                        "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.circuit-breaker-timeout",
                        "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.circuit-breaker-interval",
                        "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.memcached.tls-enabled",
                        "FieldDesc": "Enable connecting to Memcached with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-read.memcached.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "redis",
                  "Required": false,
                  "Block": {
                    "Name": "redis",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.endpoint",
                        "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "master_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.master-name",
                        "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.expiration",
                        "FieldDesc": "How long keys stay in the redis.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "db",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.db",
                        "FieldDesc": "Database index.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "pool_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.pool-size",
                        "FieldDesc": "Maximum number of connections in the pool.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.username",
                        "FieldDesc": "Username to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.password",
                        "FieldDesc": "Password to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.tls-enabled",
                        "FieldDesc": "Enable connecting to redis with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "idle_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.idle-timeout",
                        "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connection_age",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.max-connection-age",
                        "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "route_randomly",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.redis.route-randomly",
                        "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "embedded_cache",
                  "Required": false,
                  "Block": {
                    "Name": "embedded_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.embedded-cache.enabled",
                        "FieldDesc": "Whether embedded cache is enabled.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_mb",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.embedded-cache.max-size-mb",
                        "FieldDesc": "Maximum memory size of the cache in MB.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_items",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.embedded-cache.max-size-items",
                        "FieldDesc": "Maximum number of entries in the cache.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-read.embedded-cache.ttl",
                        "FieldDesc": "The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "disable_broad_index_queries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.disable-broad-index-queries",
            "FieldDesc": "Disable broad index queries which results in reduced cache usage and faster query performance at the expense of somewhat higher QPS on the index store.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_parallel_get_chunk",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.max-parallel-get-chunk",
            "FieldDesc": "Maximum number of parallel chunk reads.",
            "FieldType": "int",
            "FieldDefault": "150",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "use_thanos_objstore",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "use-thanos-objstore",
            "FieldDesc": "Enables the use of thanos-io/objstore clients for connecting to object storage. When set to true, the configuration inside `storage_config.object_store` or `common.storage.object_store` block takes effect.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "object_store",
            "Required": false,
            "Block": {
              "Name": "object_store",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "thanos_object_store_config",
                    "Desc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "s3",
                        "Required": false,
                        "Block": {
                          "Name": "s3",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.endpoint",
                              "FieldDesc": "The S3 bucket endpoint. It could be an AWS S3 endpoint listed at https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an S3-compatible service in hostname:port format.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "region",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.region",
                              "FieldDesc": "S3 region. If unset, the client will issue a S3 GetBucketLocation API call to autodetect it.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.bucket-name",
                              "FieldDesc": "S3 bucket name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secret_access_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.secret-access-key",
                              "FieldDesc": "S3 secret access key",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.access-key-id",
                              "FieldDesc": "S3 access key ID",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "session_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.session-token",
                              "FieldDesc": "S3 session token",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.insecure",
                              "FieldDesc": "If enabled, use http:// for the S3 endpoint instead of https://. This could be useful in local dev/test environments while using an S3-compatible backend storage, like Minio.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "list_objects_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.list-objects-version",
                              "FieldDesc": "Use a specific version of the S3 list object API. Supported values are v1 or v2. Default is unset.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket_lookup_type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.bucket-lookup-type",
                              "FieldDesc": "Bucket lookup style type, used to access bucket in S3-compatible service. Default is auto. Supported values are: auto, path, virtual-hosted.",
                              "FieldType": "int",
                              "FieldDefault": "auto",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dualstack_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.dualstack-enabled",
                              "FieldDesc": "When enabled, direct all AWS S3 requests to the dual-stack IPv4/IPv6 endpoint for the configured region.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "storage_class",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.storage-class",
                              "FieldDesc": "The S3 storage class to use, not set by default. Details can be found at https://aws.amazon.com/s3/storage-classes/. Supported values are: STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS, GLACIER_IR, SNOW, EXPRESS_ONEZONE",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "native_aws_auth_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.native-aws-auth-enabled",
                              "FieldDesc": "If enabled, it will use the default authentication methods of the AWS SDK for go based on known environment variables and known AWS config files.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "part_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.part-size",
                              "FieldDesc": "The minimum file size in bytes used for multipart uploads. If 0, the value is optimally computed for each object.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "send_content_md5",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.send-content-md5",
                              "FieldDesc": "If enabled, a Content-MD5 header is sent with S3 Put Object requests. Consumes more resources to compute the MD5, but may improve compatibility with object storage services that do not support checksums.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "sts_endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.sts-endpoint",
                              "FieldDesc": "Accessing S3 resources using temporary, secure credentials provided by AWS Security Token Service.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.s3.max-retries",
                              "FieldDesc": "The maximum number of retries for S3 requests that are retryable. Default is 10, set this to 1 to disable retries.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "sse",
                              "Required": false,
                              "Block": {
                                "Name": "sse",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "type",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.sse.type",
                                    "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "kms_key_id",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.sse.kms-key-id",
                                    "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "kms_encryption_context",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.sse.kms-encryption-context",
                                    "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "http",
                              "Required": false,
                              "Block": {
                                "Name": "http",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "idle_conn_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.idle-conn-timeout",
                                    "FieldDesc": "The time an idle connection will remain idle before closing.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1m30s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "response_header_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.response-header-timeout",
                                    "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2m0s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.insecure-skip-verify",
                                    "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_handshake_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.tls-handshake-timeout",
                                    "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "expect_continue_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.expect-continue-timeout",
                                    "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.max-idle-connections",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.max-idle-connections-per-host",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.max-connections-per-host",
                                    "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "0",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.http.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "trace",
                              "Required": false,
                              "Block": {
                                "Name": "trace",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.s3.trace.enabled",
                                    "FieldDesc": "When enabled, low-level S3 HTTP operation information is logged at the debug level.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "gcs",
                        "Required": false,
                        "Block": {
                          "Name": "gcs",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "bucket_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.gcs.bucket-name",
                              "FieldDesc": "GCS bucket name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service_account",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.gcs.service-account",
                              "FieldDesc": "JSON either from a Google Developers Console client_credentials.json file, or a Google Developers service account key. Needs to be valid JSON, not a filesystem path. If empty, fallback to Google default logic:\n1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. For workload identity federation, refer to https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation on how to generate the JSON configuration file for on-prem/non-Google cloud platforms.\n2. A JSON file in a location known to the gcloud command-line tool: $HOME/.config/gcloud/application_default_credentials.json.\n3. On Google Compute Engine it fetches credentials from the metadata server.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "chunk_buffer_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.gcs.chunk-buffer-size",
                              "FieldDesc": "The maximum size of the buffer that GCS client for a single PUT request. 0 to disable buffering.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.gcs.max-retries",
                              "FieldDesc": "The maximum number of retries for idempotent operations. Overrides the default gcs storage client behavior if this value is greater than 0. Set this to 1 to disable retries.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "azure",
                        "Required": false,
                        "Block": {
                          "Name": "azure",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "account_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.account-name",
                              "FieldDesc": "Azure storage account name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "account_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.account-key",
                              "FieldDesc": "Azure storage account key. If unset, Azure managed identities will be used for authentication instead.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connection_string",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.connection-string",
                              "FieldDesc": "If `connection-string` is set, the value of `endpoint-suffix` will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "container_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.container-name",
                              "FieldDesc": "Azure storage container name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint_suffix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.endpoint-suffix",
                              "FieldDesc": "Azure storage endpoint suffix without schema. The account name will be prefixed to this value to create the FQDN. If set to empty string, default endpoint suffix is used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.max-retries",
                              "FieldDesc": "Number of retries for recoverable errors",
                              "FieldType": "int",
                              "FieldDefault": "20",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_assigned_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.user-assigned-id",
                              "FieldDesc": "User assigned managed identity. If empty, then System assigned identity is used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "chunk_delimiter",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.azure.chunk-delimiter",
                              "FieldDesc": "Delimiter used to replace ':' in chunk IDs when storing chunks",
                              "FieldType": "string",
                              "FieldDefault": "-",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "swift",
                        "Required": false,
                        "Block": {
                          "Name": "swift",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "application_credential_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.application-credential-id",
                              "FieldDesc": "OpenStack Swift application credential id",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "application_credential_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.application-credential-name",
                              "FieldDesc": "OpenStack Swift application credential name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "application_credential_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.application-credential-secret",
                              "FieldDesc": "OpenStack Swift application credential secret",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "auth_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.auth-version",
                              "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "auth_url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.auth-url",
                              "FieldDesc": "OpenStack Swift authentication URL",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.username",
                              "FieldDesc": "OpenStack Swift username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.user-domain-name",
                              "FieldDesc": "OpenStack Swift user's domain name.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.user-domain-id",
                              "FieldDesc": "OpenStack Swift user's domain ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.user-id",
                              "FieldDesc": "OpenStack Swift user ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.password",
                              "FieldDesc": "OpenStack Swift API key.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.domain-id",
                              "FieldDesc": "OpenStack Swift user's domain ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.domain-name",
                              "FieldDesc": "OpenStack Swift user's domain name.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.project-id",
                              "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.project-name",
                              "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.project-domain-id",
                              "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.project-domain-name",
                              "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "region_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.region-name",
                              "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "container_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.container-name",
                              "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.max-retries",
                              "FieldDesc": "Max retries on requests error.",
                              "FieldType": "int",
                              "FieldDefault": "3",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.connect-timeout",
                              "FieldDesc": "Time after which a connection attempt is aborted.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "request_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.swift.request-timeout",
                              "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "http",
                              "Required": false,
                              "Block": {
                                "Name": "http",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "idle_conn_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.idle-conn-timeout",
                                    "FieldDesc": "The time an idle connection will remain idle before closing.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1m30s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "response_header_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.response-header-timeout",
                                    "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2m0s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.insecure-skip-verify",
                                    "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_handshake_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.tls-handshake-timeout",
                                    "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "expect_continue_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.expect-continue-timeout",
                                    "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.max-idle-connections",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.max-idle-connections-per-host",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.max-connections-per-host",
                                    "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "0",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "object-store.swift.http.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "filesystem",
                        "Required": false,
                        "Block": {
                          "Name": "filesystem",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "dir",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.filesystem.dir",
                              "FieldDesc": "Local filesystem storage directory.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "alibaba",
                        "Required": false,
                        "Block": {
                          "Name": "alibaba",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.oss.endpoint",
                              "FieldDesc": "Endpoint to connect to.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.oss.bucketname",
                              "FieldDesc": "Name of OSS bucket.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.oss.access-key-id",
                              "FieldDesc": "alibabacloud Access Key ID",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.oss.access-key-secret",
                              "FieldDesc": "alibabacloud Secret Access Key",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "bos",
                        "Required": false,
                        "Block": {
                          "Name": "bos",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "bucket",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.bos.bucket",
                              "FieldDesc": "Name of BOS bucket.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.bos.endpoint",
                              "FieldDesc": "BOS endpoint to connect to.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.bos.access-key",
                              "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secret_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "object-store.bos.secret-key",
                              "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "object-store.storage-prefix",
                        "FieldDesc": "Prefix for all objects stored in the backend storage. For simplicity, it may only contain digits, English alphabet letters and dashes.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "named_stores",
                  "Required": false,
                  "Block": {
                    "Name": "named_stores",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "azure",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to NamedAzureStorageConfig",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "filesystem",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to NamedFilesystemStorageConfig",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "gcs",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to NamedGCSStorageConfig",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "s3",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to NamedS3StorageConfig",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "swift",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "map of string to NamedSwiftStorageConfig",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_chunk_batch_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.max-chunk-batch-size",
            "FieldDesc": "The maximum number of chunks to fetch per batch.",
            "FieldType": "int",
            "FieldDefault": "50",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "boltdb_shipper",
            "Required": false,
            "Block": {
              "Name": "boltdb_shipper",
              "Desc": "Configures storing index in an Object Store (GCS/S3/Azure/Swift/COS/Filesystem) in the form of boltdb files. Required fields only required when boltdb-shipper is defined in config.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "active_index_directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.active-index-directory",
                  "FieldDesc": "Directory where ingesters would write index files which would then be uploaded by shipper to configured storage",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cache_location",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.cache-location",
                  "FieldDesc": "Cache location for restoring index files from storage for queries",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cache_ttl",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.cache-ttl",
                  "FieldDesc": "TTL for index files restored in cache for queries",
                  "FieldType": "duration",
                  "FieldDefault": "24h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "resync_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.resync-interval",
                  "FieldDesc": "Resync downloaded files with the storage",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "query_ready_num_days",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.query-ready-num-days",
                  "FieldDesc": "Number of days of common index to be kept downloaded for queries. For per tenant index query readiness, use limits overrides config.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "index_gateway_client",
                  "Required": false,
                  "Block": {
                    "Name": "index_gateway_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "grpc_client_config",
                        "Required": false,
                        "Block": {
                          "Name": "grpc_client",
                          "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "max_recv_msg_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.grpc-max-recv-msg-size",
                              "FieldDesc": "gRPC client max receive message size (bytes).",
                              "FieldType": "int",
                              "FieldDefault": "104857600",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_send_msg_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.grpc-max-send-msg-size",
                              "FieldDesc": "gRPC client max send message size (bytes).",
                              "FieldType": "int",
                              "FieldDefault": "104857600",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "grpc_compression",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.grpc-compression",
                              "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.grpc-client-rate-limit",
                              "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                              "FieldType": "float",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "rate_limit_burst",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.grpc-client-rate-limit-burst",
                              "FieldDesc": "Rate limit burst for gRPC client.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "backoff_on_ratelimits",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.backoff-on-ratelimits",
                              "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "backoff_config",
                              "Required": false,
                              "Block": {
                                "Name": "backoff_config",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "min_period",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.backoff-min-period",
                                    "FieldDesc": "Minimum delay when backing off.",
                                    "FieldType": "duration",
                                    "FieldDefault": "100ms",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_period",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.backoff-max-period",
                                    "FieldDesc": "Maximum delay when backing off.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.backoff-retries",
                                    "FieldDesc": "Number of times to backoff and retry before failing.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "initial_stream_window_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.initial-stream-window-size",
                              "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                              "FieldType": "int",
                              "FieldDefault": "63KiB1023B",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "initial_connection_window_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.initial-connection-window-size",
                              "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                              "FieldType": "int",
                              "FieldDefault": "63KiB1023B",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-enabled",
                              "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.connect-timeout",
                              "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_backoff_base_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.connect-backoff-base-delay",
                              "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_backoff_max_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.connect-backoff-max-delay",
                              "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "cluster_validation",
                              "Required": false,
                              "Block": {
                                "Name": "cluster_validation",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "label",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "boltdb.shipper.index-gateway-client.grpc.cluster-validation.label",
                                    "FieldDesc": "Optionally define the cluster validation label.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "server_address",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "boltdb.shipper.index-gateway-client.server-address",
                        "FieldDesc": "Hostname or IP of the Index Gateway gRPC server running in simple mode. Can also be prefixed with dns+, dnssrv+, or dnssrvnoa+ to resolve a DNS A record with multiple IP's, a DNS SRV record with a followup A record lookup, or a DNS SRV record without a followup A record lookup, respectively.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "log_gateway_requests",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "boltdb.shipper.index-gateway-client.log-gateway-requests",
                        "FieldDesc": "Whether requests sent to the gateway should be logged or not.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ingestername",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ingesterdbretainperiod",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "duration",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "build_per_tenant_index",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "boltdb.shipper.build-per-tenant-index",
                  "FieldDesc": "Build per tenant index files",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures storing index in an Object Store (GCS/S3/Azure/Swift/COS/Filesystem) in the form of boltdb files. Required fields only required when boltdb-shipper is defined in config.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "tsdb_shipper",
            "Required": false,
            "Block": {
              "Name": "tsdb_shipper",
              "Desc": "Configures storing index in an Object Store (GCS/S3/Azure/Swift/COS/Filesystem) in a prometheus TSDB-like format. Required fields only required when TSDB is defined in config.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "active_index_directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "tsdb.shipper.active-index-directory",
                  "FieldDesc": "Directory where ingesters would write index files which would then be uploaded by shipper to configured storage",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cache_location",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "tsdb.shipper.cache-location",
                  "FieldDesc": "Cache location for restoring index files from storage for queries",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "cache_ttl",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "tsdb.shipper.cache-ttl",
                  "FieldDesc": "TTL for index files restored in cache for queries",
                  "FieldType": "duration",
                  "FieldDefault": "24h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "resync_interval",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "tsdb.shipper.resync-interval",
                  "FieldDesc": "Resync downloaded files with the storage",
                  "FieldType": "duration",
                  "FieldDefault": "5m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "query_ready_num_days",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "tsdb.shipper.query-ready-num-days",
                  "FieldDesc": "Number of days of common index to be kept downloaded for queries. For per tenant index query readiness, use limits overrides config.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "index_gateway_client",
                  "Required": false,
                  "Block": {
                    "Name": "index_gateway_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "grpc_client_config",
                        "Required": false,
                        "Block": {
                          "Name": "grpc_client",
                          "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "max_recv_msg_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.grpc-max-recv-msg-size",
                              "FieldDesc": "gRPC client max receive message size (bytes).",
                              "FieldType": "int",
                              "FieldDefault": "104857600",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_send_msg_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.grpc-max-send-msg-size",
                              "FieldDesc": "gRPC client max send message size (bytes).",
                              "FieldType": "int",
                              "FieldDefault": "104857600",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "grpc_compression",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.grpc-compression",
                              "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.grpc-client-rate-limit",
                              "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                              "FieldType": "float",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "rate_limit_burst",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.grpc-client-rate-limit-burst",
                              "FieldDesc": "Rate limit burst for gRPC client.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "backoff_on_ratelimits",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.backoff-on-ratelimits",
                              "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "backoff_config",
                              "Required": false,
                              "Block": {
                                "Name": "backoff_config",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "min_period",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.backoff-min-period",
                                    "FieldDesc": "Minimum delay when backing off.",
                                    "FieldType": "duration",
                                    "FieldDefault": "100ms",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_period",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.backoff-max-period",
                                    "FieldDesc": "Maximum delay when backing off.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.backoff-retries",
                                    "FieldDesc": "Number of times to backoff and retry before failing.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "initial_stream_window_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.initial-stream-window-size",
                              "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                              "FieldType": "int",
                              "FieldDefault": "63KiB1023B",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "initial_connection_window_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.initial-connection-window-size",
                              "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                              "FieldType": "int",
                              "FieldDefault": "63KiB1023B",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-enabled",
                              "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.connect-timeout",
                              "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_backoff_base_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.connect-backoff-base-delay",
                              "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_backoff_max_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.connect-backoff-max-delay",
                              "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "cluster_validation",
                              "Required": false,
                              "Block": {
                                "Name": "cluster_validation",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "label",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "tsdb.shipper.index-gateway-client.grpc.cluster-validation.label",
                                    "FieldDesc": "Optionally define the cluster validation label.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "server_address",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "tsdb.shipper.index-gateway-client.server-address",
                        "FieldDesc": "Hostname or IP of the Index Gateway gRPC server running in simple mode. Can also be prefixed with dns+, dnssrv+, or dnssrvnoa+ to resolve a DNS A record with multiple IP's, a DNS SRV record with a followup A record lookup, or a DNS SRV record without a followup A record lookup, respectively.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "log_gateway_requests",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "tsdb.shipper.index-gateway-client.log-gateway-requests",
                        "FieldDesc": "Whether requests sent to the gateway should be logged or not.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ingestername",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "ingesterdbretainperiod",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "duration",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures storing index in an Object Store (GCS/S3/Azure/Swift/COS/Filesystem) in a prometheus TSDB-like format. Required fields only required when TSDB is defined in config.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "bloom_shipper",
            "Required": false,
            "Block": {
              "Name": "bloom_shipper",
              "Desc": "Experimental: Configures the bloom shipper component, which contains the store abstraction to fetch bloom filters from and put them to object storage.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "working_directory",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom.shipper.working-directory",
                  "FieldDesc": "Working directory to store downloaded bloom blocks. Supports multiple directories, separated by comma.",
                  "FieldType": "string",
                  "FieldDefault": "/data/blooms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_query_page_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom.max-query-page-size",
                  "FieldDesc": "Maximum size of bloom pages that should be queried. Larger pages than this limit are skipped when querying blooms to limit memory usage.",
                  "FieldType": "int",
                  "FieldDefault": "64MiB",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "download_parallelism",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "bloom.download-parallelism",
                  "FieldDesc": "The amount of maximum concurrent bloom blocks downloads. Usually set to 2x number of CPU cores.",
                  "FieldType": "int",
                  "FieldDefault": "8",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "blocks_cache",
                  "Required": false,
                  "Block": {
                    "Name": "blocks_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "soft_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.blocks-cache.soft-limit",
                        "FieldDesc": "Cache for bloom blocks. Soft limit of the cache in bytes. Exceeding this limit will trigger evictions of least recently used items in the background.",
                        "FieldType": "int",
                        "FieldDefault": "32GiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "hard_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.blocks-cache.hard-limit",
                        "FieldDesc": "Cache for bloom blocks. Hard limit of the cache in bytes. Exceeding this limit will block execution until soft limit is deceeded.",
                        "FieldType": "int",
                        "FieldDefault": "64GiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.blocks-cache.ttl",
                        "FieldDesc": "Cache for bloom blocks. The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "24h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "metas_cache",
                  "Required": false,
                  "Block": {
                    "Name": "cache_config",
                    "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "default_validity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.metas-cache.default-validity",
                        "FieldDesc": "Cache for bloom metas. The default validity of entries for caches unless overridden.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "background",
                        "Required": false,
                        "Block": {
                          "Name": "background",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "writeback_goroutines",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.background.write-back-concurrency",
                              "FieldDesc": "Cache for bloom metas. At what concurrency to write back to cache.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_buffer",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.background.write-back-buffer",
                              "FieldDesc": "Cache for bloom metas. How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                              "FieldType": "int",
                              "FieldDefault": "500000",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "writeback_size_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.background.write-back-size-limit",
                              "FieldDesc": "Cache for bloom metas. Size limit in bytes for background write-back.",
                              "FieldType": "int",
                              "FieldDefault": "500MB",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached",
                        "Required": false,
                        "Block": {
                          "Name": "memcached",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.expiration",
                              "FieldDesc": "Cache for bloom metas. How long keys stay in the memcache.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "batch_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.batchsize",
                              "FieldDesc": "Cache for bloom metas. How many keys to fetch in each batch.",
                              "FieldType": "int",
                              "FieldDefault": "4",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "parallelism",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.parallelism",
                              "FieldDesc": "Cache for bloom metas. Maximum active requests to memcache.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "memcached_client",
                        "Required": false,
                        "Block": {
                          "Name": "memcached_client",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.hostname",
                              "FieldDesc": "Cache for bloom metas. Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.service",
                              "FieldDesc": "Cache for bloom metas. SRV service used to discover memcache servers.",
                              "FieldType": "string",
                              "FieldDefault": "memcached",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "addresses",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.addresses",
                              "FieldDesc": "Cache for bloom metas. Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.timeout",
                              "FieldDesc": "Cache for bloom metas. Maximum time to wait before giving up on memcached requests.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_idle_conns",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.max-idle-conns",
                              "FieldDesc": "Cache for bloom metas. Maximum number of idle connections in pool.",
                              "FieldType": "int",
                              "FieldDefault": "16",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_item_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.max-item-size",
                              "FieldDesc": "Cache for bloom metas. The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "update_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.update-interval",
                              "FieldDesc": "Cache for bloom metas. Period with which to poll DNS for memcache servers.",
                              "FieldType": "duration",
                              "FieldDefault": "1m0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_hash",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.consistent-hash",
                              "FieldDesc": "Cache for bloom metas. Use consistent hashing to distribute to memcache servers.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_consecutive_failures",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.circuit-breaker-consecutive-failures",
                              "FieldDesc": "Cache for bloom metas. Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.circuit-breaker-timeout",
                              "FieldDesc": "Cache for bloom metas. Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "circuit_breaker_interval",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.circuit-breaker-interval",
                              "FieldDesc": "Cache for bloom metas. Reset circuit-breaker counts after this long (if zero then never reset).",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.memcached.tls-enabled",
                              "FieldDesc": "Enable connecting to Memcached with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "bloom.metas-cache.memcached.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "redis",
                        "Required": false,
                        "Block": {
                          "Name": "redis",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.endpoint",
                              "FieldDesc": "Cache for bloom metas. Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "master_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.master-name",
                              "FieldDesc": "Cache for bloom metas. Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.timeout",
                              "FieldDesc": "Cache for bloom metas. Maximum time to wait before giving up on redis requests.",
                              "FieldType": "duration",
                              "FieldDefault": "500ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "expiration",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.expiration",
                              "FieldDesc": "Cache for bloom metas. How long keys stay in the redis.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "db",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.db",
                              "FieldDesc": "Cache for bloom metas. Database index.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "pool_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.pool-size",
                              "FieldDesc": "Cache for bloom metas. Maximum number of connections in the pool.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.username",
                              "FieldDesc": "Cache for bloom metas. Username to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.password",
                              "FieldDesc": "Cache for bloom metas. Password to use when connecting to redis.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.tls-enabled",
                              "FieldDesc": "Cache for bloom metas. Enable connecting to redis with TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.tls-insecure-skip-verify",
                              "FieldDesc": "Cache for bloom metas. Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.idle-timeout",
                              "FieldDesc": "Cache for bloom metas. Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_connection_age",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.max-connection-age",
                              "FieldDesc": "Cache for bloom metas. Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "route_randomly",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.redis.route-randomly",
                              "FieldDesc": "Cache for bloom metas. By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "embedded_cache",
                        "Required": false,
                        "Block": {
                          "Name": "embedded_cache",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.embedded-cache.enabled",
                              "FieldDesc": "Cache for bloom metas. Whether embedded cache is enabled.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_mb",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.embedded-cache.max-size-mb",
                              "FieldDesc": "Cache for bloom metas. Maximum memory size of the cache in MB.",
                              "FieldType": "int",
                              "FieldDefault": "100",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_size_items",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.embedded-cache.max-size-items",
                              "FieldDesc": "Cache for bloom metas. Maximum number of entries in the cache.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ttl",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "bloom.metas-cache.embedded-cache.ttl",
                              "FieldDesc": "Cache for bloom metas. The time to live for items in the cache before they get purged.",
                              "FieldType": "duration",
                              "FieldDefault": "1h0m0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "metas_lru_cache",
                  "Required": false,
                  "Block": {
                    "Name": "metas_lru_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.metas-lru-cache.enabled",
                        "FieldDesc": "In-memory LRU cache for bloom metas. Whether embedded cache is enabled.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_mb",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.metas-lru-cache.max-size-mb",
                        "FieldDesc": "In-memory LRU cache for bloom metas. Maximum memory size of the cache in MB.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_items",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.metas-lru-cache.max-size-items",
                        "FieldDesc": "In-memory LRU cache for bloom metas. Maximum number of entries in the cache.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "bloom.metas-lru-cache.ttl",
                        "FieldDesc": "In-memory LRU cache for bloom metas. The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Experimental: Configures the bloom shipper component, which contains the store abstraction to fetch bloom filters from and put them to object storage.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The storage_config block configures one of many possible stores for both the index and chunks. Which configuration to be picked should be defined in schema_config block.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "chunk_store_config",
      "Required": false,
      "Block": {
        "Name": "chunk_store_config",
        "Desc": "The chunk_store_config block configures how chunks will be cached and how long to wait before saving them to the backing store.",
        "Entries": [
          {
            "Kind": "block",
            "Name": "chunk_cache_config",
            "Required": false,
            "Block": {
              "Name": "cache_config",
              "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "default_validity",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.chunks-cache.default-validity",
                  "FieldDesc": "The default validity of entries for caches unless overridden.",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "background",
                  "Required": false,
                  "Block": {
                    "Name": "background",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "writeback_goroutines",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.background.write-back-concurrency",
                        "FieldDesc": "At what concurrency to write back to cache.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_buffer",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.background.write-back-buffer",
                        "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                        "FieldType": "int",
                        "FieldDefault": "500000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_size_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.background.write-back-size-limit",
                        "FieldDesc": "Size limit in bytes for background write-back.",
                        "FieldType": "int",
                        "FieldDefault": "500MB",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached",
                  "Required": false,
                  "Block": {
                    "Name": "memcached",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.expiration",
                        "FieldDesc": "How long keys stay in the memcache.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "batch_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.batchsize",
                        "FieldDesc": "How many keys to fetch in each batch.",
                        "FieldType": "int",
                        "FieldDefault": "4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "parallelism",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.parallelism",
                        "FieldDesc": "Maximum active requests to memcache.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached_client",
                  "Required": false,
                  "Block": {
                    "Name": "memcached_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.hostname",
                        "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.service",
                        "FieldDesc": "SRV service used to discover memcache servers.",
                        "FieldType": "string",
                        "FieldDefault": "memcached",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "addresses",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.addresses",
                        "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.max-idle-conns",
                        "FieldDesc": "Maximum number of idle connections in pool.",
                        "FieldType": "int",
                        "FieldDefault": "16",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_item_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.max-item-size",
                        "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "update_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.update-interval",
                        "FieldDesc": "Period with which to poll DNS for memcache servers.",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "consistent_hash",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.consistent-hash",
                        "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_consecutive_failures",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.circuit-breaker-consecutive-failures",
                        "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.circuit-breaker-timeout",
                        "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.circuit-breaker-interval",
                        "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.memcached.tls-enabled",
                        "FieldDesc": "Enable connecting to Memcached with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache.memcached.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "redis",
                  "Required": false,
                  "Block": {
                    "Name": "redis",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.endpoint",
                        "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "master_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.master-name",
                        "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.expiration",
                        "FieldDesc": "How long keys stay in the redis.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "db",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.db",
                        "FieldDesc": "Database index.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "pool_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.pool-size",
                        "FieldDesc": "Maximum number of connections in the pool.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.username",
                        "FieldDesc": "Username to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.password",
                        "FieldDesc": "Password to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.tls-enabled",
                        "FieldDesc": "Enable connecting to redis with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "idle_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.idle-timeout",
                        "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connection_age",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.max-connection-age",
                        "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "route_randomly",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.redis.route-randomly",
                        "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "embedded_cache",
                  "Required": false,
                  "Block": {
                    "Name": "embedded_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.embedded-cache.enabled",
                        "FieldDesc": "Whether embedded cache is enabled.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_mb",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.embedded-cache.max-size-mb",
                        "FieldDesc": "Maximum memory size of the cache in MB.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_items",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.embedded-cache.max-size-items",
                        "FieldDesc": "Maximum number of entries in the cache.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache.embedded-cache.ttl",
                        "FieldDesc": "The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "chunk_cache_config_l2",
            "Required": false,
            "Block": {
              "Name": "cache_config",
              "Desc": "The cache_config block configures the cache backend for a specific Loki component.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "default_validity",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.chunks-cache-l2.default-validity",
                  "FieldDesc": "The default validity of entries for caches unless overridden.",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "background",
                  "Required": false,
                  "Block": {
                    "Name": "background",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "writeback_goroutines",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.background.write-back-concurrency",
                        "FieldDesc": "At what concurrency to write back to cache.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_buffer",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.background.write-back-buffer",
                        "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                        "FieldType": "int",
                        "FieldDefault": "500000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_size_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.background.write-back-size-limit",
                        "FieldDesc": "Size limit in bytes for background write-back.",
                        "FieldType": "int",
                        "FieldDefault": "500MB",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached",
                  "Required": false,
                  "Block": {
                    "Name": "memcached",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.expiration",
                        "FieldDesc": "How long keys stay in the memcache.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "batch_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.batchsize",
                        "FieldDesc": "How many keys to fetch in each batch.",
                        "FieldType": "int",
                        "FieldDefault": "4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "parallelism",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.parallelism",
                        "FieldDesc": "Maximum active requests to memcache.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached_client",
                  "Required": false,
                  "Block": {
                    "Name": "memcached_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.hostname",
                        "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.service",
                        "FieldDesc": "SRV service used to discover memcache servers.",
                        "FieldType": "string",
                        "FieldDefault": "memcached",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "addresses",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.addresses",
                        "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.max-idle-conns",
                        "FieldDesc": "Maximum number of idle connections in pool.",
                        "FieldType": "int",
                        "FieldDefault": "16",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_item_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.max-item-size",
                        "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "update_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.update-interval",
                        "FieldDesc": "Period with which to poll DNS for memcache servers.",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "consistent_hash",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.consistent-hash",
                        "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_consecutive_failures",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.circuit-breaker-consecutive-failures",
                        "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.circuit-breaker-timeout",
                        "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.circuit-breaker-interval",
                        "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.memcached.tls-enabled",
                        "FieldDesc": "Enable connecting to Memcached with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.chunks-cache-l2.memcached.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "redis",
                  "Required": false,
                  "Block": {
                    "Name": "redis",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.endpoint",
                        "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "master_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.master-name",
                        "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.expiration",
                        "FieldDesc": "How long keys stay in the redis.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "db",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.db",
                        "FieldDesc": "Database index.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "pool_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.pool-size",
                        "FieldDesc": "Maximum number of connections in the pool.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.username",
                        "FieldDesc": "Username to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.password",
                        "FieldDesc": "Password to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.tls-enabled",
                        "FieldDesc": "Enable connecting to redis with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "idle_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.idle-timeout",
                        "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connection_age",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.max-connection-age",
                        "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "route_randomly",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.redis.route-randomly",
                        "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "embedded_cache",
                  "Required": false,
                  "Block": {
                    "Name": "embedded_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.embedded-cache.enabled",
                        "FieldDesc": "Whether embedded cache is enabled.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_mb",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.embedded-cache.max-size-mb",
                        "FieldDesc": "Maximum memory size of the cache in MB.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_items",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.embedded-cache.max-size-items",
                        "FieldDesc": "Maximum number of entries in the cache.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.chunks-cache-l2.embedded-cache.ttl",
                        "FieldDesc": "The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The cache_config block configures the cache backend for a specific Loki component.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "write_dedupe_cache_config",
            "Required": false,
            "Block": {
              "Name": "cache_config",
              "Desc": "Write dedupe cache is deprecated along with legacy index types (aws, aws-dynamo, bigtable, bigtable-hashed, cassandra, gcp, gcp-columnkey, grpc-store).\nConsider using TSDB index which does not require a write dedupe cache.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "default_validity",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "store.index-cache-write.default-validity",
                  "FieldDesc": "The default validity of entries for caches unless overridden.",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "background",
                  "Required": false,
                  "Block": {
                    "Name": "background",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "writeback_goroutines",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.background.write-back-concurrency",
                        "FieldDesc": "At what concurrency to write back to cache.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_buffer",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.background.write-back-buffer",
                        "FieldDesc": "How many key batches to buffer for background write-back. Default is large to prefer size based limiting.",
                        "FieldType": "int",
                        "FieldDefault": "500000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "writeback_size_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.background.write-back-size-limit",
                        "FieldDesc": "Size limit in bytes for background write-back.",
                        "FieldType": "int",
                        "FieldDefault": "500MB",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached",
                  "Required": false,
                  "Block": {
                    "Name": "memcached",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.expiration",
                        "FieldDesc": "How long keys stay in the memcache.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "batch_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.batchsize",
                        "FieldDesc": "How many keys to fetch in each batch.",
                        "FieldType": "int",
                        "FieldDefault": "4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "parallelism",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.parallelism",
                        "FieldDesc": "Maximum active requests to memcache.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "memcached_client",
                  "Required": false,
                  "Block": {
                    "Name": "memcached_client",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "host",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.hostname",
                        "FieldDesc": "Hostname for memcached service to use. If empty and if addresses is unset, no memcached will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.service",
                        "FieldDesc": "SRV service used to discover memcache servers.",
                        "FieldType": "string",
                        "FieldDefault": "memcached",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "addresses",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.addresses",
                        "FieldDesc": "Comma separated addresses list in DNS Service Discovery format: https://grafana.com/docs/mimir/latest/configure/about-dns-service-discovery/#supported-discovery-modes",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on memcached requests.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_idle_conns",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.max-idle-conns",
                        "FieldDesc": "Maximum number of idle connections in pool.",
                        "FieldType": "int",
                        "FieldDefault": "16",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_item_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.max-item-size",
                        "FieldDesc": "The maximum size of an item stored in memcached. Bigger items are not stored. If set to 0, no maximum size is enforced.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "update_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.update-interval",
                        "FieldDesc": "Period with which to poll DNS for memcache servers.",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "consistent_hash",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.consistent-hash",
                        "FieldDesc": "Use consistent hashing to distribute to memcache servers.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_consecutive_failures",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.circuit-breaker-consecutive-failures",
                        "FieldDesc": "Trip circuit-breaker after this number of consecutive dial failures (if zero then circuit-breaker is disabled).",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.circuit-breaker-timeout",
                        "FieldDesc": "Duration circuit-breaker remains open after tripping (if zero then 60 seconds is used).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "circuit_breaker_interval",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.circuit-breaker-interval",
                        "FieldDesc": "Reset circuit-breaker counts after this long (if zero then never reset).",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.memcached.tls-enabled",
                        "FieldDesc": "Enable connecting to Memcached with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "store.index-cache-write.memcached.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "redis",
                  "Required": false,
                  "Block": {
                    "Name": "redis",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.endpoint",
                        "FieldDesc": "Redis Server or Cluster configuration endpoint to use for caching. A comma-separated list of endpoints for Redis Cluster or Redis Sentinel. If empty, no redis will be used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "master_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.master-name",
                        "FieldDesc": "Redis Sentinel master name. An empty string for Redis Server or Redis Cluster.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.timeout",
                        "FieldDesc": "Maximum time to wait before giving up on redis requests.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "expiration",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.expiration",
                        "FieldDesc": "How long keys stay in the redis.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "db",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.db",
                        "FieldDesc": "Database index.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "pool_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.pool-size",
                        "FieldDesc": "Maximum number of connections in the pool.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.username",
                        "FieldDesc": "Username to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.password",
                        "FieldDesc": "Password to use when connecting to redis.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.tls-enabled",
                        "FieldDesc": "Enable connecting to redis with TLS.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "idle_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.idle-timeout",
                        "FieldDesc": "Close connections after remaining idle for this duration. If the value is zero, then idle connections are not closed.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_connection_age",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.max-connection-age",
                        "FieldDesc": "Close connections older than this duration. If the value is zero, then the pool does not close connections based on age.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "route_randomly",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.redis.route-randomly",
                        "FieldDesc": "By default, the Redis client only reads from the master node. Enabling this option can lower pressure on the master node by randomly routing read-only commands to the master and any available replicas.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "embedded_cache",
                  "Required": false,
                  "Block": {
                    "Name": "embedded_cache",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.embedded-cache.enabled",
                        "FieldDesc": "Whether embedded cache is enabled.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_mb",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.embedded-cache.max-size-mb",
                        "FieldDesc": "Maximum memory size of the cache in MB.",
                        "FieldType": "int",
                        "FieldDefault": "100",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_size_items",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.embedded-cache.max-size-items",
                        "FieldDesc": "Maximum number of entries in the cache.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "ttl",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "store.index-cache-write.embedded-cache.ttl",
                        "FieldDesc": "The time to live for items in the cache before they get purged.",
                        "FieldType": "duration",
                        "FieldDefault": "1h0m0s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Write dedupe cache is deprecated along with legacy index types (aws, aws-dynamo, bigtable, bigtable-hashed, cassandra, gcp, gcp-columnkey, grpc-store).\nConsider using TSDB index which does not require a write dedupe cache.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "skip_query_writeback_cache_older_than",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.skip-query-writeback-older-than",
            "FieldDesc": "Chunks fetched from queriers before this duration will not be written to the cache. A value of 0 will write all chunks to the cache",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "l2_chunk_cache_handoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.chunks-cache-l2.handoff",
            "FieldDesc": "Chunks will be handed off to the L2 cache after this duration. 0 to disable L2 cache.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cache_lookups_older_than",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.cache-lookups-older-than",
            "FieldDesc": "Cache index entries older than this period. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The chunk_store_config block configures how chunks will be cached and how long to wait before saving them to the backing store.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "schema_config",
      "Required": false,
      "Block": {
        "Name": "schema_config",
        "Desc": "Configures the chunk index schema and where it is stored.",
        "Entries": [
          {
            "Kind": "slice",
            "Name": "configs",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "list of period_configs",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": {
              "Name": "configs",
              "Desc": "",
              "Entries": null,
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            }
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configures the chunk index schema and where it is stored.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "compactor",
      "Required": false,
      "Block": {
        "Name": "compactor",
        "Desc": "The compactor block configures the compactor component, which compacts index shards for performance.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "working_directory",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.working-directory",
            "FieldDesc": "Directory where files can be downloaded for compaction.",
            "FieldType": "string",
            "FieldDefault": "/var/loki/compactor",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compaction_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.compaction-interval",
            "FieldDesc": "Interval at which to re-run the compaction operation.",
            "FieldType": "duration",
            "FieldDefault": "10m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "apply_retention_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.apply-retention-interval",
            "FieldDesc": "Interval at which to apply/enforce retention. 0 means run at same interval as compaction. If non-zero, it should always be a multiple of compaction interval.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.retention-enabled",
            "FieldDesc": "Activate custom (per-stream,per-tenant) retention.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_delete_delay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.retention-delete-delay",
            "FieldDesc": "Delay after which chunks will be fully deleted during retention.",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_delete_worker_count",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.retention-delete-worker-count",
            "FieldDesc": "The total amount of worker to use to delete chunks.",
            "FieldType": "int",
            "FieldDefault": "150",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_table_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.retention-table-timeout",
            "FieldDesc": "The maximum amount of time to spend running retention and deletion on any given table in the index.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "retention_backoff_config",
            "Required": false,
            "Block": {
              "Name": "retention_backoff_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "min_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.retention-backoff-config.backoff-min-period",
                  "FieldDesc": "Minimum delay when backing off.",
                  "FieldType": "duration",
                  "FieldDefault": "100ms",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.retention-backoff-config.backoff-max-period",
                  "FieldDesc": "Maximum delay when backing off.",
                  "FieldType": "duration",
                  "FieldDefault": "10s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_retries",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.retention-backoff-config.backoff-retries",
                  "FieldDesc": "Number of times to backoff and retry before failing.",
                  "FieldType": "int",
                  "FieldDefault": "10",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_request_store",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-request-store",
            "FieldDesc": "Store used for managing delete requests.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_request_store_key_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-request-store.key-prefix",
            "FieldDesc": "Path prefix for storing delete requests.",
            "FieldType": "string",
            "FieldDefault": "index/",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_request_store_db_type",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-request-store.db-type",
            "FieldDesc": "Type of DB to use for storing delete requests. Supported types: boltdb, sqlite",
            "FieldType": "string",
            "FieldDefault": "boltdb",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "backup_delete_request_store_db_type",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-request-store.backup-db-type",
            "FieldDesc": "Type of DB to use as backup for storing delete requests. Backup DB should ideally be used while migrating from one DB type to another. Supported type(s): boltdb",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_batch_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-batch-size",
            "FieldDesc": "The max number of delete requests to run per compaction cycle.",
            "FieldType": "int",
            "FieldDefault": "70",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_request_cancel_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-request-cancel-period",
            "FieldDesc": "Allow cancellation of delete request until duration after they are created. Data would be deleted only after delete requests have been older than this duration. Ideally this should be set to at least 24h.",
            "FieldType": "duration",
            "FieldDefault": "24h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "delete_max_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.delete-max-interval",
            "FieldDesc": "Constrain the size of any single delete request with line filters. When a delete request > delete_max_interval is input, the request is sharded into smaller requests of no more than delete_max_interval",
            "FieldType": "duration",
            "FieldDefault": "24h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_compaction_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.max-compaction-parallelism",
            "FieldDesc": "Maximum number of tables to compact in parallel. While increasing this value, please make sure compactor has enough disk space allocated to be able to store and compact as many tables.",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "upload_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.upload-parallelism",
            "FieldDesc": "Number of upload/remove operations to execute in parallel when finalizing a compaction. NOTE: This setting is per compaction operation, which can be executed in parallel. The upper bound on the number of concurrent uploads is upload_parallelism * max_compaction_parallelism.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "compactor_ring",
            "Required": false,
            "Block": {
              "Name": "compactor_ring",
              "Desc": "The hash ring configuration used by compactors to elect a single instance for running compactions. The CLI flags prefix for this block config is: compactor.ring",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "compactor.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "compactor.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which compactors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "zone_awareness_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.zone-awareness-enabled",
                  "FieldDesc": "True to enable zone-awareness and replicate blocks across different availability zones.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.num-tokens",
                  "FieldDesc": "IGNORED: Num tokens is fixed to 1",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.replication-factor",
                  "FieldDesc": "IGNORED: Replication factor is fixed to 1",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-availability-zone",
                  "FieldDesc": "The availability zone where this instance is running. Required if zone-awareness is enabled.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The hash ring configuration used by compactors to elect a single instance for running compactions. The CLI flags prefix for this block config is: compactor.ring",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tables_to_compact",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.tables-to-compact",
            "FieldDesc": "Number of tables that compactor will try to compact. Newer tables are chosen when this is less than the number of tables available.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "skip_latest_n_tables",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.skip-latest-n-tables",
            "FieldDesc": "Do not compact N latest tables. Together with -compactor.run-once and -compactor.tables-to-compact, this is useful when clearing compactor backlogs.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The compactor block configures the compactor component, which compacts index shards for performance.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "compactor_grpc_client",
      "Required": false,
      "Block": {
        "Name": "compactor_grpc_client",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "compactor.grpc-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "compactor.grpc-client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The grpc_client block configures the gRPC client used to communicate between a client and server component in Loki.",
            "Root": true,
            "Inline": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "limits_config",
      "Required": false,
      "Block": {
        "Name": "limits_config",
        "Desc": "The limits_config block configures global and per-tenant limits in Loki. The values here can be overridden in the `overrides` section of the runtime_config file",
        "Entries": [
          {
            "Kind": "field",
            "Name": "ingestion_rate_strategy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingestion-rate-limit-strategy",
            "FieldDesc": "Whether the ingestion rate limit should be applied individually to each distributor instance (local), or evenly shared across the cluster (global). The ingestion rate strategy cannot be overridden on a per-tenant basis.\n- local: enforces the limit on a per distributor basis. The actual effective rate limit will be N times higher, where N is the number of distributor replicas.\n- global: enforces the limit globally, configuring a per-distributor local rate limiter as 'ingestion_rate / N', where N is the number of distributor replicas (it's automatically adjusted if the number of replicas change). The global strategy requires the distributors to form their own ring, which is used to keep track of the current number of healthy distributor replicas.",
            "FieldType": "string",
            "FieldDefault": "global",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingestion_rate_mb",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingestion-rate-limit-mb",
            "FieldDesc": "Per-user ingestion rate limit in sample size per second. Sample size includes size of the logs line and the size of structured metadata labels. Units in MB.",
            "FieldType": "float",
            "FieldDefault": "4",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingestion_burst_size_mb",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.ingestion-burst-size-mb",
            "FieldDesc": "Per-user allowed ingestion burst size (in sample size). Units in MB. The burst size refers to the per-distributor local rate limiter even in the case of the 'global' strategy, and should be set at least to the maximum logs size expected in a single push request.",
            "FieldType": "float",
            "FieldDefault": "6",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_name_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.max-length-label-name",
            "FieldDesc": "Maximum length accepted for label names.",
            "FieldType": "int",
            "FieldDefault": "1024",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_value_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.max-length-label-value",
            "FieldDesc": "Maximum length accepted for label value. This setting also applies to the metric name.",
            "FieldType": "int",
            "FieldDefault": "2048",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_label_names_per_series",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.max-label-names-per-series",
            "FieldDesc": "Maximum number of label names per series.",
            "FieldType": "int",
            "FieldDefault": "15",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "reject_old_samples",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.reject-old-samples",
            "FieldDesc": "Whether or not old samples will be rejected.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "reject_old_samples_max_age",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.reject-old-samples.max-age",
            "FieldDesc": "Maximum accepted sample age before rejecting.",
            "FieldType": "duration",
            "FieldDefault": "1w",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "creation_grace_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.create-grace-period",
            "FieldDesc": "Duration which table will be created/deleted before/after it's needed; we won't accept sample from before this time.",
            "FieldType": "duration",
            "FieldDefault": "10m",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_line_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.max-line-size",
            "FieldDesc": "Maximum line size on ingestion path. Example: 256kb. Any log line exceeding this limit will be discarded unless `distributor.max-line-size-truncate` is set which in case it is truncated instead of discarding it completely. There is no limit when unset or set to 0.",
            "FieldType": "int",
            "FieldDefault": "256KB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_line_size_truncate",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "distributor.max-line-size-truncate",
            "FieldDesc": "Whether to truncate lines that exceed max_line_size.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "increment_duplicate_timestamp",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.increment-duplicate-timestamps",
            "FieldDesc": "Alter the log line timestamp during ingestion when the timestamp is the same as the previous entry for the same stream. When enabled, if a log line in a push request has the same timestamp as the previous line for the same stream, one nanosecond is added to the log line. This will preserve the received order of log lines with the exact same timestamp when they are queried, by slightly altering their stored timestamp. NOTE: This is imperfect, because Loki accepts out of order writes, and another push request for the same stream could contain duplicate timestamps to existing entries and they will not be incremented.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "simulated_push_latency",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.simulated-push-latency",
            "FieldDesc": "Simulated latency to add to push requests. Used for testing. Set to 0s to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_multi_variant_queries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.enable-multi-variant-queries",
            "FieldDesc": "Enable experimental support for running multiple query variants over the same underlying data. For example, running both a rate() and count_over_time() query over the same range selector.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "discover_generic_fields",
            "Required": false,
            "Block": {
              "Name": "discover_generic_fields",
              "Desc": "Experimental: Detect fields from stream labels, structured metadata, or json/logfmt formatted log line and put them into structured metadata of the log entry.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "fields",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "map of string to list of strings",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Experimental: Detect fields from stream labels, structured metadata, or json/logfmt formatted log line and put them into structured metadata of the log entry.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "discover_service_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.discover-service-name",
            "FieldDesc": "If no service_name label exists, Loki maps a single label from the configured list to service_name. If none of the configured labels exist in the stream, label is set to unknown_service. Empty list disables setting the label.",
            "FieldType": "list of strings",
            "FieldDefault": "[service app application app_name name app_kubernetes_io_name container container_name k8s_container_name component workload job k8s_job_name]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "discover_log_levels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.discover-log-levels",
            "FieldDesc": "Discover and add log levels during ingestion, if not present already. Levels would be added to Structured Metadata with name level/LEVEL/Level/Severity/severity/SEVERITY/lvl/LVL/Lvl (case-sensitive) and one of the values from 'trace', 'debug', 'info', 'warn', 'error', 'critical', 'fatal' (case insensitive).",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_level_fields",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.log-level-fields",
            "FieldDesc": "Field name to use for log levels. If not set, log level would be detected based on pre-defined labels as mentioned above.",
            "FieldType": "list of strings",
            "FieldDefault": "[level LEVEL Level Severity severity SEVERITY lvl LVL Lvl severity_text Severity_Text SEVERITY_TEXT]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_level_from_json_max_depth",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.log-level-from-json-max-depth",
            "FieldDesc": "Maximum depth to search for log level fields in JSON logs. A value of 0 or less means unlimited depth. Default is 2 which searches the first 2 levels of the JSON object.",
            "FieldType": "int",
            "FieldDefault": "2",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "use_owned_stream_count",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.use-owned-stream-count",
            "FieldDesc": "When true an ingester takes into account only the streams that it owns according to the ring while applying the stream limit.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_streams_per_user",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.max-streams-per-user",
            "FieldDesc": "Maximum number of active streams per user, per ingester. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_global_streams_per_user",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.max-global-streams-per-user",
            "FieldDesc": "Maximum number of active streams per user, across the cluster. 0 to disable. When the global limit is enabled, each ingester is configured with a dynamic local limit based on the replication factor and the current number of healthy ingesters, and is kept updated whenever the number of ingesters change.",
            "FieldType": "int",
            "FieldDefault": "5000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "unordered_writes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.unordered-writes",
            "FieldDesc": "Deprecated. When true, out-of-order writes are accepted.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "per_stream_rate_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.per-stream-rate-limit",
            "FieldDesc": "Maximum byte rate per second per stream, also expressible in human readable forms (1MB, 256KB, etc).",
            "FieldType": "int",
            "FieldDefault": "3MB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "per_stream_rate_limit_burst",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingester.per-stream-rate-limit-burst",
            "FieldDesc": "Maximum burst bytes per stream, also expressible in human readable forms (1MB, 256KB, etc). This is how far above the rate limit a stream can 'burst' before the stream is limited.",
            "FieldType": "int",
            "FieldDefault": "15MB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_chunks_per_query",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.query-chunk-limit",
            "FieldDesc": "Maximum number of chunks that can be fetched in a single query.",
            "FieldType": "int",
            "FieldDefault": "2000000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_series",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-query-series",
            "FieldDesc": "Limit the maximum of unique series that is returned by a metric query. When the limit is reached an error is returned.",
            "FieldType": "int",
            "FieldDefault": "500",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_lookback",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-query-lookback",
            "FieldDesc": "Limit how far back in time series data and metadata can be queried, up until lookback duration ago. This limit is enforced in the query frontend, the querier and the ruler. If the requested time range is outside the allowed range, the request will not fail, but will be modified to only query data within the allowed time range. The default value of 0 does not set a limit.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_length",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.max-query-length",
            "FieldDesc": "The limit to length of chunk store queries. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "30d1h",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_range",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-query-range",
            "FieldDesc": "Limit the length of the [range] inside a range query. Default is 0 or unlimited",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-query-parallelism",
            "FieldDesc": "Maximum number of queries that will be scheduled in parallel by the frontend.",
            "FieldType": "int",
            "FieldDefault": "32",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tsdb_max_query_parallelism",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.tsdb-max-query-parallelism",
            "FieldDesc": "Maximum number of queries will be scheduled in parallel by the frontend for TSDB schemas.",
            "FieldType": "int",
            "FieldDefault": "128",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tsdb_max_bytes_per_shard",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.tsdb-max-bytes-per-shard",
            "FieldDesc": "Target maximum number of bytes assigned to a single sharded query. Also expressible in human readable forms (1GB, etc). Note: This is a _target_ and not an absolute limit. The actual limit can be higher, but the query planner will try to build shards up to this limit.",
            "FieldType": "int",
            "FieldDefault": "600MB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tsdb_sharding_strategy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.tsdb-sharding-strategy",
            "FieldDesc": "sharding strategy to use in query planning. Suggested to use bounded once all nodes can recognize it.",
            "FieldType": "string",
            "FieldDefault": "power_of_two",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tsdb_precompute_chunks",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.tsdb-precompute-chunks",
            "FieldDesc": "Precompute chunks for TSDB queries. This can improve query performance at the cost of increased memory usage by computing chunks once during planning, reducing index calls.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cardinality_limit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.cardinality-limit",
            "FieldDesc": "Cardinality limit for index queries.",
            "FieldType": "int",
            "FieldDefault": "100000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_streams_matchers_per_query",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-streams-matcher-per-query",
            "FieldDesc": "Maximum number of stream matchers per query.",
            "FieldType": "int",
            "FieldDefault": "1000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_concurrent_tail_requests",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.max-concurrent-tail-requests",
            "FieldDesc": "Maximum number of concurrent tail requests.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_entries_limit_per_query",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.max-entries-limit",
            "FieldDesc": "Maximum number of log entries that will be returned for a query.",
            "FieldType": "int",
            "FieldDefault": "5000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_cache_freshness_per_query",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-cache-freshness",
            "FieldDesc": "Most recent allowed cacheable result per-tenant, to prevent caching very recent results that might still be in flux.",
            "FieldType": "duration",
            "FieldDefault": "10m",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_metadata_cache_freshness",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-metadata-cache-freshness",
            "FieldDesc": "Do not cache metadata request if the end time is within the frontend.max-metadata-cache-freshness window. Set this to 0 to apply no such limits. Defaults to 24h.",
            "FieldType": "duration",
            "FieldDefault": "1d",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_stats_cache_freshness",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-stats-cache-freshness",
            "FieldDesc": "Do not cache requests with an end time that falls within Now minus this duration. 0 disables this feature (default).",
            "FieldType": "duration",
            "FieldDefault": "10m",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_queriers_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-queriers-per-tenant",
            "FieldDesc": "Maximum number of queriers that can handle requests for a single tenant. If set to 0 or value higher than number of available queriers, *all* queriers will handle requests for the tenant. Each frontend (or query-scheduler, if used) will select the same set of queriers for the same tenant (given that all queriers are connected to all frontends / query-schedulers). This option only works with queriers connecting to the query-frontend / query-scheduler, not when using downstream URL.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_capacity",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-query-capacity",
            "FieldDesc": "How much of the available query capacity (\"querier\" components in distributed mode, \"read\" components in SSD mode) can be used by a single tenant. Allowed values are 0.0 to 1.0. For example, setting this to 0.5 would allow a tenant to use half of the available queriers for processing the query workload. If set to 0, query capacity is determined by frontend.max-queriers-per-tenant. When both frontend.max-queriers-per-tenant and frontend.max-query-capacity are configured, smaller value of the resulting querier replica count is considered: min(frontend.max-queriers-per-tenant, ceil(querier_replicas * frontend.max-query-capacity)). *All* queriers will handle requests for the tenant if neither limits are applied. This option only works with queriers connecting to the query-frontend / query-scheduler, not when using downstream URL. Use this feature in a multi-tenant setup where you need to limit query capacity for certain tenants.",
            "FieldType": "float",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_ready_index_num_days",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.query-ready-index-num-days",
            "FieldDesc": "Number of days of index to be kept always downloaded for queries. Applies only to per user index in boltdb-shipper index store. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "query_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.query-timeout",
            "FieldDesc": "Timeout when querying backends (ingesters or storage) during the execution of a query request. When a specific per-tenant timeout is used, the global timeout is ignored.",
            "FieldType": "duration",
            "FieldDefault": "1m",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.split-queries-by-interval",
            "FieldDesc": "Split queries by a time interval and execute in parallel. The value 0 disables splitting by time. This also determines how cache keys are chosen when result caching is enabled.",
            "FieldType": "duration",
            "FieldDefault": "1h",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_metadata_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.split-metadata-queries-by-interval",
            "FieldDesc": "Split metadata queries by a time interval and execute in parallel. The value 0 disables splitting metadata queries by time. This also determines how cache keys are chosen when label/series result caching is enabled.",
            "FieldType": "duration",
            "FieldDefault": "1d",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_recent_metadata_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "experimental.querier.split-recent-metadata-queries-by-interval",
            "FieldDesc": "Experimental. Split interval to use for the portion of metadata request that falls within `recent_metadata_query_window`. Rest of the request which is outside the window still uses `split_metadata_queries_by_interval`. If set to 0, the entire request defaults to using a split interval of `split_metadata_queries_by_interval.`.",
            "FieldType": "duration",
            "FieldDefault": "1h",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "recent_metadata_query_window",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "experimental.querier.recent-metadata-query-window",
            "FieldDesc": "Experimental. Metadata query window inside which `split_recent_metadata_queries_by_interval` gets applied, portion of the metadata request that falls in this window is split using `split_recent_metadata_queries_by_interval`. The value 0 disables using a different split interval for recent metadata queries.\n\nThis is added to improve cacheability of recent metadata queries. Query split interval also determines the interval used in cache key. The default split interval of 24h is useful for caching long queries, each cache key holding 1 day's results. But metadata queries are often shorter than 24h, to cache them effectively we need a smaller split interval. `recent_metadata_query_window` along with `split_recent_metadata_queries_by_interval` help configure a shorter split interval for recent metadata queries.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_instant_metric_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.split-instant-metric-queries-by-interval",
            "FieldDesc": "Split instant metric queries by a time interval and execute in parallel. The value 0 disables splitting instant metric queries by time. This also determines how cache keys are chosen when instant metric query result caching is enabled.",
            "FieldType": "duration",
            "FieldDefault": "1h",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "split_ingester_queries_by_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.split-ingester-queries-by-interval",
            "FieldDesc": "Interval to use for time-based splitting when a request is within the `query_ingesters_within` window; defaults to `split-queries-by-interval` by setting to 0.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "min_sharding_lookback",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.min-sharding-lookback",
            "FieldDesc": "Limit queries that can be sharded. Queries within the time range of now and now minus this sharding lookback are not sharded. The default value of 0s disables the lookback, causing sharding of all queries at all times.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_query_bytes_read",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-query-bytes-read",
            "FieldDesc": "Max number of bytes a query can fetch. Enforced in log and metric queries only when TSDB is used. This limit is not enforced on log queries without filters. The default value of 0 disables this limit.",
            "FieldType": "int",
            "FieldDefault": "0B",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_querier_bytes_read",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "frontend.max-querier-bytes-read",
            "FieldDesc": "Max number of bytes a query can fetch after splitting and sharding. Enforced in log and metric queries only when TSDB is used. This limit is not enforced on log queries without filters. The default value of 0 disables this limit.",
            "FieldType": "int",
            "FieldDefault": "150GB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "volume_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.volume-enabled",
            "FieldDesc": "Enable log-volume endpoints.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "volume_max_series",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.volume-max-series",
            "FieldDesc": "The maximum number of aggregated series in a log-volume response",
            "FieldType": "int",
            "FieldDefault": "1000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_max_rules_per_rule_group",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.max-rules-per-rule-group",
            "FieldDesc": "Maximum number of rules per rule group per-tenant. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_max_rule_groups_per_tenant",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.max-rule-groups-per-tenant",
            "FieldDesc": "Maximum number of rule groups per-tenant. 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_tenant_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.tenant-shard-size",
            "FieldDesc": "The default tenant's shard size when shuffle-sharding is enabled in the ruler. When this setting is specified in the per-tenant overrides, a value of 0 disables shuffle sharding for the tenant.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_enable_wal_replay",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ruler.enable-wal-replay",
            "FieldDesc": "Enable WAL replay on ruler startup. Disabling this can reduce memory usage on startup at the cost of not recovering in-memory WAL metrics on restart.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_disabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Disable recording rules remote-write.",
            "FieldType": "boolean",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. The URL of the endpoint to send samples to.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Timeout for requests to the remote write endpoint.",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_headers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Custom HTTP headers to be sent along with each remote write request. Be aware that headers that are set by Loki itself can't be overwritten.",
            "FieldType": "headers",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_relabel_configs",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. List of remote write relabel configurations.",
            "FieldType": "relabel_config...",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_capacity",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Number of samples to buffer per shard before we block reading of more samples from the WAL. It is recommended to have enough capacity in each shard to buffer several requests to keep throughput up while processing occasional slow remote requests.",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_min_shards",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Minimum number of shards, i.e. amount of concurrency.",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_max_shards",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Maximum number of shards, i.e. amount of concurrency.",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_max_samples_per_send",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Maximum number of samples per send.",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_batch_send_deadline",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Maximum time a sample will wait in buffer.",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_min_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Initial retry delay. Gets doubled for every retry.",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_max_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Maximum retry delay.",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_queue_retry_on_ratelimit",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Retry upon receiving a 429 status code from the remote-write storage. This is experimental and might change in the future.",
            "FieldType": "boolean",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "ruler_remote_write_sigv4_config",
            "Required": false,
            "Block": {
              "Name": "ruler_remote_write_sigv4_config",
              "Desc": "Deprecated: Use 'ruler_remote_write_config' instead. Configures AWS's Signature Verification 4 signing process to sign every remote write request.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "region",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "access_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "secret_key",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "profile",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "role_arn",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Deprecated: Use 'ruler_remote_write_config' instead. Configures AWS's Signature Verification 4 signing process to sign every remote write request.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_write_config",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Configures global and per-tenant limits for remote write clients. A map with remote client id as key.",
            "FieldType": "map of string to RemoteWriteConfig",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_evaluation_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Timeout for a remote rule evaluation. Defaults to the value of 'querier.query-timeout'.",
            "FieldType": "duration",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ruler_remote_evaluation_max_response_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Maximum size (in bytes) of the allowable response size from a remote rule evaluation. Set to 0 to allow any response size (default).",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "deletion_mode",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "compactor.deletion-mode",
            "FieldDesc": "Deletion mode. Can be one of 'disabled', 'filter-only', or 'filter-and-delete'. When set to 'filter-only' or 'filter-and-delete', and if retention_enabled is true, then the log entry deletion API endpoints are available.",
            "FieldType": "string",
            "FieldDefault": "filter-and-delete",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "store.retention",
            "FieldDesc": "Retention period to apply to stored data, only applies if retention_enabled is true in the compactor config. As of version 2.8.0, a zero value of 0 or 0s disables retention. In previous releases, Loki did not properly honor a zero value to disable retention and a really large value should be used instead.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "slice",
            "Name": "retention_stream",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Per-stream retention to apply, if the retention is enabled on the compactor side.\nExample:\n retention_stream:\n - selector: '{namespace=\"dev\"}'\n priority: 1\n period: 24h\n- selector: '{container=\"nginx\"}'\n priority: 1\n period: 744h\nSelector is a Prometheus labels matchers that will apply the 'period' retention only if the stream is matching. In case multiple streams are matching, the highest priority will be picked. If no rule is matched the 'retention_period' is used.",
            "FieldType": "list of StreamRetentions",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": {
              "Name": "retention_stream",
              "Desc": "Per-stream retention to apply, if the retention is enabled on the compactor side.\nExample:\n retention_stream:\n - selector: '{namespace=\"dev\"}'\n priority: 1\n period: 24h\n- selector: '{container=\"nginx\"}'\n priority: 1\n period: 744h\nSelector is a Prometheus labels matchers that will apply the 'period' retention only if the stream is matching. In case multiple streams are matching, the highest priority will be picked. If no rule is matched the 'retention_period' is used.",
              "Entries": null,
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            }
          },
          {
            "Kind": "field",
            "Name": "per_tenant_override_config",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.per-user-override-config",
            "FieldDesc": "Feature renamed to 'runtime configuration', flag deprecated in favor of -runtime-config.file (runtime_config.file in YAML).",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "per_tenant_override_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.per-user-override-period",
            "FieldDesc": "Feature renamed to 'runtime configuration'; flag deprecated in favor of -runtime-config.reload-period (runtime_config.period in YAML).",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "allow_deletes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Deprecated: Use deletion_mode per tenant configuration instead.",
            "FieldType": "boolean",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "shard_streams",
            "Required": false,
            "Block": {
              "Name": "shard_streams",
              "Desc": "Define streams sharding behavior.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "shard-streams.enabled",
                  "FieldDesc": "Automatically shard streams to keep them under the per-stream rate limit. Sharding is dictated by the desired rate.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "time_sharding_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "shard-streams.time-sharding-enabled",
                  "FieldDesc": "Automatically shard streams by adding a __time_shard__ label, with values calculated from the log timestamps divided by MaxChunkAge/2. This allows the out-of-order ingestion of very old logs. If both flags are enabled, time-based sharding will happen before rate-based sharding.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "time_sharding_ignore_recent",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "shard-streams.time-sharding-ignore-recent",
                  "FieldDesc": "Logs with timestamps that are newer than this value will not be time-sharded.",
                  "FieldType": "duration",
                  "FieldDefault": "40m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "logging_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "shard-streams.logging-enabled",
                  "FieldDesc": "Whether to log sharding streams behavior or not. Not recommended for production environments.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "desired_rate",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "shard-streams.desired-rate",
                  "FieldDesc": "Threshold used to cut a new shard. Default (1536KB) means if a rate is above 1536KB/s, it will be sharded into two streams.",
                  "FieldType": "int",
                  "FieldDefault": "1536KB",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Define streams sharding behavior.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "blocked_queries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "blocked_query...",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "required_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Define a list of required selector labels.",
            "FieldType": "list of strings",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "minimum_labels_number",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Minimum number of label matchers a query should contain.",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "index_gateway_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "index-gateway.shard-size",
            "FieldDesc": "The shard size defines how many index gateways should be used by a tenant for querying. If the global shard factor is 0, the global shard factor is set to the deprecated -replication-factor for backwards compatibility reasons.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_gateway_enable_filtering",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-gateway.enable-filtering",
            "FieldDesc": "Experimental. Whether to use the bloom gateway component in the read path to filter chunks.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_build_max_builders",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.max-builders",
            "FieldDesc": "Experimental. Maximum number of builders to use when building blooms. 0 allows unlimited builders.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_build_task_max_retries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.task-max-retries",
            "FieldDesc": "Experimental. Maximum number of retries for a failed task. If a task fails more than this number of times, it is considered failed and will not be retried. A value of 0 disables this limit.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_build_builder_response_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.builder-response-timeout",
            "FieldDesc": "Experimental. Timeout for a builder to finish a task. If a builder does not respond within this time, it is considered failed and the task will be requeued. 0 disables the timeout.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_creation_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.enable",
            "FieldDesc": "Experimental. Whether to create blooms for the tenant.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_planning_strategy",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.planning-strategy",
            "FieldDesc": "Experimental. Bloom planning strategy to use in bloom creation. Can be one of: 'split_keyspace_by_factor', 'split_by_series_chunks_size'",
            "FieldType": "string",
            "FieldDefault": "split_keyspace_by_factor",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_split_series_keyspace_by",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.split-keyspace-by",
            "FieldDesc": "Experimental. Only if `bloom-build.planning-strategy` is 'split'. Number of splits to create for the series keyspace when building blooms. The series keyspace is split into this many parts to parallelize bloom creation.",
            "FieldType": "int",
            "FieldDefault": "256",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_task_target_series_chunk_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.split-target-series-chunk-size",
            "FieldDesc": "Experimental. Target chunk size in bytes for bloom tasks. Default is 20GB.",
            "FieldType": "int",
            "FieldDefault": "20GB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_block_encoding",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.block-encoding",
            "FieldDesc": "Experimental. Compression algorithm for bloom block pages.",
            "FieldType": "string",
            "FieldDefault": "none",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_prefetch_blocks",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.prefetch-blocks",
            "FieldDesc": "Experimental. Prefetch blocks on bloom gateways as soon as they are built.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_max_block_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.max-block-size",
            "FieldDesc": "Experimental. The maximum bloom block size. A value of 0 sets an unlimited size. Default is 200MB. The actual block size might exceed this limit since blooms will be added to blocks until the block exceeds the maximum block size.",
            "FieldType": "int",
            "FieldDefault": "200MB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bloom_max_bloom_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "bloom-build.max-bloom-size",
            "FieldDesc": "Experimental. The maximum bloom size per log stream. A log stream whose generated bloom filter exceeds this size will be discarded. A value of 0 sets an unlimited size. Default is 128MB.",
            "FieldType": "int",
            "FieldDefault": "128MB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "allow_structured_metadata",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.allow-structured-metadata",
            "FieldDesc": "Allow user to send structured metadata in push payload.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_structured_metadata_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.max-structured-metadata-size",
            "FieldDesc": "Maximum size accepted for structured metadata per log line.",
            "FieldType": "int",
            "FieldDefault": "64KB",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_structured_metadata_entries_count",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.max-structured-metadata-entries-count",
            "FieldDesc": "Maximum number of structured metadata entries per log line.",
            "FieldType": "int",
            "FieldDefault": "128",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "otlp_config",
            "Required": false,
            "Block": {
              "Name": "otlp_config",
              "Desc": "OTLP log ingestion configurations",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "resource_attributes",
                  "Required": false,
                  "Block": {
                    "Name": "resource_attributes",
                    "Desc": "Configuration for resource attributes to store them as index labels or Structured Metadata or drop them altogether",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "ignore_defaults",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "Configure whether to ignore the default list of resource attributes set in 'distributor.otlp.default_resource_attributes_as_index_labels' to be stored as index labels and only use the given resource attributes config",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "slice",
                        "Name": "attributes_config",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "list of attributes_configs",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": {
                          "Name": "attributes_config",
                          "Desc": "",
                          "Entries": null,
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        }
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configuration for resource attributes to store them as index labels or Structured Metadata or drop them altogether",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "slice",
                  "Name": "scope_attributes",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Configuration for scope attributes to store them as Structured Metadata or drop them altogether",
                  "FieldType": "list of attributes_configs",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": {
                    "Name": "scope_attributes",
                    "Desc": "Configuration for scope attributes to store them as Structured Metadata or drop them altogether",
                    "Entries": null,
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  }
                },
                {
                  "Kind": "slice",
                  "Name": "log_attributes",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "Configuration for log attributes to store them as index labels or Structured Metadata or drop them altogether",
                  "FieldType": "list of attributes_configs",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": {
                    "Name": "log_attributes",
                    "Desc": "Configuration for log attributes to store them as index labels or Structured Metadata or drop them altogether",
                    "Entries": null,
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  }
                },
                {
                  "Kind": "field",
                  "Name": "severity_text_as_label",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "When true, the severity_text field from log records will be stored as an index label. It is recommended not to use this option unless absolutely necessary",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "OTLP log ingestion configurations",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_ingestion_policy_until",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Block ingestion for policy until the configured date. The policy '*' is the global policy, which is applied to all streams not matching a policy and can be overridden by other policies. The time should be in RFC3339 format. The policy is based on the policy_stream_mapping configuration.",
            "FieldType": "map of string to Time",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_ingestion_until",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.block-ingestion-until",
            "FieldDesc": "Block ingestion until the configured date. The time should be in RFC3339 format.",
            "FieldType": "time",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "block_ingestion_status_code",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.block-ingestion-status-code",
            "FieldDesc": "HTTP status code to return when ingestion is blocked. If 200, the ingestion will be blocked without returning an error to the client. By Default, a custom status code (260) is returned to the client along with an error message.",
            "FieldType": "int",
            "FieldDefault": "260",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enforced_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "validation.enforced-labels",
            "FieldDesc": "List of labels that must be present in the stream. If any of the labels are missing, the stream will be discarded. This flag configures it globally for all tenants. Experimental.",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "policy_enforced_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Map of policies to enforced labels. The policy '*' is the global policy, which is applied to all streams and can be extended by other policies. Example:\n policy_enforced_labels: \n  policy1: \n    - label1 \n    - label2 \n  policy2: \n    - label3 \n    - label4\n  '*':\n    - label5",
            "FieldType": "map of string to list of strings",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "policy_stream_mapping",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "Map of policies to stream selectors with a priority. Experimental.  Example:\n policy_stream_mapping: \n  finance: \n    - selector: '{namespace=\"prod\", container=\"billing\"}' \n      priority: 2 \n  ops: \n    - selector: '{namespace=\"prod\", container=\"ops\"}' \n      priority: 1 \n  staging: \n    - selector: '{namespace=\"staging\"}' \n      priority: 1",
            "FieldType": "map of string to list of PriorityStreams",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "ingestion_partitions_tenant_shard_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.ingestion-partition-tenant-shard-size",
            "FieldDesc": "The number of partitions a tenant's data should be sharded to when using kafka ingestion. Tenants are sharded across partitions using shuffle-sharding. 0 disables shuffle sharding and tenant is sharded across all partitions.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "shard_aggregations",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "List of LogQL vector and range aggregations that should be sharded.",
            "FieldType": "list of strings",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "metric_aggregation_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.aggregation-enabled",
            "FieldDesc": "Enable metric aggregation. When enabled, pushed streams will be sampled for bytes and line counts. These metrics will be written back into Loki as a special __aggregated_metric__ stream.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "pattern_persistence_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "limits.pattern-persistence-enabled",
            "FieldDesc": "Enable persistence of patterns detected at ingest. When enabled, patterns for pushed streams will be written back into Loki as a special __pattern__ stream.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_type",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption type. Required to enable server-side encryption overrides for a specific tenant. If not set, the default S3 client settings are used.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_kms_key_id",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption KMS Key ID. Ignored if the SSE type override is not set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "s3_sse_kms_encryption_context",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "S3 server-side encryption KMS encryption context. If unset and the key ID override is set, the encryption context will not be provided to S3. Ignored if the SSE type override is not set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The limits_config block configures global and per-tenant limits in Loki. The values here can be overridden in the `overrides` section of the runtime_config file",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "frontend_worker",
      "Required": false,
      "Block": {
        "Name": "frontend_worker",
        "Desc": "The frontend_worker configures the worker - running within the Loki querier - picking up and executing queries enqueued by the query-frontend.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "frontend_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.frontend-address",
            "FieldDesc": "Address of query frontend service, in host:port format. If -querier.scheduler-address is set as well, querier will use scheduler instead. Only one of -querier.frontend-address or -querier.scheduler-address can be set. If neither is set, queries are only received via HTTP endpoint.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "scheduler_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.scheduler-address",
            "FieldDesc": "Hostname (and port) of scheduler that querier will periodically resolve, connect to and receive queries from. Only one of -querier.frontend-address or -querier.scheduler-address can be set. If neither is set, queries are only received via HTTP endpoint.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "dns_lookup_duration",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.dns-lookup-period",
            "FieldDesc": "How often to query DNS for query-frontend or query-scheduler address. Also used to determine how often to poll the scheduler-ring for addresses if the scheduler-ring is configured.",
            "FieldType": "duration",
            "FieldDefault": "3s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "id",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "querier.id",
            "FieldDesc": "Querier ID, sent to frontend service to identify requests from the same querier. Defaults to hostname.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "query_frontend_grpc_client",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures the querier gRPC client used to communicate with the query-frontend. This can't be used in conjunction with 'grpc_client_config'.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-grpc-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-grpc-client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the querier gRPC client used to communicate with the query-frontend. This can't be used in conjunction with 'grpc_client_config'.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures the querier gRPC client used to communicate with the query-frontend and with the query-scheduler. This can't be used in conjunction with 'query_frontend_grpc_client' or 'query_scheduler_grpc_client'.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.frontend-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.frontend-client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the querier gRPC client used to communicate with the query-frontend and with the query-scheduler. This can't be used in conjunction with 'query_frontend_grpc_client' or 'query_scheduler_grpc_client'.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "query_scheduler_grpc_client",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures the querier gRPC client used to communicate with the query-scheduler. This can't be used in conjunction with 'grpc_client_config'.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "querier.scheduler-grpc-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "querier.scheduler-grpc-client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures the querier gRPC client used to communicate with the query-scheduler. This can't be used in conjunction with 'grpc_client_config'.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The frontend_worker configures the worker - running within the Loki querier - picking up and executing queries enqueued by the query-frontend.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "table_manager",
      "Required": false,
      "Block": {
        "Name": "table_manager",
        "Desc": "The table_manager block configures the table manager for retention.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "throughput_updates_disabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "table-manager.throughput-updates-disabled",
            "FieldDesc": "If true, disable all changes to DB capacity",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_deletes_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "table-manager.retention-deletes-enabled",
            "FieldDesc": "If true, enables retention deletes of DB tables",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retention_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "table-manager.retention-period",
            "FieldDesc": "Tables older than this retention period are deleted. Must be either 0 (disabled) or a multiple of 24h. When enabled, be aware this setting is destructive to data!",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "poll_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "table-manager.poll-interval",
            "FieldDesc": "How frequently to poll backend to learn our capacity.",
            "FieldType": "duration",
            "FieldDefault": "2m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "creation_grace_period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "table-manager.periodic-table.grace-period",
            "FieldDesc": "Periodic tables grace period (duration which table will be created/deleted before/after it's needed).",
            "FieldType": "duration",
            "FieldDefault": "10m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "index_tables_provisioning",
            "Required": false,
            "Block": {
              "Name": "index_tables_provisioning",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enable_ondemand_throughput_mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.enable-ondemand-throughput-mode",
                  "FieldDesc": "Enables on demand throughput provisioning for the storage provider (if supported). Applies only to tables which are not autoscaled. Supported by DynamoDB",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "provisioned_write_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.write-throughput",
                  "FieldDesc": "Table default write throughput. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "1000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "provisioned_read_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.read-throughput",
                  "FieldDesc": "Table default read throughput. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "300",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "write_scale",
                  "Required": false,
                  "Block": {
                    "Name": "write_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.write-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "read_scale",
                  "Required": false,
                  "Block": {
                    "Name": "read_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.read-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inactive_throughput_on_demand_mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.inactive-enable-ondemand-throughput-mode",
                  "FieldDesc": "Enables on demand throughput provisioning for the storage provider (if supported). Applies only to tables which are not autoscaled. Supported by DynamoDB",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_write_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.inactive-write-throughput",
                  "FieldDesc": "Table write throughput for inactive tables. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_read_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.inactive-read-throughput",
                  "FieldDesc": "Table read throughput for inactive tables. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "300",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "inactive_write_scale",
                  "Required": false,
                  "Block": {
                    "Name": "inactive_write_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "inactive_read_scale",
                  "Required": false,
                  "Block": {
                    "Name": "inactive_read_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_write_scale_lastn",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.inactive-write-throughput.scale-last-n",
                  "FieldDesc": "Number of last inactive tables to enable write autoscale.",
                  "FieldType": "int",
                  "FieldDefault": "4",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_read_scale_lastn",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.index-table.inactive-read-throughput.scale-last-n",
                  "FieldDesc": "Number of last inactive tables to enable read autoscale.",
                  "FieldType": "int",
                  "FieldDefault": "4",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "chunk_tables_provisioning",
            "Required": false,
            "Block": {
              "Name": "chunk_tables_provisioning",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enable_ondemand_throughput_mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.enable-ondemand-throughput-mode",
                  "FieldDesc": "Enables on demand throughput provisioning for the storage provider (if supported). Applies only to tables which are not autoscaled. Supported by DynamoDB",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "provisioned_write_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.write-throughput",
                  "FieldDesc": "Table default write throughput. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "1000",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "provisioned_read_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.read-throughput",
                  "FieldDesc": "Table default read throughput. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "300",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "write_scale",
                  "Required": false,
                  "Block": {
                    "Name": "write_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.write-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "read_scale",
                  "Required": false,
                  "Block": {
                    "Name": "read_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.read-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inactive_throughput_on_demand_mode",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.inactive-enable-ondemand-throughput-mode",
                  "FieldDesc": "Enables on demand throughput provisioning for the storage provider (if supported). Applies only to tables which are not autoscaled. Supported by DynamoDB",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_write_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.inactive-write-throughput",
                  "FieldDesc": "Table write throughput for inactive tables. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "1",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_read_throughput",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.inactive-read-throughput",
                  "FieldDesc": "Table read throughput for inactive tables. Supported by DynamoDB",
                  "FieldType": "int",
                  "FieldDefault": "300",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "inactive_write_scale",
                  "Required": false,
                  "Block": {
                    "Name": "inactive_write_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "inactive_read_scale",
                  "Required": false,
                  "Block": {
                    "Name": "inactive_read_scale",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.enabled",
                        "FieldDesc": "Should we enable autoscale for the table.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "role_arn",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.role-arn",
                        "FieldDesc": "AWS AutoScaling role ARN",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.min-capacity",
                        "FieldDesc": "DynamoDB minimum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "3000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_capacity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.max-capacity",
                        "FieldDesc": "DynamoDB maximum provision capacity.",
                        "FieldType": "int",
                        "FieldDefault": "6000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "out_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.out-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale up.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "in_cooldown",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.in-cooldown",
                        "FieldDesc": "DynamoDB minimum seconds between each autoscale down.",
                        "FieldType": "int",
                        "FieldDefault": "1800",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale.target-value",
                        "FieldDesc": "DynamoDB target ratio of consumed capacity to provisioned capacity.",
                        "FieldType": "float",
                        "FieldDefault": "80",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_write_scale_lastn",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.inactive-write-throughput.scale-last-n",
                  "FieldDesc": "Number of last inactive tables to enable write autoscale.",
                  "FieldType": "int",
                  "FieldDefault": "4",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "inactive_read_scale_lastn",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "table-manager.chunk-table.inactive-read-throughput.scale-last-n",
                  "FieldDesc": "Number of last inactive tables to enable read autoscale.",
                  "FieldType": "int",
                  "FieldDefault": "4",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "The table_manager block configures the table manager for retention.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "memberlist",
      "Required": false,
      "Block": {
        "Name": "memberlist",
        "Desc": "Configuration for memberlist client. Only applies if the selected kvstore is memberlist.\n\nWhen a memberlist config with atleast 1 join_members is defined, kvstore of type memberlist is automatically selected for all the components that require a ring unless otherwise specified in the component's configuration section.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "node_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.nodename",
            "FieldDesc": "Name of the node in memberlist cluster. Defaults to hostname.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "randomize_node_name",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.randomize-node-name",
            "FieldDesc": "Add random suffix to the node name.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "stream_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.stream-timeout",
            "FieldDesc": "The timeout for establishing a connection with a remote node, and for read/write operations.",
            "FieldType": "duration",
            "FieldDefault": "2s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "retransmit_factor",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.retransmit-factor",
            "FieldDesc": "Multiplication factor used when sending out messages (factor * log(N+1)).",
            "FieldType": "int",
            "FieldDefault": "4",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "pull_push_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.pullpush-interval",
            "FieldDesc": "How often to use pull/push sync.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.gossip-interval",
            "FieldDesc": "How often to gossip.",
            "FieldType": "duration",
            "FieldDefault": "200ms",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_nodes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.gossip-nodes",
            "FieldDesc": "How many nodes to gossip to.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "gossip_to_dead_nodes_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.gossip-to-dead-nodes-time",
            "FieldDesc": "How long to keep gossiping to dead nodes, to give them chance to refute their death.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "dead_node_reclaim_time",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.dead-node-reclaim-time",
            "FieldDesc": "How soon can dead node's name be reclaimed with new address. 0 to disable.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compression_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.compression-enabled",
            "FieldDesc": "Enable message compression. This can be used to reduce bandwidth usage at the cost of slightly more CPU utilization.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "notify_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.notify-interval",
            "FieldDesc": "How frequently to notify watchers when a key changes. Can reduce CPU activity in large memberlist deployments. 0 to notify without delay.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "advertise_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.advertise-addr",
            "FieldDesc": "Gossip address to advertise to other members in the cluster. Used for NAT traversal.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "advertise_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.advertise-port",
            "FieldDesc": "Gossip port to advertise to other members in the cluster. Used for NAT traversal.",
            "FieldType": "int",
            "FieldDefault": "7946",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_label",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.cluster-label",
            "FieldDesc": "The cluster label is an optional string to include in outbound packets and gossip streams. Other members in the memberlist cluster will discard any message whose label doesn't match the configured one, unless the 'cluster-label-verification-disabled' configuration option is set to true.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cluster_label_verification_disabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.cluster-label-verification-disabled",
            "FieldDesc": "When true, memberlist doesn't verify that inbound packets and gossip streams have the cluster label matching the configured one. This verification should be disabled while rolling out the change to the configured cluster label in a live memberlist cluster.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "join_members",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.join",
            "FieldDesc": "Other cluster members to join. Can be specified multiple times. It can be an IP, hostname or an entry specified in the DNS Service Discovery format.",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "min_join_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.min-join-backoff",
            "FieldDesc": "Min backoff duration to join other cluster members.",
            "FieldType": "duration",
            "FieldDefault": "1s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_join_backoff",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.max-join-backoff",
            "FieldDesc": "Max backoff duration to join other cluster members.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_join_retries",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.max-join-retries",
            "FieldDesc": "Max number of retries to join other cluster members.",
            "FieldType": "int",
            "FieldDefault": "10",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "abort_if_cluster_fast_join_fails",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.abort-if-fast-join-fails",
            "FieldDesc": "Abort if this node fails the fast memberlist cluster joining procedure at startup. When enabled, it's guaranteed that other services, depending on memberlist, have an updated view over the cluster state when they're started.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "abort_if_cluster_join_fails",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.abort-if-join-fails",
            "FieldDesc": "Abort if this node fails to join memberlist cluster at startup. When enabled, it's not guaranteed that other services are started only after the cluster state has been successfully updated; use 'abort-if-fast-join-fails' instead.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "rejoin_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.rejoin-interval",
            "FieldDesc": "If not 0, how often to rejoin the cluster. Occasional rejoin can help to fix the cluster split issue, and is harmless otherwise. For example when using only few components as a seed nodes (via -memberlist.join), then it's recommended to use rejoin. If -memberlist.join points to dynamic service that resolves to all gossiping nodes (eg. Kubernetes headless service), then rejoin is not needed.",
            "FieldType": "duration",
            "FieldDefault": "0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "left_ingesters_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.left-ingesters-timeout",
            "FieldDesc": "How long to keep LEFT ingesters in the ring.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "obsolete_entries_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.obsolete-entries-timeout",
            "FieldDesc": "How long to keep obsolete entries in the KV store.",
            "FieldType": "duration",
            "FieldDefault": "30s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "leave_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.leave-timeout",
            "FieldDesc": "Timeout for leaving memberlist cluster.",
            "FieldType": "duration",
            "FieldDefault": "20s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "broadcast_timeout_for_local_updates_on_shutdown",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.broadcast-timeout-for-local-updates-on-shutdown",
            "FieldDesc": "Timeout for broadcasting all remaining locally-generated updates to other nodes when shutting down. Only used if there are nodes left in the memberlist cluster, and only applies to locally-generated updates, not to broadcast messages that are result of incoming gossip updates. 0 = no timeout, wait until all locally-generated updates are sent.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "message_history_buffer_bytes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.message-history-buffer-bytes",
            "FieldDesc": "How much space to use for keeping received and sent messages in memory for troubleshooting (two buffers). 0 to disable.",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "watch_prefix_buffer_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.watch-prefix-buffer-size",
            "FieldDesc": "Size of the buffered channel for the WatchPrefix function.",
            "FieldType": "int",
            "FieldDefault": "128",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bind_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.bind-addr",
            "FieldDesc": "IP address to listen on for gossip messages. Multiple addresses may be specified. Defaults to 0.0.0.0",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bind_port",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.bind-port",
            "FieldDesc": "Port to listen on for gossip messages.",
            "FieldType": "int",
            "FieldDefault": "7946",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "packet_dial_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.packet-dial-timeout",
            "FieldDesc": "Timeout used when connecting to other nodes to send packet.",
            "FieldType": "duration",
            "FieldDefault": "2s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "packet_write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.packet-write-timeout",
            "FieldDesc": "Timeout for writing 'packet' data.",
            "FieldType": "duration",
            "FieldDefault": "5s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_concurrent_writes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.max-concurrent-writes",
            "FieldDesc": "Maximum number of concurrent writes to other nodes.",
            "FieldType": "int",
            "FieldDefault": "3",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "acquire_writer_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.acquire-writer-timeout",
            "FieldDesc": "Timeout for acquiring one of the concurrent write slots. After this time, the message will be dropped.",
            "FieldType": "duration",
            "FieldDefault": "250ms",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "tls_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "memberlist.tls-enabled",
            "FieldDesc": "Enable TLS on the memberlist transport layer.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "",
            "Required": false,
            "Block": {
              "Name": "tls_config",
              "Desc": "The TLS configuration.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "memberlist.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The TLS configuration.",
            "Root": true,
            "Inline": true,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configuration for memberlist client. Only applies if the selected kvstore is memberlist.\n\nWhen a memberlist config with atleast 1 join_members is defined, kvstore of type memberlist is automatically selected for all the components that require a ring unless otherwise specified in the component's configuration section.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "kafka_config",
      "Required": false,
      "Block": {
        "Name": "kafka_config",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "topic",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.topic",
            "FieldDesc": "The Kafka topic name.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "dial_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.dial-timeout",
            "FieldDesc": "The maximum time allowed to open a connection to a Kafka broker.",
            "FieldType": "duration",
            "FieldDefault": "2s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "write_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.write-timeout",
            "FieldDesc": "How long to wait for an incoming write request to be successfully committed to the Kafka backend.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "reader_config",
            "Required": false,
            "Block": {
              "Name": "reader_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "kafka.reader.address",
                  "FieldDesc": "The Kafka backend address.",
                  "FieldType": "string",
                  "FieldDefault": "localhost:9092",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "kafka.reader.client-id",
                  "FieldDesc": "The Kafka client ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "writer_config",
            "Required": false,
            "Block": {
              "Name": "writer_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "kafka.writer.address",
                  "FieldDesc": "The Kafka backend address.",
                  "FieldType": "string",
                  "FieldDefault": "localhost:9092",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "client_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "kafka.writer.client-id",
                  "FieldDesc": "The Kafka client ID.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sasl_username",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.sasl-username",
            "FieldDesc": "The SASL username for authentication to Kafka using the PLAIN mechanism. Both username and password must be set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "sasl_password",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.sasl-password",
            "FieldDesc": "The SASL password for authentication to Kafka using the PLAIN mechanism. Both username and password must be set.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "consumer_group",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.consumer-group",
            "FieldDesc": "The consumer group used by the consumer to track the last consumed offset. The consumer group must be different for each ingester zone.When empty, Loki uses the ingester instance ID.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "consumer_group_offset_commit_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.consumer-group-offset-commit-interval",
            "FieldDesc": "How frequently a consumer should commit the consumed offset to Kafka. The last committed offset is used at startup to continue the consumption from where it was left.",
            "FieldType": "duration",
            "FieldDefault": "1s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "last_produced_offset_retry_timeout",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.last-produced-offset-retry-timeout",
            "FieldDesc": "How long to retry a failed request to get the last produced offset.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "auto_create_topic_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.auto-create-topic-enabled",
            "FieldDesc": "Enable auto-creation of Kafka topic if it doesn't exist.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "auto_create_topic_default_partitions",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.auto-create-topic-default-partitions",
            "FieldDesc": "When auto-creation of Kafka topic is enabled and this value is positive, Kafka's num.partitions configuration option is set on Kafka brokers with this value when Loki component that uses Kafka starts. This configuration option specifies the default number of partitions that the Kafka broker uses for auto-created topics. Note that this is a Kafka-cluster wide setting, and applies to any auto-created topic. If the setting of num.partitions fails, Loki proceeds anyways, but auto-created topics could have an incorrect number of partitions.",
            "FieldType": "int",
            "FieldDefault": "1000",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "producer_max_record_size_bytes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.producer-max-record-size-bytes",
            "FieldDesc": "The maximum size of a Kafka record data that should be generated by the producer. An incoming write request larger than this size is split into multiple Kafka records. We strongly recommend to not change this setting unless for testing purposes.",
            "FieldType": "int",
            "FieldDefault": "15983616",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "producer_max_buffered_bytes",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.producer-max-buffered-bytes",
            "FieldDesc": "The maximum size of (uncompressed) buffered and unacknowledged produced records sent to Kafka. The produce request fails once this limit is reached. This limit is per Kafka client. 0 to disable the limit.",
            "FieldType": "int",
            "FieldDefault": "1073741824",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_consumer_lag_at_startup",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.max-consumer-lag-at-startup",
            "FieldDesc": "The guaranteed maximum lag before a consumer is considered to have caught up reading from a partition at startup, becomes ACTIVE in the hash ring and passes the readiness check. Set -kafka.max-consumer-lag-at-startup to 0 to disable waiting for maximum consumer lag being honored at startup.",
            "FieldType": "duration",
            "FieldDefault": "15s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "max_consumer_workers",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.max-consumer-workers",
            "FieldDesc": "The maximum number of workers to use for processing records from Kafka.",
            "FieldType": "int",
            "FieldDefault": "1",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "enable_kafka_histograms",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "kafka.enable-kafka-histograms",
            "FieldDesc": "Enable collection of the following kafka latency histograms: read-wait, read-timing, write-wait, write-timing",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "dataobj",
      "Required": false,
      "Block": {
        "Name": "dataobj",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "consumer",
            "Required": false,
            "Block": {
              "Name": "consumer",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "builderconfig",
                  "Required": false,
                  "Block": {
                    "Name": "builderconfig",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "target_page_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.target-page-size",
                        "FieldDesc": "The size of the target page to use for the data object builder.",
                        "FieldType": "int",
                        "FieldDefault": "2MiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target_object_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.target-object-size",
                        "FieldDesc": "The size of the target object to use for the data object builder.",
                        "FieldType": "int",
                        "FieldDefault": "1GiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "target_section_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.target-section-size",
                        "FieldDesc": "Configures a maximum size for sections, for sections that support it.",
                        "FieldType": "int",
                        "FieldDefault": "128MiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.buffer-size",
                        "FieldDesc": "The size of the buffer to use for sorting logs.",
                        "FieldType": "int",
                        "FieldDefault": "16MiB",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "section_stripe_merge_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.section-stripe-merge-limit",
                        "FieldDesc": "The maximum number of stripes to merge into a section at once. Must be greater than 1.",
                        "FieldType": "int",
                        "FieldDefault": "2",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "uploader",
                  "Required": false,
                  "Block": {
                    "Name": "uploader",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "shaprefixsize",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "dataobj-consumer.sha-prefix-size",
                        "FieldDesc": "The size of the SHA prefix to use for generating object storage keys for data objects.",
                        "FieldType": "int",
                        "FieldDefault": "2",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "idle_flush_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "dataobj-consumer.idle-flush-timeout",
                  "FieldDesc": "The maximum amount of time to wait in seconds before flushing an object that is no longer receiving new writes",
                  "FieldType": "duration",
                  "FieldDefault": "1h0m0s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "querier",
            "Required": false,
            "Block": {
              "Name": "querier",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "dataobj-querier-enabled",
                  "FieldDesc": "Enable the dataobj querier.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "from",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "dataobj-querier-from",
                  "FieldDesc": "The date of the first day of when the dataobj querier should start querying from. In YYYY-MM-DD format, for example: 2018-04-15.",
                  "FieldType": "daytime",
                  "FieldDefault": "1970-01-01",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "shard_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "dataobj-querier-shard-factor",
                  "FieldDesc": "The number of shards to use for the dataobj querier.",
                  "FieldType": "int",
                  "FieldDefault": "32",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "storage_bucket_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "dataobj-storage-bucket-prefix",
            "FieldDesc": "The prefix to use for the storage bucket.",
            "FieldType": "string",
            "FieldDefault": "dataobj/",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingest_limits",
      "Required": false,
      "Block": {
        "Name": "ingest_limits",
        "Desc": "",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.enabled",
            "FieldDesc": "Enable the ingest limits service.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "active_window",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.active-window",
            "FieldDesc": "The duration for which which streams are considered active. Streams that have not been updated within this window are considered inactive and not counted towards limits.",
            "FieldType": "duration",
            "FieldDefault": "2h0m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "rate_window",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.rate-window",
            "FieldDesc": "The time window for rate calculation. This should match the window used in Prometheus rate() queries for consistency.",
            "FieldType": "duration",
            "FieldDefault": "5m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "bucket_size",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.bucket-size",
            "FieldDesc": "The size of the buckets used to calculate stream rates. Smaller buckets provide more precise rates but require more memory.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "eviction_interval",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.eviction-interval",
            "FieldDesc": "The interval at which old streams are evicted.",
            "FieldType": "duration",
            "FieldDefault": "10m0s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "num_partitions",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.num-partitions",
            "FieldDesc": "The number of partitions for the Kafka topic used to read and write stream metadata. It is fixed, not a maximum.",
            "FieldType": "int",
            "FieldDefault": "64",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "lifecycler",
            "Required": false,
            "Block": {
              "Name": "lifecycler",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "ring",
                  "Required": false,
                  "Block": {
                    "Name": "ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "consul",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "block",
                                    "Name": "",
                                    "Required": false,
                                    "Block": {
                                      "Name": "tls_config",
                                      "Desc": "The TLS configuration.",
                                      "Entries": [
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cert_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-cert-path",
                                          "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_key_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-key-path",
                                          "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_ca_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-ca-path",
                                          "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_server_name",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-server-name",
                                          "FieldDesc": "Override the expected name on the server certificate.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_insecure_skip_verify",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-insecure-skip-verify",
                                          "FieldDesc": "Skip validating server certificate.",
                                          "FieldType": "boolean",
                                          "FieldDefault": "false",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cipher_suites",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-cipher-suites",
                                          "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_min_version",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits.etcd.tls-min-version",
                                          "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        }
                                      ],
                                      "FlagsPrefix": "",
                                      "FlagsPrefixes": null
                                    },
                                    "BlockDesc": "The TLS configuration.",
                                    "Root": true,
                                    "Inline": true,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits.multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "heartbeat_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits.ring.heartbeat-timeout",
                        "FieldDesc": "The heartbeat timeout after which ingesters are skipped for reads/writes. 0 = never (timeout disabled).",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "replication_factor",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits.distributor.replication-factor",
                        "FieldDesc": "The number of ingesters to write to and read from.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "zone_awareness_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits.distributor.zone-awareness-enabled",
                        "FieldDesc": "True to enable the zone-awareness and replicate ingested samples across different availability zones.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_zones",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits.distributor.excluded-zones",
                        "FieldDesc": "Comma-separated list of zones to exclude from the ring. Instances in excluded zones will be filtered out from the ring.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.num-tokens",
                  "FieldDesc": "Number of tokens for each ingester.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to consul. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.heartbeat-timeout",
                  "FieldDesc": "Heartbeat timeout after which instance is assumed to be unhealthy. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "observe_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.observe-period",
                  "FieldDesc": "Observe tokens after generating to resolve collisions. Useful when using gossiping ring.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "join_after",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.join-after",
                  "FieldDesc": "Period to wait for a claim from another member; will join automatically after this.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_ready_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.min-ready-duration",
                  "FieldDesc": "Minimum duration to wait after the internal readiness checks have passed but before succeeding the readiness endpoint. This is used to slowdown deployment controllers (eg. Kubernetes) after an instance is ready and before they proceed with a rolling update, to give the rest of the cluster instances enough time to receive ring updates.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.lifecycler.interface",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inet6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.enable-inet6",
                  "FieldDesc": "Enable IPv6 support. Required to make use of IP addresses from IPv6 interfaces.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "final_sleep",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.final-sleep",
                  "FieldDesc": "Duration to sleep for before exiting, to ensure metrics are scraped.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.availability-zone",
                  "FieldDesc": "The availability zone where this instance is running.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown. It can be useful to disable for rolling restarts with consistent naming in conjunction with -distributor.extend-writes=false.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "readiness_check_ring_health",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.readiness-check-ring-health",
                  "FieldDesc": "When enabled the readiness probe succeeds only after all instances are ACTIVE and healthy in the ring, otherwise only the instance itself is checked. This option should be disabled if in your cluster multiple instances can be rolled out simultaneously, otherwise rolling updates may be slowed down.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.lifecycler.addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.lifecycler.port",
                  "FieldDesc": "port to advertise in consul (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits.lifecycler.ID",
                  "FieldDesc": "ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "consumer_group",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.consumer-group",
            "FieldDesc": "The consumer group for the Kafka topic used to read stream metadata records.",
            "FieldType": "string",
            "FieldDefault": "ingest-limits",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "topic",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits.topic",
            "FieldDesc": "The topic for the Kafka topic used to read and write stream metadata records.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingest_limits_frontend",
      "Required": false,
      "Block": {
        "Name": "ingest_limits_frontend",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "client_config",
            "Required": false,
            "Block": {
              "Name": "client_config",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "grpc_client_config",
                  "Required": false,
                  "Block": {
                    "Name": "grpc_client",
                    "Desc": "Configures client gRPC connections to limits service.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "max_recv_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.grpc-max-recv-msg-size",
                        "FieldDesc": "gRPC client max receive message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_send_msg_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.grpc-max-send-msg-size",
                        "FieldDesc": "gRPC client max send message size (bytes).",
                        "FieldType": "int",
                        "FieldDefault": "104857600",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "grpc_compression",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.grpc-compression",
                        "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.grpc-client-rate-limit",
                        "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                        "FieldType": "float",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rate_limit_burst",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.grpc-client-rate-limit-burst",
                        "FieldDesc": "Rate limit burst for gRPC client.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "backoff_on_ratelimits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.backoff-on-ratelimits",
                        "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.backoff-min-period",
                              "FieldDesc": "Minimum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.backoff-max-period",
                              "FieldDesc": "Maximum delay when backing off.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.backoff-retries",
                              "FieldDesc": "Number of times to backoff and retry before failing.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_stream_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.initial-stream-window-size",
                        "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "initial_connection_window_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.initial-connection-window-size",
                        "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                        "FieldType": "int",
                        "FieldDefault": "63KiB1023B",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.tls-enabled",
                        "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "",
                        "Required": false,
                        "Block": {
                          "Name": "tls_config",
                          "Desc": "The TLS configuration.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_cert_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-cert-path",
                              "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_key_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-key-path",
                              "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_server_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-server-name",
                              "FieldDesc": "Override the expected name on the server certificate.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-insecure-skip-verify",
                              "FieldDesc": "Skip validating server certificate.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_cipher_suites",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-cipher-suites",
                              "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_min_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.tls-min-version",
                              "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "The TLS configuration.",
                        "Root": true,
                        "Inline": true,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.connect-timeout",
                        "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_base_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.connect-backoff-base-delay",
                        "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_backoff_max_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.limits-client.connect-backoff-max-delay",
                        "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "cluster_validation",
                        "Required": false,
                        "Block": {
                          "Name": "cluster_validation",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "label",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.limits-client.cluster-validation.label",
                              "FieldDesc": "Optionally define the cluster validation label.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures client gRPC connections to limits service.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "pool_config",
                  "Required": false,
                  "Block": {
                    "Name": "pool_config",
                    "Desc": "Configures client gRPC connections pool to limits service.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "client_cleanup_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.client-cleanup-period",
                        "FieldDesc": "How frequently to clean up clients for ingest-limits that have gone away.",
                        "FieldType": "duration",
                        "FieldDefault": "15s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "health_check_ingest_limits",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.health-check-ingest-limits",
                        "FieldDesc": "Run a health check on each ingest-limits client during periodic cleanup.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "remote_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.remote-timeout",
                        "FieldDesc": "Timeout for the health check.",
                        "FieldType": "duration",
                        "FieldDefault": "1s",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "Configures client gRPC connections pool to limits service.",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "lifecycler",
            "Required": false,
            "Block": {
              "Name": "lifecycler",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "ring",
                  "Required": false,
                  "Block": {
                    "Name": "ring",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "kvstore",
                        "Required": false,
                        "Block": {
                          "Name": "kvstore",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "store",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.store",
                              "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                              "FieldType": "string",
                              "FieldDefault": "consul",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "prefix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "ingest-limits-frontend.prefix",
                              "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                              "FieldType": "string",
                              "FieldDefault": "collectors/",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "consul",
                              "Required": false,
                              "Block": {
                                "Name": "consul",
                                "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.hostname",
                                    "FieldDesc": "Hostname and port of Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "localhost:8500",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "acl_token",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.acl-token",
                                    "FieldDesc": "ACL Token used to interact with Consul.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "http_client_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.client-timeout",
                                    "FieldDesc": "HTTP timeout when talking to Consul",
                                    "FieldType": "duration",
                                    "FieldDefault": "20s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "consistent_reads",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.consistent-reads",
                                    "FieldDesc": "Enable consistent reads to Consul.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_rate_limit",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.watch-rate-limit",
                                    "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                                    "FieldType": "float",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "watch_burst_size",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.watch-burst-size",
                                    "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                                    "FieldType": "int",
                                    "FieldDefault": "1",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "cas_retry_delay",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.consul.cas-retry-delay",
                                    "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "etcd",
                              "Required": false,
                              "Block": {
                                "Name": "etcd",
                                "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "endpoints",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.endpoints",
                                    "FieldDesc": "The etcd endpoints to connect to.",
                                    "FieldType": "list of strings",
                                    "FieldDefault": "[]",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "dial_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.dial-timeout",
                                    "FieldDesc": "The dial timeout for the etcd connection.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_retries",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.max-retries",
                                    "FieldDesc": "The maximum number of retries to do for failed ops.",
                                    "FieldType": "int",
                                    "FieldDefault": "10",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.tls-enabled",
                                    "FieldDesc": "Enable TLS.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "block",
                                    "Name": "",
                                    "Required": false,
                                    "Block": {
                                      "Name": "tls_config",
                                      "Desc": "The TLS configuration.",
                                      "Entries": [
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cert_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-cert-path",
                                          "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_key_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-key-path",
                                          "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_ca_path",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-ca-path",
                                          "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_server_name",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-server-name",
                                          "FieldDesc": "Override the expected name on the server certificate.",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_insecure_skip_verify",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-insecure-skip-verify",
                                          "FieldDesc": "Skip validating server certificate.",
                                          "FieldType": "boolean",
                                          "FieldDefault": "false",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_cipher_suites",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-cipher-suites",
                                          "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        },
                                        {
                                          "Kind": "field",
                                          "Name": "tls_min_version",
                                          "Required": false,
                                          "Block": null,
                                          "BlockDesc": "",
                                          "Root": false,
                                          "Inline": false,
                                          "FieldFlag": "ingest-limits-frontend.etcd.tls-min-version",
                                          "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                          "FieldType": "string",
                                          "FieldDefault": "",
                                          "FieldExample": null,
                                          "Element": null
                                        }
                                      ],
                                      "FlagsPrefix": "",
                                      "FlagsPrefixes": null
                                    },
                                    "BlockDesc": "The TLS configuration.",
                                    "Root": true,
                                    "Inline": true,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "username",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.username",
                                    "FieldDesc": "Etcd username.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "password",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.etcd.password",
                                    "FieldDesc": "Etcd password.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                              "Root": true,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "multi",
                              "Required": false,
                              "Block": {
                                "Name": "multi",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "primary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.multi.primary",
                                    "FieldDesc": "Primary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "secondary",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.multi.secondary",
                                    "FieldDesc": "Secondary backend storage used by multi-client.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.multi.mirror-enabled",
                                    "FieldDesc": "Mirror writes to secondary store.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "mirror_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "ingest-limits-frontend.multi.mirror-timeout",
                                    "FieldDesc": "Timeout for storing value to secondary store.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2s",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "heartbeat_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.ring.heartbeat-timeout",
                        "FieldDesc": "The heartbeat timeout after which ingesters are skipped for reads/writes. 0 = never (timeout disabled).",
                        "FieldType": "duration",
                        "FieldDefault": "1m0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "replication_factor",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.distributor.replication-factor",
                        "FieldDesc": "The number of ingesters to write to and read from.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "zone_awareness_enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.distributor.zone-awareness-enabled",
                        "FieldDesc": "True to enable the zone-awareness and replicate ingested samples across different availability zones.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "excluded_zones",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend.distributor.excluded-zones",
                        "FieldDesc": "Comma-separated list of zones to exclude from the ring. Instances in excluded zones will be filtered out from the ring.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.num-tokens",
                  "FieldDesc": "Number of tokens for each ingester.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to consul. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.heartbeat-timeout",
                  "FieldDesc": "Heartbeat timeout after which instance is assumed to be unhealthy. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "observe_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.observe-period",
                  "FieldDesc": "Observe tokens after generating to resolve collisions. Useful when using gossiping ring.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "join_after",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.join-after",
                  "FieldDesc": "Period to wait for a claim from another member; will join automatically after this.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "min_ready_duration",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.min-ready-duration",
                  "FieldDesc": "Minimum duration to wait after the internal readiness checks have passed but before succeeding the readiness endpoint. This is used to slowdown deployment controllers (eg. Kubernetes) after an instance is ready and before they proceed with a rolling update, to give the rest of the cluster instances enough time to receive ring updates.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.lifecycler.interface",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "enable_inet6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.enable-inet6",
                  "FieldDesc": "Enable IPv6 support. Required to make use of IP addresses from IPv6 interfaces.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "final_sleep",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.final-sleep",
                  "FieldDesc": "Duration to sleep for before exiting, to ensure metrics are scraped.",
                  "FieldType": "duration",
                  "FieldDefault": "0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.availability-zone",
                  "FieldDesc": "The availability zone where this instance is running.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "unregister_on_shutdown",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.unregister-on-shutdown",
                  "FieldDesc": "Unregister from the ring upon clean shutdown. It can be useful to disable for rolling restarts with consistent naming in conjunction with -distributor.extend-writes=false.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "readiness_check_ring_health",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.readiness-check-ring-health",
                  "FieldDesc": "When enabled the readiness probe succeeds only after all instances are ACTIVE and healthy in the ring, otherwise only the instance itself is checked. This option should be disabled if in your cluster multiple instances can be rolled out simultaneously, otherwise rolling updates may be slowed down.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "address",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.lifecycler.addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.lifecycler.port",
                  "FieldDesc": "port to advertise in consul (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend.lifecycler.ID",
                  "FieldDesc": "ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "num_partitions",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits-frontend.num-partitions",
            "FieldDesc": "The number of partitions to use for the ring.",
            "FieldType": "int",
            "FieldDefault": "64",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "assigned_partitions_cache_ttl",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "ingest-limits-frontend.assigned-partitions-cache-ttl",
            "FieldDesc": "The TTL for the assigned partitions cache. 0 disables the cache.",
            "FieldType": "duration",
            "FieldDefault": "1m0s",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "ingest_limits_frontend_client",
      "Required": false,
      "Block": {
        "Name": "ingest_limits_frontend_client",
        "Desc": "",
        "Entries": [
          {
            "Kind": "block",
            "Name": "grpc_client_config",
            "Required": false,
            "Block": {
              "Name": "grpc_client",
              "Desc": "Configures client gRPC connections to limits service.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "max_recv_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.grpc-max-recv-msg-size",
                  "FieldDesc": "gRPC client max receive message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "max_send_msg_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.grpc-max-send-msg-size",
                  "FieldDesc": "gRPC client max send message size (bytes).",
                  "FieldType": "int",
                  "FieldDefault": "104857600",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "grpc_compression",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.grpc-compression",
                  "FieldDesc": "Use compression when sending messages. Supported values are: gzip, snappy, ''",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.grpc-client-rate-limit",
                  "FieldDesc": "Rate limit for gRPC client; 0 means disabled.",
                  "FieldType": "float",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "rate_limit_burst",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.grpc-client-rate-limit-burst",
                  "FieldDesc": "Rate limit burst for gRPC client.",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "backoff_on_ratelimits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.backoff-on-ratelimits",
                  "FieldDesc": "Enable backoff and retry when we hit rate limits.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "backoff_config",
                  "Required": false,
                  "Block": {
                    "Name": "backoff_config",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "min_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.backoff-min-period",
                        "FieldDesc": "Minimum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "100ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_period",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.backoff-max-period",
                        "FieldDesc": "Maximum delay when backing off.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.backoff-retries",
                        "FieldDesc": "Number of times to backoff and retry before failing.",
                        "FieldType": "int",
                        "FieldDefault": "10",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_stream_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.initial-stream-window-size",
                  "FieldDesc": "Initial stream window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "initial_connection_window_size",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.initial-connection-window-size",
                  "FieldDesc": "Initial connection window size. Values less than the default are not supported and are ignored. Setting this to a value other than the default disables the BDP estimator.",
                  "FieldType": "int",
                  "FieldDefault": "63KiB1023B",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.tls-enabled",
                  "FieldDesc": "Enable TLS in the gRPC client. This flag needs to be enabled when any other TLS flag is set. If set to false, insecure connection to gRPC server will be used.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "",
                  "Required": false,
                  "Block": {
                    "Name": "tls_config",
                    "Desc": "The TLS configuration.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "tls_cert_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-cert-path",
                        "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_key_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-key-path",
                        "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_ca_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-ca-path",
                        "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_server_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-server-name",
                        "FieldDesc": "Override the expected name on the server certificate.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_insecure_skip_verify",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-insecure-skip-verify",
                        "FieldDesc": "Skip validating server certificate.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_cipher_suites",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-cipher-suites",
                        "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tls_min_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.tls-min-version",
                        "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The TLS configuration.",
                  "Root": true,
                  "Inline": true,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.connect-timeout",
                  "FieldDesc": "The maximum amount of time to establish a connection. A value of 0 means default gRPC client connect timeout and backoff.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_base_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.connect-backoff-base-delay",
                  "FieldDesc": "Initial backoff delay after first connection failure. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "connect_backoff_max_delay",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.connect-backoff-max-delay",
                  "FieldDesc": "Maximum backoff delay when establishing a connection. Only relevant if ConnectTimeout > 0.",
                  "FieldType": "duration",
                  "FieldDefault": "5s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cluster_validation",
                  "Required": false,
                  "Block": {
                    "Name": "cluster_validation",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "label",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "ingest-limits-frontend-client.cluster-validation.label",
                        "FieldDesc": "Optionally define the cluster validation label.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures client gRPC connections to limits service.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "pool_config",
            "Required": false,
            "Block": {
              "Name": "pool_config",
              "Desc": "Configures client gRPC connections pool to limits service.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "client_cleanup_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.client-cleanup-period",
                  "FieldDesc": "How frequently to clean up clients for ingest-limits-frontend that have gone away.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "health_check_ingest_limits",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.health-check-ingest-limits",
                  "FieldDesc": "Run a health check on each ingest-limits-frontend client during periodic cleanup.",
                  "FieldType": "boolean",
                  "FieldDefault": "true",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "remote_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "ingest-limits-frontend-client.remote-timeout",
                  "FieldDesc": "Timeout for the health check.",
                  "FieldType": "duration",
                  "FieldDefault": "1s",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "Configures client gRPC connections pool to limits service.",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "runtime_config",
      "Required": false,
      "Block": {
        "Name": "runtime_config",
        "Desc": "Configuration for 'runtime config' module, responsible for reloading runtime configuration file.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "period",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "runtime-config.reload-period",
            "FieldDesc": "How often to check runtime config files.",
            "FieldType": "duration",
            "FieldDefault": "10s",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "file",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "runtime-config.file",
            "FieldDesc": "Comma separated list of yaml files with the configuration that can be updated at runtime. Runtime config files will be merged from left to right.",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configuration for 'runtime config' module, responsible for reloading runtime configuration file.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "operational_config",
      "Required": false,
      "Block": {
        "Name": "operational_config",
        "Desc": "These are values which allow you to control aspects of Loki's operation, most commonly used for controlling types of higher verbosity logging, the values here can be overridden in the `configs` section of the `runtime_config` file.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "log_stream_creation",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-stream-creation",
            "FieldDesc": "Log every new stream created by a push request (very verbose, recommend to enable via runtime config only).",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_push_request",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-push-request",
            "FieldDesc": "Log every push request (very verbose, recommend to enable via runtime config only).",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_hash_of_labels",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-hash-of-labels",
            "FieldDesc": "Log a commutative hash of the labels for all streams in a push request. In some cases this can potentially be used as an identifier of the agent sending the stream. Calculating hashes is epensive so only enable as needed.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_push_request_streams",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-push-request-streams",
            "FieldDesc": "Log every stream in a push request (very verbose, recommend to enable via runtime config only).",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "filter_push_request_streams_ips",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.filter-push-request-streams-ips",
            "FieldDesc": "Only show streams that match a provided IP address, LogPushRequestStreams must be enabled. Can be used multiple times to filter by multiple IPs.",
            "FieldType": "list of strings",
            "FieldDefault": "[]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_service_name_discovery",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-service-name-discovery",
            "FieldDesc": "Log service name discovery (very verbose, recommend to enable via runtime config only).",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_duplicate_metrics",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-duplicate-metrics",
            "FieldDesc": "Log metrics for duplicate lines received.",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "log_duplicate_stream_info",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.log-duplicate-stream-info",
            "FieldDesc": "Log stream info for duplicate lines received",
            "FieldType": "boolean",
            "FieldDefault": "false",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "limited_log_push_errors",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "operation-config.limited-log-push-errors",
            "FieldDesc": "Log push errors with a rate limited logger, will show client push errors without overly spamming logs.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "These are values which allow you to control aspects of Loki's operation, most commonly used for controlling types of higher verbosity logging, the values here can be overridden in the `configs` section of the `runtime_config` file.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "tracing",
      "Required": false,
      "Block": {
        "Name": "tracing",
        "Desc": "Configuration for tracing.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "tracing.enabled",
            "FieldDesc": "Set to false to disable tracing.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configuration for tracing.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "analytics",
      "Required": false,
      "Block": {
        "Name": "analytics",
        "Desc": "Configuration for analytics.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "reporting_enabled",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "reporting.enabled",
            "FieldDesc": "Enable anonymous usage reporting.",
            "FieldType": "boolean",
            "FieldDefault": "true",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "usage_stats_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "reporting.usage-stats-url",
            "FieldDesc": "URL to which reports are sent",
            "FieldType": "string",
            "FieldDefault": "https://stats.grafana.org/loki-usage-report",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "proxy_url",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "reporting.proxy-url",
            "FieldDesc": "URL to the proxy server",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "tls_config",
            "Required": false,
            "Block": {
              "Name": "tls_config",
              "Desc": "The TLS configuration.",
              "Entries": [
                {
                  "Kind": "field",
                  "Name": "tls_cert_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-cert-path",
                  "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_key_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-key-path",
                  "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_ca_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-ca-path",
                  "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_server_name",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-server-name",
                  "FieldDesc": "Override the expected name on the server certificate.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_insecure_skip_verify",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-insecure-skip-verify",
                  "FieldDesc": "Skip validating server certificate.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_cipher_suites",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-cipher-suites",
                  "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tls_min_version",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "reporting.tls-config.tls-min-version",
                  "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "The TLS configuration.",
            "Root": true,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configuration for analytics.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "profiling",
      "Required": false,
      "Block": {
        "Name": "profiling",
        "Desc": "Configuration for profiling options.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "block_profile_rate",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "profiling.block-profile-rate",
            "FieldDesc": "Sets the value for runtime.SetBlockProfilingRate",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "cpu_profile_rate",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "profiling.cpu-profile-rate",
            "FieldDesc": "Sets the value for runtime.SetCPUProfileRate",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "mutex_profile_fraction",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "profiling.mutex-profile-fraction",
            "FieldDesc": "Sets the value for runtime.SetMutexProfileFraction",
            "FieldType": "int",
            "FieldDefault": "0",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Configuration for profiling options.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "block",
      "Name": "common",
      "Required": false,
      "Block": {
        "Name": "common",
        "Desc": "Common configuration to be shared between multiple modules. If a more specific configuration is given in other sections, the related configuration within this section will be ignored.",
        "Entries": [
          {
            "Kind": "field",
            "Name": "path_prefix",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "common.path-prefix",
            "FieldDesc": "prefix for the path",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "storage",
            "Required": false,
            "Block": {
              "Name": "storage",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "s3",
                  "Required": false,
                  "Block": {
                    "Name": "s3_storage_config",
                    "Desc": "The s3_storage_config block configures the connection to Amazon S3 object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "s3",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.url",
                        "FieldDesc": "S3 endpoint URL with escaped Key and Secret encoded. If only region is specified as a host, proper endpoint will be deduced. Use inmemory:///<bucket-name> to use a mock in-memory implementation.",
                        "FieldType": "url",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "s3forcepathstyle",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.force-path-style",
                        "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucketnames",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.buckets",
                        "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over. Overrides any buckets specified in s3.url flag",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.endpoint",
                        "FieldDesc": "S3 Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.region",
                        "FieldDesc": "AWS region to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.access-key-id",
                        "FieldDesc": "AWS Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.secret-access-key",
                        "FieldDesc": "AWS Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "session_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.session-token",
                        "FieldDesc": "AWS Session Token",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "insecure",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.insecure",
                        "FieldDesc": "Disable https on s3 connection.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.chunk-delimiter",
                        "FieldDesc": "Delimiter used to replace the default delimiter ':' in chunk IDs when storing chunks. This is mainly intended when you run a MinIO instance on a Windows machine. You should not change this value inflight.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_config",
                        "Required": false,
                        "Block": {
                          "Name": "http_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.http.timeout",
                              "FieldDesc": "Timeout specifies a time limit for requests made by s3 Client.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.http.idle-conn-timeout",
                              "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.http.response-header-timeout",
                              "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure_skip_verify",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.http.insecure-skip-verify",
                              "FieldDesc": "Set to true to skip verifying the certificate chain and hostname.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "ca_file",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.http.ca-file",
                              "FieldDesc": "Path to the trusted CA file that signed the SSL certificate of the S3 endpoint.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "signature_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.signature-version",
                        "FieldDesc": "The signature version to use for authenticating against S3. Supported values are: v4.",
                        "FieldType": "string",
                        "FieldDefault": "v4",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_class",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.storage-class",
                        "FieldDesc": "The S3 storage class which objects will use. Supported values are: GLACIER, DEEP_ARCHIVE, GLACIER_IR, INTELLIGENT_TIERING, ONEZONE_IA, OUTPOSTS, REDUCED_REDUNDANCY, STANDARD, STANDARD_IA.",
                        "FieldType": "string",
                        "FieldDefault": "STANDARD",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "sse",
                        "Required": false,
                        "Block": {
                          "Name": "sse",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.sse.type",
                              "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.sse.kms-key-id",
                              "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "kms_encryption_context",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.sse.kms-encryption-context",
                              "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "Configures back off when S3 get Object.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.min-backoff",
                              "FieldDesc": "Minimum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.max-backoff",
                              "FieldDesc": "Maximum backoff time when s3 get Object",
                              "FieldType": "duration",
                              "FieldDefault": "3s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.s3.max-retries",
                              "FieldDesc": "Maximum number of times to retry for s3 GetObject or ObjectExists",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configures back off when S3 get Object.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "disable_dualstack",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.s3.disable-dualstack",
                        "FieldDesc": "Disable forcing S3 dualstack endpoint usage.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The s3_storage_config block configures the connection to Amazon S3 object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "gcs",
                  "Required": false,
                  "Block": {
                    "Name": "gcs_storage_config",
                    "Desc": "The gcs_storage_config block configures the connection to Google Cloud Storage object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.bucketname",
                        "FieldDesc": "Name of GCS bucket. Please refer to https://cloud.google.com/docs/authentication/production for more information about how to configure authentication.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.endpoint",
                        "FieldDesc": "Custom GCS endpoint URL.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service_account",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.service-account",
                        "FieldDesc": "Service account key content in JSON format, refer to https://cloud.google.com/iam/docs/creating-managing-service-account-keys for creation.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.chunk-buffer-size",
                        "FieldDesc": "The size of the buffer that GCS client for each PUT request. 0 to disable buffering.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.request-timeout",
                        "FieldDesc": "The duration after which the requests to GCS should be timed out.",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_opencensus",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.enable-opencensus",
                        "FieldDesc": "Enable OpenCensus (OC) instrumentation for all requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_http2",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.enable-http2",
                        "FieldDesc": "Enable HTTP2 connections.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "enable_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.gcs.enable-retries",
                        "FieldDesc": "Enable automatic retries of failed idempotent requests.",
                        "FieldType": "boolean",
                        "FieldDefault": "true",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The gcs_storage_config block configures the connection to Google Cloud Storage object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "azure",
                  "Required": false,
                  "Block": {
                    "Name": "azure_storage_config",
                    "Desc": "The azure_storage_config block configures the connection to Azure object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "environment",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.environment",
                        "FieldDesc": "Azure Cloud environment. Supported values are: AzureGlobal, AzureChinaCloud, AzureGermanCloud, AzureUSGovernment.",
                        "FieldType": "string",
                        "FieldDefault": "AzureGlobal",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "account_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.account-name",
                        "FieldDesc": "Azure storage account name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "account_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.account-key",
                        "FieldDesc": "Azure storage account key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connection_string",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.connection-string",
                        "FieldDesc": "If `connection-string` is set, the values of `account-name` and `endpoint-suffix` values will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.container-name",
                        "FieldDesc": "Name of the storage account blob container used to store chunks. This container must be created before running cortex.",
                        "FieldType": "string",
                        "FieldDefault": "loki",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint_suffix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.endpoint-suffix",
                        "FieldDesc": "Azure storage endpoint suffix without schema. The storage account name will be prefixed to this value to create the FQDN.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_managed_identity",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.use-managed-identity",
                        "FieldDesc": "Use Managed Identity to authenticate to the Azure storage account.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_federated_token",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.use-federated-token",
                        "FieldDesc": "Use Federated Token to authenticate to the Azure storage account.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_assigned_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.user-assigned-id",
                        "FieldDesc": "User assigned identity ID to authenticate to the Azure storage account.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "use_service_principal",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.use-service-principal",
                        "FieldDesc": "Use Service Principal to authenticate through Azure OAuth.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "client_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.client-id",
                        "FieldDesc": "Azure Service Principal ID(GUID).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "client_secret",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.client-secret",
                        "FieldDesc": "Azure Service Principal secret key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "tenant_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.tenant-id",
                        "FieldDesc": "Azure Tenant ID is used to authenticate through Azure OAuth.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "chunk_delimiter",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.chunk-delimiter",
                        "FieldDesc": "Chunk delimiter for blob ID to be used",
                        "FieldType": "string",
                        "FieldDefault": "-",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "download_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.download-buffer-size",
                        "FieldDesc": "Preallocated buffer size for downloads.",
                        "FieldType": "int",
                        "FieldDefault": "512000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "upload_buffer_size",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.upload-buffer-size",
                        "FieldDesc": "Preallocated buffer size for uploads.",
                        "FieldType": "int",
                        "FieldDefault": "256000",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "upload_buffer_count",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.download-buffer-count",
                        "FieldDesc": "Number of buffers used to used to upload a chunk.",
                        "FieldType": "int",
                        "FieldDefault": "1",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.request-timeout",
                        "FieldDesc": "Timeout for requests made against azure blob storage.",
                        "FieldType": "duration",
                        "FieldDefault": "30s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.max-retries",
                        "FieldDesc": "Number of retries for a request which times out.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "min_retry_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.min-retry-delay",
                        "FieldDesc": "Minimum time to wait before retrying a request.",
                        "FieldType": "duration",
                        "FieldDefault": "10ms",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retry_delay",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.azure.max-retry-delay",
                        "FieldDesc": "Maximum time to wait before retrying a request.",
                        "FieldType": "duration",
                        "FieldDefault": "500ms",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The azure_storage_config block configures the connection to Azure object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "alibabacloud",
                  "Required": false,
                  "Block": {
                    "Name": "alibabacloud_storage_config",
                    "Desc": "The alibabacloud_storage_config block configures the connection to Alibaba Cloud Storage object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.bucketname",
                        "FieldDesc": "Name of OSS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.endpoint",
                        "FieldDesc": "oss Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.access-key-id",
                        "FieldDesc": "alibabacloud Access Key ID",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.secret-access-key",
                        "FieldDesc": "alibabacloud Secret Access Key",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "conn_timeout_sec",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.conn-timeout-sec",
                        "FieldDesc": "Connection timeout in seconds",
                        "FieldType": "int",
                        "FieldDefault": "30",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "read_write_timeout_sec",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.oss.read-write-timeout-sec",
                        "FieldDesc": "Read/Write timeout in seconds",
                        "FieldType": "int",
                        "FieldDefault": "60",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The alibabacloud_storage_config block configures the connection to Alibaba Cloud Storage object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "bos",
                  "Required": false,
                  "Block": {
                    "Name": "bos_storage_config",
                    "Desc": "The bos_storage_config block configures the connection to Baidu Object Storage (BOS) object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "bucket_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.bos.bucket-name",
                        "FieldDesc": "Name of BOS bucket.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.bos.endpoint",
                        "FieldDesc": "BOS endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "bj.bcebos.com",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.bos.access-key-id",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.bos.secret-access-key",
                        "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The bos_storage_config block configures the connection to Baidu Object Storage (BOS) object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "swift",
                  "Required": false,
                  "Block": {
                    "Name": "swift_storage_config",
                    "Desc": "The swift_storage_config block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "auth_version",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.auth-version",
                        "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                        "FieldType": "int",
                        "FieldDefault": "0",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_url",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.auth-url",
                        "FieldDesc": "OpenStack Swift authentication URL",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "internal",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.internal",
                        "FieldDesc": "Set this to true to use the internal OpenStack Swift endpoint URL",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "username",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.username",
                        "FieldDesc": "OpenStack Swift username.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.user-domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.user-domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "user_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.user-id",
                        "FieldDesc": "OpenStack Swift user ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "password",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.password",
                        "FieldDesc": "OpenStack Swift API key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.domain-id",
                        "FieldDesc": "OpenStack Swift user's domain ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.domain-name",
                        "FieldDesc": "OpenStack Swift user's domain name.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.project-id",
                        "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.project-name",
                        "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.project-domain-id",
                        "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "project_domain_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.project-domain-name",
                        "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.region-name",
                        "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "container_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.container-name",
                        "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_retries",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.max-retries",
                        "FieldDesc": "Max retries on requests error.",
                        "FieldType": "int",
                        "FieldDefault": "3",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "connect_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.connect-timeout",
                        "FieldDesc": "Time after which a connection attempt is aborted.",
                        "FieldType": "duration",
                        "FieldDefault": "10s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "request_timeout",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.swift.request-timeout",
                        "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                        "FieldType": "duration",
                        "FieldDefault": "5s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http",
                        "Required": false,
                        "Block": {
                          "Name": "http",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "tls_ca_path",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.swift.http.tls-ca-path",
                              "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The swift_storage_config block configures the connection to OpenStack Object Storage (Swift) object storage backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "filesystem",
                  "Required": false,
                  "Block": {
                    "Name": "filesystem",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "chunks_directory",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.filesystem.chunk-directory",
                        "FieldDesc": "Directory to store chunks in.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "rules_directory",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.filesystem.rules-directory",
                        "FieldDesc": "Directory to store rules in.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "hedging",
                  "Required": false,
                  "Block": {
                    "Name": "hedging",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "at",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.hedge-requests-at",
                        "FieldDesc": "If set to a non-zero value a second request will be issued at the provided duration. Default is 0 (disabled)",
                        "FieldType": "duration",
                        "FieldDefault": "0s",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "up_to",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.hedge-requests-up-to",
                        "FieldDesc": "The maximum of hedge requests allowed.",
                        "FieldType": "int",
                        "FieldDefault": "2",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "max_per_second",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.hedge-max-per-second",
                        "FieldDesc": "The maximum of hedge requests allowed per seconds.",
                        "FieldType": "int",
                        "FieldDefault": "5",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "cos",
                  "Required": false,
                  "Block": {
                    "Name": "cos_storage_config",
                    "Desc": "The cos_storage_config block configures the connection to IBM Cloud Object Storage (COS) backend.",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "forcepathstyle",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.force-path-style",
                        "FieldDesc": "Set this to `true` to force the request to use path-style addressing.",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "bucketnames",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.buckets",
                        "FieldDesc": "Comma separated list of bucket names to evenly distribute chunks over.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.endpoint",
                        "FieldDesc": "COS Endpoint to connect to.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "region",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.region",
                        "FieldDesc": "COS region to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "access_key_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.access-key-id",
                        "FieldDesc": "COS HMAC Access Key ID.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "secret_access_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.secret-access-key",
                        "FieldDesc": "COS HMAC Secret Access Key.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "http_config",
                        "Required": false,
                        "Block": {
                          "Name": "http_config",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "idle_conn_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.cos.http.idle-conn-timeout",
                              "FieldDesc": "The maximum amount of time an idle connection will be held open.",
                              "FieldType": "duration",
                              "FieldDefault": "1m30s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "response_header_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.cos.http.response-header-timeout",
                              "FieldDesc": "If non-zero, specifies the amount of time to wait for a server's response headers after fully writing the request.",
                              "FieldType": "duration",
                              "FieldDefault": "0s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "backoff_config",
                        "Required": false,
                        "Block": {
                          "Name": "backoff_config",
                          "Desc": "Configures back off when cos get Object.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "min_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.cos.min-backoff",
                              "FieldDesc": "Minimum backoff time when cos get Object.",
                              "FieldType": "duration",
                              "FieldDefault": "100ms",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_period",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.cos.max-backoff",
                              "FieldDesc": "Maximum backoff time when cos get Object.",
                              "FieldType": "duration",
                              "FieldDefault": "3s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.cos.max-retries",
                              "FieldDesc": "Maximum number of times to retry when cos get Object.",
                              "FieldType": "int",
                              "FieldDefault": "5",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configures back off when cos get Object.",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "api_key",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.api-key",
                        "FieldDesc": "IAM API key to access COS.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "service_instance_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.service-instance-id",
                        "FieldDesc": "COS service instance id to use.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "auth_endpoint",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.auth-endpoint",
                        "FieldDesc": "IAM Auth Endpoint for authentication.",
                        "FieldType": "string",
                        "FieldDefault": "https://iam.cloud.ibm.com/identity/token",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "cr_token_file_path",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.cr-token-file-path",
                        "FieldDesc": "Compute resource token file path.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "trusted_profile_name",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.trusted-profile-name",
                        "FieldDesc": "Name of the trusted profile.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "trusted_profile_id",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.cos.trusted-profile-id",
                        "FieldDesc": "ID of the trusted profile.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The cos_storage_config block configures the connection to IBM Cloud Object Storage (COS) backend.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "congestion_control",
                  "Required": false,
                  "Block": {
                    "Name": "congestion_control",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "enabled",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.congestion-control.enabled",
                        "FieldDesc": "Use storage congestion control (default: disabled).",
                        "FieldType": "boolean",
                        "FieldDefault": "false",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "controller",
                        "Required": false,
                        "Block": {
                          "Name": "controller",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "strategy",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.congestion-control.strategy",
                              "FieldDesc": "Congestion control strategy to use (default: none, options: 'aimd').",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "aimd",
                              "Required": false,
                              "Block": {
                                "Name": "aimd",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "start",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.congestion-control.strategy.aimd.start",
                                    "FieldDesc": "AIMD starting throughput window size: how many requests can be sent per second (default: 2000).",
                                    "FieldType": "int",
                                    "FieldDefault": "2000",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "upper_bound",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.congestion-control.strategy.aimd.upper-bound",
                                    "FieldDesc": "AIMD maximum throughput window size: upper limit of requests sent per second (default: 10000).",
                                    "FieldType": "int",
                                    "FieldDefault": "10000",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "backoff_factor",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.congestion-control.strategy.aimd.backoff-factor",
                                    "FieldDesc": "AIMD backoff factor when upstream service is throttled to decrease number of requests sent per second (default: 0.5).",
                                    "FieldType": "float",
                                    "FieldDefault": "0.5",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "retry",
                        "Required": false,
                        "Block": {
                          "Name": "retry",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "strategy",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.congestion-control.retry.strategy",
                              "FieldDesc": "Congestion control retry strategy to use (default: none, options: 'limited').",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.congestion-control.retry.strategy.limited.limit",
                              "FieldDesc": "Maximum number of retries allowed.",
                              "FieldType": "int",
                              "FieldDefault": "2",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "hedging",
                        "Required": false,
                        "Block": {
                          "Name": "hedging",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "block",
                              "Name": "config",
                              "Required": false,
                              "Block": {
                                "Name": "config",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "at",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "duration",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "up_to",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_per_second",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "",
                                    "FieldDesc": "",
                                    "FieldType": "int",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "strategy",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.congestion-control.hedge.strategy",
                              "FieldDesc": "Congestion control hedge strategy to use (default: none, options: 'limited').",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "block",
                  "Name": "object_store",
                  "Required": false,
                  "Block": {
                    "Name": "thanos_object_store_config",
                    "Desc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
                    "Entries": [
                      {
                        "Kind": "block",
                        "Name": "s3",
                        "Required": false,
                        "Block": {
                          "Name": "s3",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.endpoint",
                              "FieldDesc": "The S3 bucket endpoint. It could be an AWS S3 endpoint listed at https://docs.aws.amazon.com/general/latest/gr/s3.html or the address of an S3-compatible service in hostname:port format.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "region",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.region",
                              "FieldDesc": "S3 region. If unset, the client will issue a S3 GetBucketLocation API call to autodetect it.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.bucket-name",
                              "FieldDesc": "S3 bucket name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secret_access_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.secret-access-key",
                              "FieldDesc": "S3 secret access key",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.access-key-id",
                              "FieldDesc": "S3 access key ID",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "session_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.session-token",
                              "FieldDesc": "S3 session token",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "insecure",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.insecure",
                              "FieldDesc": "If enabled, use http:// for the S3 endpoint instead of https://. This could be useful in local dev/test environments while using an S3-compatible backend storage, like Minio.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "list_objects_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.list-objects-version",
                              "FieldDesc": "Use a specific version of the S3 list object API. Supported values are v1 or v2. Default is unset.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket_lookup_type",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.bucket-lookup-type",
                              "FieldDesc": "Bucket lookup style type, used to access bucket in S3-compatible service. Default is auto. Supported values are: auto, path, virtual-hosted.",
                              "FieldType": "int",
                              "FieldDefault": "auto",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dualstack_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.dualstack-enabled",
                              "FieldDesc": "When enabled, direct all AWS S3 requests to the dual-stack IPv4/IPv6 endpoint for the configured region.",
                              "FieldType": "boolean",
                              "FieldDefault": "true",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "storage_class",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.storage-class",
                              "FieldDesc": "The S3 storage class to use, not set by default. Details can be found at https://aws.amazon.com/s3/storage-classes/. Supported values are: STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS, GLACIER_IR, SNOW, EXPRESS_ONEZONE",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "native_aws_auth_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.native-aws-auth-enabled",
                              "FieldDesc": "If enabled, it will use the default authentication methods of the AWS SDK for go based on known environment variables and known AWS config files.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "part_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.part-size",
                              "FieldDesc": "The minimum file size in bytes used for multipart uploads. If 0, the value is optimally computed for each object.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "send_content_md5",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.send-content-md5",
                              "FieldDesc": "If enabled, a Content-MD5 header is sent with S3 Put Object requests. Consumes more resources to compute the MD5, but may improve compatibility with object storage services that do not support checksums.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "sts_endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.sts-endpoint",
                              "FieldDesc": "Accessing S3 resources using temporary, secure credentials provided by AWS Security Token Service.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.s3.max-retries",
                              "FieldDesc": "The maximum number of retries for S3 requests that are retryable. Default is 10, set this to 1 to disable retries.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "sse",
                              "Required": false,
                              "Block": {
                                "Name": "sse",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "type",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.sse.type",
                                    "FieldDesc": "Enable AWS Server Side Encryption. Supported values: SSE-KMS, SSE-S3.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "kms_key_id",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.sse.kms-key-id",
                                    "FieldDesc": "KMS Key ID used to encrypt objects in S3",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "kms_encryption_context",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.sse.kms-encryption-context",
                                    "FieldDesc": "KMS Encryption Context used for object encryption. It expects JSON formatted string.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "http",
                              "Required": false,
                              "Block": {
                                "Name": "http",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "idle_conn_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.idle-conn-timeout",
                                    "FieldDesc": "The time an idle connection will remain idle before closing.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1m30s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "response_header_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.response-header-timeout",
                                    "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2m0s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.insecure-skip-verify",
                                    "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_handshake_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.tls-handshake-timeout",
                                    "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "expect_continue_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.expect-continue-timeout",
                                    "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.max-idle-connections",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.max-idle-connections-per-host",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.max-connections-per-host",
                                    "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "0",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.http.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "trace",
                              "Required": false,
                              "Block": {
                                "Name": "trace",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "enabled",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.s3.trace.enabled",
                                    "FieldDesc": "When enabled, low-level S3 HTTP operation information is logged at the debug level.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "gcs",
                        "Required": false,
                        "Block": {
                          "Name": "gcs",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "bucket_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.gcs.bucket-name",
                              "FieldDesc": "GCS bucket name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "service_account",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.gcs.service-account",
                              "FieldDesc": "JSON either from a Google Developers Console client_credentials.json file, or a Google Developers service account key. Needs to be valid JSON, not a filesystem path. If empty, fallback to Google default logic:\n1. A JSON file whose path is specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. For workload identity federation, refer to https://cloud.google.com/iam/docs/how-to#using-workload-identity-federation on how to generate the JSON configuration file for on-prem/non-Google cloud platforms.\n2. A JSON file in a location known to the gcloud command-line tool: $HOME/.config/gcloud/application_default_credentials.json.\n3. On Google Compute Engine it fetches credentials from the metadata server.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "chunk_buffer_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.gcs.chunk-buffer-size",
                              "FieldDesc": "The maximum size of the buffer that GCS client for a single PUT request. 0 to disable buffering.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.gcs.max-retries",
                              "FieldDesc": "The maximum number of retries for idempotent operations. Overrides the default gcs storage client behavior if this value is greater than 0. Set this to 1 to disable retries.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "azure",
                        "Required": false,
                        "Block": {
                          "Name": "azure",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "account_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.account-name",
                              "FieldDesc": "Azure storage account name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "account_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.account-key",
                              "FieldDesc": "Azure storage account key. If unset, Azure managed identities will be used for authentication instead.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connection_string",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.connection-string",
                              "FieldDesc": "If `connection-string` is set, the value of `endpoint-suffix` will not be used. Use this method over `account-key` if you need to authenticate via a SAS token. Or if you use the Azurite emulator.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "container_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.container-name",
                              "FieldDesc": "Azure storage container name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint_suffix",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.endpoint-suffix",
                              "FieldDesc": "Azure storage endpoint suffix without schema. The account name will be prefixed to this value to create the FQDN. If set to empty string, default endpoint suffix is used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.max-retries",
                              "FieldDesc": "Number of retries for recoverable errors",
                              "FieldType": "int",
                              "FieldDefault": "20",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_assigned_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.user-assigned-id",
                              "FieldDesc": "User assigned managed identity. If empty, then System assigned identity is used.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "chunk_delimiter",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.azure.chunk-delimiter",
                              "FieldDesc": "Delimiter used to replace ':' in chunk IDs when storing chunks",
                              "FieldType": "string",
                              "FieldDefault": "-",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "swift",
                        "Required": false,
                        "Block": {
                          "Name": "swift",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "application_credential_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.application-credential-id",
                              "FieldDesc": "OpenStack Swift application credential id",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "application_credential_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.application-credential-name",
                              "FieldDesc": "OpenStack Swift application credential name",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "application_credential_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.application-credential-secret",
                              "FieldDesc": "OpenStack Swift application credential secret",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "auth_version",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.auth-version",
                              "FieldDesc": "OpenStack Swift authentication API version. 0 to autodetect.",
                              "FieldType": "int",
                              "FieldDefault": "0",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "auth_url",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.auth-url",
                              "FieldDesc": "OpenStack Swift authentication URL",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.username",
                              "FieldDesc": "OpenStack Swift username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.user-domain-name",
                              "FieldDesc": "OpenStack Swift user's domain name.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.user-domain-id",
                              "FieldDesc": "OpenStack Swift user's domain ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "user_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.user-id",
                              "FieldDesc": "OpenStack Swift user ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.password",
                              "FieldDesc": "OpenStack Swift API key.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.domain-id",
                              "FieldDesc": "OpenStack Swift user's domain ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.domain-name",
                              "FieldDesc": "OpenStack Swift user's domain name.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.project-id",
                              "FieldDesc": "OpenStack Swift project ID (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.project-name",
                              "FieldDesc": "OpenStack Swift project name (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_domain_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.project-domain-id",
                              "FieldDesc": "ID of the OpenStack Swift project's domain (v3 auth only), only needed if it differs the from user domain.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "project_domain_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.project-domain-name",
                              "FieldDesc": "Name of the OpenStack Swift project's domain (v3 auth only), only needed if it differs from the user domain.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "region_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.region-name",
                              "FieldDesc": "OpenStack Swift Region to use (v2,v3 auth only).",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "container_name",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.container-name",
                              "FieldDesc": "Name of the OpenStack Swift container to put chunks in.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.max-retries",
                              "FieldDesc": "Max retries on requests error.",
                              "FieldType": "int",
                              "FieldDefault": "3",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "connect_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.connect-timeout",
                              "FieldDesc": "Time after which a connection attempt is aborted.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "request_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.swift.request-timeout",
                              "FieldDesc": "Time after which an idle request is aborted. The timeout watchdog is reset each time some data is received, so the timeout triggers after X time no data is received on a request.",
                              "FieldType": "duration",
                              "FieldDefault": "5s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "http",
                              "Required": false,
                              "Block": {
                                "Name": "http",
                                "Desc": "",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "idle_conn_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.idle-conn-timeout",
                                    "FieldDesc": "The time an idle connection will remain idle before closing.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1m30s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "response_header_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.response-header-timeout",
                                    "FieldDesc": "The amount of time the client will wait for a servers response headers.",
                                    "FieldType": "duration",
                                    "FieldDefault": "2m0s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.insecure-skip-verify",
                                    "FieldDesc": "If the client connects via HTTPS and this option is enabled, the client will accept any certificate and hostname.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_handshake_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.tls-handshake-timeout",
                                    "FieldDesc": "Maximum time to wait for a TLS handshake. 0 means no limit.",
                                    "FieldType": "duration",
                                    "FieldDefault": "10s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "expect_continue_timeout",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.expect-continue-timeout",
                                    "FieldDesc": "The time to wait for a server's first response headers after fully writing the request headers if the request has an Expect header. 0 to send the request body immediately.",
                                    "FieldType": "duration",
                                    "FieldDefault": "1s",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.max-idle-connections",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections across all hosts. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_idle_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.max-idle-connections-per-host",
                                    "FieldDesc": "Maximum number of idle (keep-alive) connections to keep per-host. If 0, a built-in default value is used.",
                                    "FieldType": "int",
                                    "FieldDefault": "100",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "max_connections_per_host",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.max-connections-per-host",
                                    "FieldDesc": "Maximum number of connections per host. 0 means no limit.",
                                    "FieldType": "int",
                                    "FieldDefault": "0",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.object-store.swift.http.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "filesystem",
                        "Required": false,
                        "Block": {
                          "Name": "filesystem",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "dir",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.filesystem.dir",
                              "FieldDesc": "Local filesystem storage directory.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "alibaba",
                        "Required": false,
                        "Block": {
                          "Name": "alibaba",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.oss.endpoint",
                              "FieldDesc": "Endpoint to connect to.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "bucket",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.oss.bucketname",
                              "FieldDesc": "Name of OSS bucket.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_id",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.oss.access-key-id",
                              "FieldDesc": "alibabacloud Access Key ID",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key_secret",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.oss.access-key-secret",
                              "FieldDesc": "alibabacloud Secret Access Key",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "bos",
                        "Required": false,
                        "Block": {
                          "Name": "bos",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "bucket",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.bos.bucket",
                              "FieldDesc": "Name of BOS bucket.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "endpoint",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.bos.endpoint",
                              "FieldDesc": "BOS endpoint to connect to.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "access_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.bos.access-key",
                              "FieldDesc": "Baidu Cloud Engine (BCE) Access Key ID.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secret_key",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.object-store.bos.secret-key",
                              "FieldDesc": "Baidu Cloud Engine (BCE) Secret Access Key.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "storage_prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.object-store.storage-prefix",
                        "FieldDesc": "Prefix for all objects stored in the backend storage. For simplicity, it may only contain digits, English alphabet letters and dashes.",
                        "FieldType": "string",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "The thanos_object_store_config block configures the connection to object storage backend using thanos-io/objstore clients. This will become the default way of configuring object store clients in future releases.\nCurrently this is opt-in and takes effect only when `-use-thanos-objstore` is set to true.",
                  "Root": true,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "persist_tokens",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "boolean",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "replication_factor",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "int",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "block",
            "Name": "ring",
            "Required": false,
            "Block": {
              "Name": "ring",
              "Desc": "",
              "Entries": [
                {
                  "Kind": "block",
                  "Name": "kvstore",
                  "Required": false,
                  "Block": {
                    "Name": "kvstore",
                    "Desc": "",
                    "Entries": [
                      {
                        "Kind": "field",
                        "Name": "store",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.ring.store",
                        "FieldDesc": "Backend storage to use for the ring. Supported values are: consul, etcd, inmemory, memberlist, multi.",
                        "FieldType": "string",
                        "FieldDefault": "consul",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "field",
                        "Name": "prefix",
                        "Required": false,
                        "Block": null,
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "common.storage.ring.prefix",
                        "FieldDesc": "The prefix for the keys in the store. Should end with a /.",
                        "FieldType": "string",
                        "FieldDefault": "collectors/",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "consul",
                        "Required": false,
                        "Block": {
                          "Name": "consul",
                          "Desc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "host",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.hostname",
                              "FieldDesc": "Hostname and port of Consul.",
                              "FieldType": "string",
                              "FieldDefault": "localhost:8500",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "acl_token",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.acl-token",
                              "FieldDesc": "ACL Token used to interact with Consul.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "http_client_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.client-timeout",
                              "FieldDesc": "HTTP timeout when talking to Consul",
                              "FieldType": "duration",
                              "FieldDefault": "20s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "consistent_reads",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.consistent-reads",
                              "FieldDesc": "Enable consistent reads to Consul.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_rate_limit",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.watch-rate-limit",
                              "FieldDesc": "Rate limit when watching key or prefix in Consul, in requests per second. 0 disables the rate limit.",
                              "FieldType": "float",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "watch_burst_size",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.watch-burst-size",
                              "FieldDesc": "Burst size used in rate limit. Values less than 1 are treated as 1.",
                              "FieldType": "int",
                              "FieldDefault": "1",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "cas_retry_delay",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.consul.cas-retry-delay",
                              "FieldDesc": "Maximum duration to wait before retrying a Compare And Swap (CAS) operation.",
                              "FieldType": "duration",
                              "FieldDefault": "1s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for a Consul client. Only applies if the selected kvstore is consul.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "etcd",
                        "Required": false,
                        "Block": {
                          "Name": "etcd",
                          "Desc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "endpoints",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.endpoints",
                              "FieldDesc": "The etcd endpoints to connect to.",
                              "FieldType": "list of strings",
                              "FieldDefault": "[]",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "dial_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.dial-timeout",
                              "FieldDesc": "The dial timeout for the etcd connection.",
                              "FieldType": "duration",
                              "FieldDefault": "10s",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "max_retries",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.max-retries",
                              "FieldDesc": "The maximum number of retries to do for failed ops.",
                              "FieldType": "int",
                              "FieldDefault": "10",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "tls_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.tls-enabled",
                              "FieldDesc": "Enable TLS.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "block",
                              "Name": "",
                              "Required": false,
                              "Block": {
                                "Name": "tls_config",
                                "Desc": "The TLS configuration.",
                                "Entries": [
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cert_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-cert-path",
                                    "FieldDesc": "Path to the client certificate, which will be used for authenticating with the server. Also requires the key path to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_key_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-key-path",
                                    "FieldDesc": "Path to the key for the client certificate. Also requires the client certificate to be configured.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_ca_path",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-ca-path",
                                    "FieldDesc": "Path to the CA certificates to validate server certificate against. If not set, the host's root CA certificates are used.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_server_name",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-server-name",
                                    "FieldDesc": "Override the expected name on the server certificate.",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_insecure_skip_verify",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-insecure-skip-verify",
                                    "FieldDesc": "Skip validating server certificate.",
                                    "FieldType": "boolean",
                                    "FieldDefault": "false",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_cipher_suites",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-cipher-suites",
                                    "FieldDesc": "Override the default cipher suite list (separated by commas). Allowed values:\n\nSecure Ciphers:\n- TLS_AES_128_GCM_SHA256\n- TLS_AES_256_GCM_SHA384\n- TLS_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n- TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\n- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\nInsecure Ciphers:\n- TLS_RSA_WITH_RC4_128_SHA\n- TLS_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA\n- TLS_RSA_WITH_AES_256_CBC_SHA\n- TLS_RSA_WITH_AES_128_CBC_SHA256\n- TLS_RSA_WITH_AES_128_GCM_SHA256\n- TLS_RSA_WITH_AES_256_GCM_SHA384\n- TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_RC4_128_SHA\n- TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n- TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n- TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  },
                                  {
                                    "Kind": "field",
                                    "Name": "tls_min_version",
                                    "Required": false,
                                    "Block": null,
                                    "BlockDesc": "",
                                    "Root": false,
                                    "Inline": false,
                                    "FieldFlag": "common.storage.ring.etcd.tls-min-version",
                                    "FieldDesc": "Override the default minimum TLS version. Allowed values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13",
                                    "FieldType": "string",
                                    "FieldDefault": "",
                                    "FieldExample": null,
                                    "Element": null
                                  }
                                ],
                                "FlagsPrefix": "",
                                "FlagsPrefixes": null
                              },
                              "BlockDesc": "The TLS configuration.",
                              "Root": true,
                              "Inline": true,
                              "FieldFlag": "",
                              "FieldDesc": "",
                              "FieldType": "",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "username",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.username",
                              "FieldDesc": "Etcd username.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "password",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.etcd.password",
                              "FieldDesc": "Etcd password.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "Configuration for an ETCD v3 client. Only applies if the selected kvstore is etcd.",
                        "Root": true,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      },
                      {
                        "Kind": "block",
                        "Name": "multi",
                        "Required": false,
                        "Block": {
                          "Name": "multi",
                          "Desc": "",
                          "Entries": [
                            {
                              "Kind": "field",
                              "Name": "primary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.multi.primary",
                              "FieldDesc": "Primary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "secondary",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.multi.secondary",
                              "FieldDesc": "Secondary backend storage used by multi-client.",
                              "FieldType": "string",
                              "FieldDefault": "",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_enabled",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.multi.mirror-enabled",
                              "FieldDesc": "Mirror writes to secondary store.",
                              "FieldType": "boolean",
                              "FieldDefault": "false",
                              "FieldExample": null,
                              "Element": null
                            },
                            {
                              "Kind": "field",
                              "Name": "mirror_timeout",
                              "Required": false,
                              "Block": null,
                              "BlockDesc": "",
                              "Root": false,
                              "Inline": false,
                              "FieldFlag": "common.storage.ring.multi.mirror-timeout",
                              "FieldDesc": "Timeout for storing value to secondary store.",
                              "FieldType": "duration",
                              "FieldDefault": "2s",
                              "FieldExample": null,
                              "Element": null
                            }
                          ],
                          "FlagsPrefix": "",
                          "FlagsPrefixes": null
                        },
                        "BlockDesc": "",
                        "Root": false,
                        "Inline": false,
                        "FieldFlag": "",
                        "FieldDesc": "",
                        "FieldType": "",
                        "FieldDefault": "",
                        "FieldExample": null,
                        "Element": null
                      }
                    ],
                    "FlagsPrefix": "",
                    "FlagsPrefixes": null
                  },
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "",
                  "FieldDesc": "",
                  "FieldType": "",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_period",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.heartbeat-period",
                  "FieldDesc": "Period at which to heartbeat to the ring. 0 = disabled.",
                  "FieldType": "duration",
                  "FieldDefault": "15s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "heartbeat_timeout",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.heartbeat-timeout",
                  "FieldDesc": "The heartbeat timeout after which compactors are considered unhealthy within the ring. 0 = never (timeout disabled).",
                  "FieldType": "duration",
                  "FieldDefault": "1m0s",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "tokens_file_path",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.tokens-file-path",
                  "FieldDesc": "File path where tokens are stored. If empty, tokens are not stored at shutdown and restored at startup.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "zone_awareness_enabled",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.zone-awareness-enabled",
                  "FieldDesc": "True to enable zone-awareness and replicate blocks across different availability zones.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "num_tokens",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.num-tokens",
                  "FieldDesc": "Number of tokens to own in the ring.",
                  "FieldType": "int",
                  "FieldDefault": "128",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "replication_factor",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.replication-factor",
                  "FieldDesc": "Factor for data replication.",
                  "FieldType": "int",
                  "FieldDefault": "3",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_id",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-id",
                  "FieldDesc": "Instance ID to register in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "<hostname>",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_interface_names",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-interface-names",
                  "FieldDesc": "Name of network interface to read address from.",
                  "FieldType": "list of strings",
                  "FieldDefault": "[<private network interfaces>]",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_port",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-port",
                  "FieldDesc": "Port to advertise in the ring (defaults to server.grpc-listen-port).",
                  "FieldType": "int",
                  "FieldDefault": "0",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_addr",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-addr",
                  "FieldDesc": "IP address to advertise in the ring.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_availability_zone",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-availability-zone",
                  "FieldDesc": "The availability zone where this instance is running. Required if zone-awareness is enabled.",
                  "FieldType": "string",
                  "FieldDefault": "",
                  "FieldExample": null,
                  "Element": null
                },
                {
                  "Kind": "field",
                  "Name": "instance_enable_ipv6",
                  "Required": false,
                  "Block": null,
                  "BlockDesc": "",
                  "Root": false,
                  "Inline": false,
                  "FieldFlag": "common.storage.ring.instance-enable-ipv6",
                  "FieldDesc": "Enable using a IPv6 instance address.",
                  "FieldType": "boolean",
                  "FieldDefault": "false",
                  "FieldExample": null,
                  "Element": null
                }
              ],
              "FlagsPrefix": "",
              "FlagsPrefixes": null
            },
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_interface_names",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "list of strings",
            "FieldDefault": "[<private network interfaces>]",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "instance_addr",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "",
            "FieldDesc": "",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "common.compactor-address",
            "FieldDesc": "the http address of the compactor in the form http://host:port",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          },
          {
            "Kind": "field",
            "Name": "compactor_grpc_address",
            "Required": false,
            "Block": null,
            "BlockDesc": "",
            "Root": false,
            "Inline": false,
            "FieldFlag": "common.compactor-grpc-address",
            "FieldDesc": "the grpc address of the compactor in the form host:port",
            "FieldType": "string",
            "FieldDefault": "",
            "FieldExample": null,
            "Element": null
          }
        ],
        "FlagsPrefix": "",
        "FlagsPrefixes": null
      },
      "BlockDesc": "Common configuration to be shared between multiple modules. If a more specific configuration is given in other sections, the related configuration within this section will be ignored.",
      "Root": true,
      "Inline": false,
      "FieldFlag": "",
      "FieldDesc": "",
      "FieldType": "",
      "FieldDefault": "",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "shutdown_delay",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "shutdown-delay",
      "FieldDesc": "How long to wait between SIGTERM and shutdown. After receiving SIGTERM, Loki will report 503 Service Unavailable status via /ready endpoint.",
      "FieldType": "duration",
      "FieldDefault": "0s",
      "FieldExample": null,
      "Element": null
    },
    {
      "Kind": "field",
      "Name": "metrics_namespace",
      "Required": false,
      "Block": null,
      "BlockDesc": "",
      "Root": false,
      "Inline": false,
      "FieldFlag": "metrics-namespace",
      "FieldDesc": "Namespace of the metrics that in previous releases had cortex as namespace. This setting is deprecated and will be removed in the next minor release.",
      "FieldType": "string",
      "FieldDefault": "loki",
      "FieldExample": null,
      "Element": null
    }
  ],
  "FlagsPrefix": "",
  "FlagsPrefixes": null
}
