let rec jsonSchema = (import "schema.ncl")
in
{
  Input | default = [],
  Output | force
    =
      std.typeof Input
      |> match {
        'Record => let version = std.array.first Input.spec.versions in jsonSchema.json_schema_to_nickel version.schema.openAPIV3Schema false,
        'Array =>
          (
            Input
            |> std.array.filter (fun e => std.typeof e == 'Record && e.kind == "CustomResourceDefinition")
            |> std.array.fold_right
              (fun e acc =>
                let group = e.spec.group in
                let kind = e.spec.names.kind in
                let versions = std.array.first e.spec.versions in
                std.array.fold_right
                  (fun e acc =>
                    let field = "\"%{group}\"." ++ e.name ++ "." ++ kind in
                    acc ++ "%{field} \n = %{jsonSchema.json_schema_to_nickel (versions.schema.openAPIV3Schema) false},\n"
                  )
                  acc
                  e.spec.versions
              )
              m%"# DO NOT EDIT THIS FILE MANUALLY
        # Auto Generated Contracts
let lib = import "lib.ncl" in
      {"%
          )
          ++ "}"
      },
}
